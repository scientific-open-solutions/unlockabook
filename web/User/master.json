{
  "data": {
    "servers": {
      "ocollector.org": {
        "server": "ocollector.org",
        "registration_url": "https://ocollector.org/Register_Cat_0_ghwys8ijwe0znbagdlepw6.php",
        "storage_url": "https://ocollector.org/StoreData_Cat_0_ahsd8elnqwhela0w8emzbxvaow.php"
      },
      "open-collector.org": {
        "server": "open-collector.org",
        "registration_url": "https://open-collector.org/Register10_jshenkfdhwber82gfm374b.php",
        "storage_url": "https://open-collector.org/StoreData10_jshenkfdhwber82gfm374b.php"
      }
    }
  },
  "exp_mgmt": {
    "any_loaded": false,
    "authenticated": false,
    "current_manager": "",
    "incomp_process": false,
    "pipe_position": 0,
    "pipe_direction": "",
    "versions": [],
    "project": "",
    "projects": {
      "group_a": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,flashcards_sheet,survey,\r\n0,instruct,,Some of these flashcards will be competitive.,off,,,\r\n2,flashcard,user,This is the start of a new experiment.,off,flashcards.csv,,",
          "fdsa.csv": "item,code,max time,text,shuffle 1,\r\n2,instruct,user,This is the start of a new experiment.,off,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,\"\"\"Flashcard group\"\"\",stimuli_1.csv,procedure_1.csv,off,,on,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\nc,carrot,\r\n,,",
          "flashcards.csv": "cue,answer,font-size,image,image_front,image_back,Competition,\r\nSynaesthesia,\"Derived from the greek ‘synth’ (meaning together) and ethesia (sensation).\nThe joining of two senses, one sensory or cognitive pathway connects to another which results in involuntary experiences in another sensory or cognitive pathway\n60-100 different forms of synaesthesia have been identified (Simner, 2013)\n\",15px,../User/Stimuli/flashcards/synaesthesia.jpg,yes,,yes,\r\nModified stroop task,\"Ink colour is the same as the word written.\nThis test identifies if synaesthesia is automatic/pre-attentive.\nMeier & Rothen (2009): This study was able to train non-synaesthetic individuals to behave like synaesthetes\",15px,../User/Stimuli/flashcards/stroop.jpg,,yes,no,\r\n\"Visual search \",\"A perceptual task which involves scanning for a target among distracting objects, the target number stood out by its unique synaesthetic colour. <br>\nThis test identifies if synaesthesia is automatic/pre-attentive\",15px,../User/Stimuli/flashcards/visual_search.jpg,,,yes,\r\n\"Cross activation theory \",\"Ramachandran and Hubbard, 2001)\n<br><br>\nAreas in the brain that are involved in colour (V4) are adjacent to the visual word form area (VWFA). They hypothesised that reduced neural pruning causes activation in the V4 area in response to graphemes/words.\",15px,../User/Stimuli/flashcards/cross_activation_theory.jpg,yes,,no,\r\n\"Disinhibited feedback theory \",\"(Grossenbacher and Lovelace, 2001)\n<br>\nThere is stronger feedback from higher-level cortical regions in synaesthetes even though they do have normal connectivity patterns. Suggests that the activation of colour in the brain occurs after the processing of graphemes.<br>\nThese cortical regions control language, vision, recognising objects and awareness.\",15px,../User/Stimuli/flashcards/disinhibited_feedback.jpg,,yes,yes,\r\nGrapheme/colour synaethesia,The activation of colour (in the brain) when seeing letters. This is the most common type of synaesthesia,15px,../User/Stimuli/flashcards/grapheme_colour.jpg,,,no,\r\n\"Sound/colour synaesthesia \",\"The activation of colour (in the brain) when hearing different sounds and noises. There is commonly a link between pitch and lightness (with lightness increasing as pitch does).<br>\nSound-colour synaesthetes demonstrate increased activity in the left inferior parietal cortex.\",15px,../User/Stimuli/flashcards/sound_colour.jpg,yes,,yes,\r\nLexical /gustatory synaesthesia,\"Lexical-gustatory synesthesia causes an experience to an automatic and highly consistent taste or smell. These tastes are evoked by an inducer which stimulates the sensation and activates the taste experience concurrently (Ward, 2007)\",15px,../User/Stimuli/flashcards/egg_lexical_gustatory.jpg,,yes,no,\r\n\"Mirror/ touch synarsthesia \",\"Experiencing the same physical sensations as someone else (in the same part or opposite part of the body). This type of synaesthesia has been associated with increased empathy (Banissy & Ward, 2007) and increased emotion discrimination (Banissy et al., 2011)\",15px,../User/Stimuli/flashcards/mirror_touch.jpg,,,yes,\r\nSynaesthetic heritability,\"Found to run in families. (Baron-Cohen et al, 1996)<br>\nIn monozygotic twins, only one of them were found to have it (so not 100% concordance between monozygotic twins). Also found to skip generations.<br>\nAffects up to 1 in 23 people (Simner et al., 2006)\",15px,../User/Stimuli/flashcards/heritability.jpg,yes,,no,\r\nSequence-space synaesthesia,\"A form of synaesthesia in which ordinal sequences such as letters of the alphabet or months of the year are perceived to occupy spatial locations in the mind’s eye. As a variety of visuospatial mental imagery, these individual may reflect known fractionation of imagery processes (Price and Mentzani, 2008)\",15px,../User/Stimuli/flashcards/sequence_space.jpg,,yes,yes,\r\nAuditory-tactile synaesthesia,\"A type of synaesthesia where sound induces physical sensation, which may be perceived in specific parts of the body. Can be accquired from early age, however is a long process of correlating both auditory and sensory tactile inputs with meaningful interpretations (Winawer, 2013)\",15px,../User/Stimuli/flashcards/auditory_tactile.jpg,,,no,\r\n,,,,,,,"
        },
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw=",
        "surveys": {},
        "trialtypes": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
          "flashcard": "<!--\r\n  Flashcard trialtype\r\n  Authors:\r\n    Harry Sullivan\r\n    Dr. Anthony Haffey\r\n    University of Reading\r\n    \r\n---development---\r\n[\r\n  {\"text\":\"your practice text\"; }\r\n]\r\n---development---\r\n\r\n\r\n-->\r\n\r\n\r\n<style>\r\n.card_btn{\r\n  width:100%;\r\n  margin:1px;\r\n}\r\n\r\n.flashcard_box{\r\n  border: 2px solid teal;\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n\r\n#everything{\r\n  margin:auto;\r\n  width:620px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: right;\r\n}\r\n#flashcard_image{\r\n  display:none;\r\n  width: 200px;\r\n  height:200px\r\n}\r\n</style>\r\n\r\n<body>\r\n<div id=\"everything\">\r\n  <h5>Perception and Neuroscience Flashcards</h5>\r\n  <p class=\"text-right\">Select a flashcard from the panel on the left and use the buttons below to flip the card or hide it.</p>\r\n  <p class=\"text-right\">You will be alerted once 30 minutes have elapsed.</p>\r\n  <table id=\"card_table\">\r\n    <tr>\r\n      <td id=\"card_list\"></td>\r\n      <td>\r\n          <div class=\"flashcard_box\" id=\"box_0\">\r\n            <div id=\"flashcard_text\"></div>\r\n            <img id=\"flashcard_image\"/>\r\n          </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td> </td>\r\n      <td>\r\n        <button type=\"button\" onclick=\"frontFlip()\" class=\"btn btn-primary\">Front</button>\r\n        <button type=\"button\" onclick=\"backFlip()\" class=\"btn btn-primary\">Back</button>\r\n      </div>\r\n    </td>\r\n  </table>\r\n</div>\r\n</body>\r\n\r\n<script>\r\n\r\nvar flashcards_sheet = \"{{flashcards_sheet}}\".toLowerCase();\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[flashcards_sheet]) !== \"undefined\"){\r\n  var cards_array = parent.parent.Collector.PapaParsed(\r\n    parent.parent.exp_json.all_stims[flashcards_sheet]\r\n  );\r\n  \r\n  if(parent.parent.Study.is_exe){\r\n    var home_dir = parent.parent.Collector\r\n      .electron\r\n      .fs\r\n      .home_dir();\r\n    cards_array = cards_array.map(function(row){\r\n      row.image = row.image.replace(\"../User\", home_dir + \"/User\")\r\n      return row;\r\n    });\r\n  }\r\n  \r\n} else {\r\n  \r\n  cards_array = [\r\n    {\r\n      answer: \"Derived from the greek ‘synth’ (meaning together) and ethesia (sensation).<br>The joining of two senses, one sensory or cognitive pathway connects to another which results in involuntary experiences in another sensory or cognitive pathway↵60-100 different forms of synaesthesia have been identified (Simner, 2013)\",\r\n      cue: \"synaesthesia\",\r\n      \"font-size\": \"20px\"\r\n    },\r\n    {\r\n      answer: \"Ink colour is the same as the word written.<br>This test identifies if synaesthesia is automatic/pre-attentive. <br> Meier & Rothen (2009): This study was able to train non-synaesthetic individuals to behave like synaesthetes\",\r\n      cue: \"Modified stroop task\",\r\n      \"font-size\": \"20px\"\r\n    }\r\n  ]\r\n}\r\n\r\nvar current_card = 0; // this acts as a placeholder for the current flashcard\r\nvar no_of_cards = cards_array.length;\r\nvar cues = cards_array.map(function(card, index){\r\n  return \"<button onClick='loadCard(this.id)' class='btn btn-primary btn-sm card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.cue + \"</button><br>\";\r\n});\r\n\r\n$(\"#card_list\").html(cues);\r\nfunction loadCard(clicked_id) {\r\n  var this_card = cards_array[clicked_id][\"cue\"];\r\n  $(\".flashcard_box\").html(this_card);\r\n  current_card = clicked_id;\r\n}\r\n\r\nfunction backFlip() {\r\n  $(\".flashcard_box\").css(\r\n    \"font-size\",\r\n    cards_array[current_card][\"font-size\"]\r\n  );\r\n  $(\".flashcard_box\").css(\"line-height\",\"normal\");\r\n  var this_card = cards_array[current_card][\"answer\"];\r\n  //image\timage_front\timage_back\r\n\r\n  /// D:/github/sos/collector-dev/web/User/Stimuli/flashcards/stroop.jpg\r\n  // ../User/Stimuli/flashcards/synaesthesia.jpg\r\n\r\n\r\n  if(cards_array[current_card].image_back == \"yes\"){\r\n    $(\"#flashcard_image\").attr(\"src\", cards_array[current_card].image);\r\n    $(\"#flashcard_image\").show();\r\n  } else {\r\n    $(\"#flashcard_image\").hide();\r\n  }\r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\nfunction hideMe(){\r\n  $(\"#flashcard_text\").html(\"\")\r\n}\r\nfunction frontFlip(){\r\n  var this_card = cards_array[current_card][\"cue\"];\r\n  $(\".flashcard_box\").css(\"font-size\",\"25px\");\r\n  $(\".flashcard_box\").css(\"line-height\",\"200px\");\r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\n\r\nwindow.setTimeout(Trial.submit(), 1800000); //1800000ms = 30 mins\r\n\r\n</script>\r\n",
          "survey": "<!--\r\n  Author: Dr. Anthony Haffey\r\n\r\n  Collector: Cat/Kitten/Cat release\r\n  A program for running experiments on the web\r\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\r\n\r\n  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\n  Kitten/Cat release (2019-2021) author: Dr. Anthony Haffey\r\n\r\n  (team@someopen.solutions)\r\n-->\r\n<style>\r\nbody{\r\n  background-color:#5F9EA0;\r\n  width:100%;\r\n  height:100%;\r\n}\r\ntd{\r\n  padding:10px;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\n*\telements by id\r\n*/\r\n\r\n#content{\r\n  width:95%;\r\n}\r\n#proceed_button{\r\n  display:none;\r\n  float:right;\r\n}\r\n#survey_outline{\r\n\tposition: \t\t\t\t\tfixed;\r\n  top: \t\t\t\t\t\t\t\t50%;\r\n  left: \t\t\t\t\t\t\t50%;\r\n\theight: \t\t\t\t\t\t90%;\r\n\toverflow: \t\t\t\t\tauto;\r\n\t-webkit-transform: \ttranslate(-50%, -50%);\r\n  transform: \t\t\t\t\ttranslate(-50%, -50%);\r\n  background-color: \twhite;\r\n\tmin-width:        \t900px;\r\n\tmax-width:        \t9000px;\r\n\tborder-radius:    \t20px;\r\n  border-color:     \t#069;\r\n  border-style:     \tsolid;\r\n  border-width:     \t5px;\r\n\tpadding:            10px;\r\n}\r\n#survey_tabs{\r\n  padding:            20px;\r\n}\r\n#this_survey_id{\r\n  padding:            20px;\r\n  display:            none;\r\n}\r\n\r\n/*\r\n*\telements by class\r\n*/\r\n.feedback_span_multiple{\r\n  display: none;\r\n  margin:  10px;\r\n}\r\n.feedback_span_single{\r\n  display: none;\r\n  padding: 10px;\r\n}\r\n.likert_table td{\r\n  padding:    1px;\r\n  text-align: center;\r\n}\r\n.likert_table td:hover{\r\n  color: blue;\r\n}\r\n.score_total{\r\n  display: none;\r\n}\r\n.show_tab{\r\n  margin: 5px;\r\n}\r\n.survey_btn{\r\n\twhite-space: normal;\r\n\tword-wrap: \t initial;\r\n}\r\n.table_break{\r\n\twidth:    100%;\r\n\theight:   300px;\r\n\toverflow: auto;\r\n}\r\n\r\n\r\n/*\r\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\r\n*/\r\n::-webkit-scrollbar {\r\n  width: 14px;\r\n  height: 18px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  height: 6px;\r\n  border: 4px solid rgba(0, 0, 0, 0);\r\n  background-clip: padding-box;\r\n\t-webkit-border-radius: 7px;\r\n  background-color: rgba(0, 102, 153, 0.5);\r\n  -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05), inset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n}\r\n::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n  display: none;\r\n}\r\n::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n<div id=\"everything\">\r\n\t<div id=\"survey_outline\"></div>\r\n</div>\r\n<span id=\"scales_span\"></span>\r\n<script>\r\n/*\r\n* Retrieving settings\r\n*/\r\n\r\nif(typeof(settings) !== \"undefined\"){\r\n  settings = [settings];\r\n} else {\r\n  settings = {};\r\n}\r\n\r\n/*\r\n* vertical vs. horizontal tabs\r\n*/\r\n\r\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\r\n  settings.tab_hor_vert = \"horizontal\";\r\n  var please_wait = $(\"<div>\");\r\n  var this_survey = $(\"<div>\");\r\n  var survey_tabs = $(\"<div>\");\r\n  var proceed_btn = $(\"<input>\");\r\n  please_wait.attr(\"id\", \"please_wait_div\")\r\n             .html(\"Loading... Please wait\");\r\n  this_survey.addClass(\"needs-validation\")\r\n             .attr(\"id\", \"this_survey_id\")\r\n             .attr(\"novalidate\", true);\r\n  survey_tabs.attr(\"id\", \"survey_tabs\")\r\n             .addClass(\"border-top\")\r\n             .addClass(\"border-primary\")\r\n             .css(\"text-align\", \"right\")\r\n  proceed_btn.addClass(\"btn\")\r\n             .addClass(\"btn-primary\")\r\n             .attr(\"id\", \"proceed_button\")\r\n             .attr(\"type\", \"submit\")\r\n             .attr(\"value\", \"Proceed\")\r\n  $(\"#survey_outline\").append(please_wait)\r\n                      .append(this_survey)\r\n                      .append(survey_tabs)\r\n                      .append(proceed_btn);\r\n\r\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\r\n  $(\"#survey_outline\").html(\r\n    '<table>' +\r\n      '<tr>' +\r\n        '<td valign=\"top\" class=\"border-right border-primary\">'+\r\n          '<div id=\"survey_tabs\"></div>' +\r\n        '</td>' +\r\n        '<td>'+\r\n          '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n          '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\r\n          '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\r\n        '</td>'+\r\n      '</tr>'+\r\n    '</table>'\r\n  );\r\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\r\n  $(\"#survey_outline\").html(\r\n    '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\r\n    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'\r\n  );\r\n} else {\r\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\r\n}\r\n\r\n/*\r\n* Defining objects\r\n*/\r\n\r\npage_break_management = {\r\n  breaks_remaining : 0,\r\n  breaks_index     : 0\r\n}\r\n\r\nproceed_object = {\r\n  type:[],\r\n  name:[],\r\n  break_no:[]\r\n};\r\n\r\nscoring_object={\r\n  scales:[],\r\n  scale_scores:[],\r\n  update_scales:function(this_survey){\r\n    headers = Object.keys(this_survey[0]);\r\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\r\n    var scales_html = '';\r\n    this.scales.forEach(function(element){\r\n      element = element.replace(\": \",\":\");\r\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\r\n    });\r\n    $(\"#scales_span\").html(scales_html);\r\n  }\r\n}\r\n\r\nsurvey_obj = {};\r\n\r\n/*\r\n* Element actions\r\n*/\r\n\r\n/*\r\n$(function() {\r\n  $( \".datepicker\" ).datepicker({\r\n    dateFormat : 'mm/dd/yy',\r\n    changeMonth : true,\r\n    changeYear : true,\r\n    yearRange: '-100y:c+nn',\r\n    maxDate: '-1d'\r\n  });\r\n});\r\n*/\r\n\r\n\r\n$('#ExperimentContainer').css('transform','scale(1,1)');\r\n\r\n$(\"#proceed_button\").on(\"click\",function(){\r\n  var proceed = true;\r\n  var tabs    = document.getElementsByClassName('show_tab active');\r\n  if(tabs.length > 0){\r\n    var current_tab       = document.getElementsByClassName(\r\n      'show_tab active')[0]\r\n        .id\r\n        .replace(\"_button\", \"\")\r\n        .replace(\"tab_\",    \"\");\r\n    var response_elements = $('#table_'+current_tab).find('.response_element');\r\n\r\n  } else {\r\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\r\n  }\r\n\r\n  for(var i = 0; i < response_elements.length; i++){\r\n    [row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\r\n    var this_optional = survey_obj.data[row_no].optional.toLowerCase();\r\n\r\n    if(this_optional.indexOf(\"no\") !== -1){\r\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\r\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\r\n        var min_resp_length = 1;\r\n      } else if(this_optional.length == 2) {\r\n        var min_resp_length = this_optional[1];\r\n      } else {\r\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\r\n        return false;\r\n      }\r\n    } else {\r\n      min_resp_length = 0;\r\n    }\r\n\r\n\r\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\r\n    if (quest_resp.length < min_resp_length){\r\n      proceed = false;\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\r\n    } else {\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\r\n    }\r\n  }\r\n\r\n  if(current_tab == survey_obj.tabs && proceed){\r\n    if(typeof(sql_surveys) == \"undefined\"){\r\n      //$(\".table_break\");\r\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\r\n\r\n      if($(\".table_break#table\"+next_table_no).length == 0){\r\n        if(typeof(Trial) !== \"undefined\"){\r\n          Trial.submit();\r\n        } else {\r\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\r\n        }\r\n      } else {\r\n        $(\".table_break\").hide();\r\n        $(\".table_break#table\" + next_table_no).show();\r\n      }\r\n    } else {\r\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\r\n    }\r\n  } else if(current_tab < survey_obj.tabs && proceed) {\r\n    current_tab ++;\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\r\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-dark\");\r\n    $(\"#tab_\"+current_tab+\"_button\").click();\r\n  } else if(proceed == false){\r\n    bootbox.alert(\"You're missing some responses. Please fill in all the answers for the questions in red above.\");\r\n  } else if(current_tab > survey_obj.tabs){\r\n    bootbox.alert(\"Error - please contact Scientific Open Solutions about this problem, error 'Survey_001'.\");\r\n  }\r\n});\r\n\r\n//by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\r\nString.prototype.replaceAll = function(str1, str2, ignore){\r\n  return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n}\r\n\r\n\r\n/*\r\nFunctions\r\n*/\r\n\r\nfunction clean_item(this_item){\r\n  if(this_item.indexOf(\"'\") !== -1 |\r\n     this_item.indexOf('\"') !== -1){\r\n    bootbox.alert(\"Please avoid apostraphes or quote marks in the responses the participant can give. These cause problems with smooth running of surveys. This occurs when you wrote:<br><br>\" + this_item);\r\n  }\r\n  return(this_item);\r\n}\r\n\r\nfunction generate_feedback_string(feedback_array, this_index, feedback_color, row){\r\n  if(feedback_array){                 //i.e. if it's not null\r\n    if(feedback_array.length > 1){\r\n      return \"<div class='feedback_span_multiple \"+row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    } else {\r\n      return \"<div class='feedback_span_single \" +\r\n      row[\"item_name\"].toLowerCase() + \"_feedback' style='color:\" +\r\n      feedback_color[this_index] +\r\n      \"'>\" +\r\n      feedback_array[this_index] +\r\n      \"</div>\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction get_feedback(row){\r\n  if(typeof(row[\"feedback\"]) !== \"undefined\" && row[\"feedback\"] !== \"\"){\r\n    feedback_array = row[\"feedback\"].split(\"|\");\r\n    if(typeof(row[\"feedback_color\"]) == \"undefined\"){\r\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\r\n    }\r\n    feedback_color = row[\"feedback_color\"].split(\"|\");\r\n  } else {\r\n    feedback_array = null;\r\n    feedback_color = '';\r\n  }\r\n  return [feedback_array,feedback_color];\r\n}\r\n\r\nfunction isJSON(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction likert_update(this_element){\r\n\r\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\r\n\r\n  $(\".row_\"+row_no).removeClass(\"active\");\r\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\r\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\r\n  $(this_element).removeClass(\"btn-outline-primary\");\r\n  $(this_element).addClass(\"btn-primary\");\r\n  $(\"#survey_\"+item_name+\"_response\").val(this_element.value);\r\n  response_check(this_element);\r\n}\r\n\r\nfunction load_survey(survey){\r\n  /*\r\n  * are we in preview?\r\n  */\r\n  if(typeof(parent.collector_survey_preview) !== \"undefined\"){\r\n    survey_content = survey;\r\n  } else if(typeof(parent.master_json) !== \"undefined\" && parent.master_json.surveys.preview){\r\n    survey_content = survey;\r\n    survey_obj.mods = parent.master_json.mods;\r\n  } else {\r\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\r\n\r\n    if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n       typeof(parent.parent.exp_json.surveys[survey]) !== \"undefined\"){\r\n      survey_content = parent.parent.exp_json.surveys[survey];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\r\n    } else if(\r\n      typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n      typeof(parent.parent.exp_json.surveys[\r\n        survey.replace(\".csv\",\"\")\r\n      ])\r\n    ){\r\n\t\t\tsurvey_content = parent.parent.exp_json.surveys[survey.replace(\".csv\",\"\")];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\t\t}\telse {\r\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\r\n    }\r\n  }\r\n  process_returned_questionnaire(survey_content);\r\n}\r\n\r\nfunction process_question(row, row_no){\r\n  row.values = row.values == \"\" ? row.answers : row.values;\r\n  if(row_check(\"page_break\", row)){\r\n    page_break_management.breaks_remaining++;\r\n    question_td = \"</tr></table><table id='table\" +\r\n      page_break_management.breaks_remaining +\r\n      \"' style='display:none' class='table_break'></tr>\";\r\n  } else {\r\n    if(\r\n      typeof(row[\"values\"]) !== \"undefined\" & typeof(row[\"values\"]) !== \"function\"\r\n    ){ //to address microsoft edge issue.\r\n      value_array = row[\"values\"].split(\"|\");\r\n    } else {\r\n      value_array='';\r\n    }\r\n\r\n    if(row[\"item_name\"].indexOf(\" \") !== -1){\r\n      bootbox.alert(\"Please note that the 'item name' '\" +\r\n        row['item_name'] +\r\n        \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\"\r\n      );\r\n    }\r\n\r\n    /*\r\n    * class for scoring\r\n    */\r\n\r\n    var this_class = \"\";\r\n    for(var i=0;i<scoring_object.scales.length;i++){\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\r\n          \"score: \",\"\"\r\n        ).replace(/ |-/,\"\") + \" \";\r\n      }\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\r\n      }\r\n    }\r\n\r\n    /*\r\n    * adding to row to help with \"write\" function\r\n    */\r\n    var row_x = JSON.parse(\r\n      JSON.stringify(row)\r\n    );\r\n    row_x[\"row_no\"] = row_no;\r\n    row_x[\"this_class\"] = this_class;\r\n\r\n    [feedback_array,feedback_color] = get_feedback(row);\r\n\r\n\r\n    question_td = '<input type=\"hidden\" class=\"response_element row_' + row_no + '\" id=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" name=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" value=\"\">';\r\n\r\n    /*\r\n    * Survey settings\r\n    */\r\n    [row_ques_perc,row_resp_perc] = row_perc(row[\"question_width\"]);\r\n\r\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\r\n      settings.feedback_before_response = true;\r\n    }\r\n\r\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\r\n      settings.lock_after_feedback = false;\r\n    }\r\n\r\n    if(typeof(row[\"type\"]) == \"undefined\"){\r\n      return false;\r\n    }\r\n\r\n    if(\r\n      typeof(survey_obj.mods) !== \"undefined\" &&\r\n\t\t\ttypeof(survey_obj.mods[row.type]) !== \"undefined\"\r\n    ){\r\n      var mod_html = survey_obj.mods[row.type].contents;\r\n\r\n      Object.keys(row).forEach(function(attribute){\r\n        mod_html = mod_html.replaceAll(\"{{\"+attribute+\"}}\",row[attribute]);\r\n      });\r\n      question_td += mod_html;\r\n    } else {\r\n      switch(row[\"type\"].toLowerCase()){\r\n        case \"page_start\":\r\n          var tabs_html = $(\"#survey_tabs\").html();\r\n          if(settings.tab_hor_vert == \"horizontal\"){\r\n            span_div = \"span\";\r\n          } else if(settings.tab_hor_vert == \"vertical\"){\r\n            span_div = \"div\";\r\n          }\r\n          if(typeof(survey_obj.tabs) == \"undefined\"){\r\n            survey_obj.tabs = 0;\r\n          } else {\r\n            survey_obj.tabs++;\r\n          }\r\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\r\n            active_button = \"btn-outline-primary active\";\r\n          } else {\r\n            active_button = \"btn-secondary disabled\";\r\n          }\r\n          if(settings.tab_hor_vert == \"vertical\"){\r\n            var vert_btn_block = \"btn-block\";\r\n          } else {\r\n            var vert_btn_block = \"\";\r\n          }\r\n\r\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\r\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ row['text'] +\r\n            '</label>'+\r\n          '</'+span_div+'>';\r\n\r\n          $(\"#survey_tabs\").html(tabs_html);\r\n\r\n          page_break_indexes = [];\r\n          survey_obj.data.forEach(function(row,this_index){\r\n            if(typeof(row.type) !== \"undefined\" && row.type.toLowerCase() == \"page_start\"){\r\n              page_break_indexes.push(this_index);\r\n            }\r\n          });\r\n\r\n          if(survey_obj.tabs > 0){\r\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\" + survey_obj.tabs + \"' style='display:none'><table id='table_\" + survey_obj.tabs + \"' class='table_break'><tr>\";\r\n          } else {\r\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          }\r\n          break;\r\n        case \"checkbox\":\r\n        case \"checkbox_vertical\":\r\n          question_td += write(\"checkbox_vertical\",row_x);\r\n          break;\r\n        case \"checkbox_horizontal\":\r\n          question_td += write(\"checkbox_horizontal\",row_x);\r\n          break;\r\n        case \"checkbox_single\":\r\n          question_td += write(\"checkbox_single\", row_x);\r\n          break;\r\n        case \"date\":\r\n          question_td += write(\"date\",row_x);\r\n        break;\r\n        case \"dropdown\":\r\n\t\t\t\tcase \"select\":\r\n          question_td += write(\"dropdown\",row_x);\r\n        break;\r\n        case \"email\":\r\n          question_td += write(\"email\", row_x);\r\n        break;\r\n        case \"google_slide\":\r\n        case \"jumbled\":\r\n        case \"instruct\":\r\n          // these are defined elsewhere to take the whole row\r\n          break;\r\n        case \"likert\":\r\n          question_td += write(\"likert\", row_x);\r\n        break;\r\n        case \"number\":\r\n          question_td += write(\"number\", row_x);\r\n          break;\r\n        case \"para\":\r\n          question_td += write(\"para\", row_x);\r\n          break;\r\n        case \"radio\":\r\n        case \"radio_vertical\":\r\n          question_td += write(\"radio_vertical\", row_x);\r\n          break;\r\n        case \"radio_horizontal\":\r\n          question_td += write(\"radio_horizontal\", row_x);\r\n        break;\r\n\r\n        case \"report_score\":\r\n            question_td += \"<input disabled class='form-control score_\" + row[\"item_name\"] + \" \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+row['item_name'].toLowerCase()+\"'>\";\r\n        break;\r\n\r\n        case \"text\":\r\n          question_td += write(\"text\", row_x);\r\n        break;\r\n      }\r\n    }\r\n    if(feedback_array){\r\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+row[\"item_name\"].toLowerCase()+\"_feedback' onclick='reveal_answers(this)'>Show</button>\";\r\n    }\r\n  }\r\n  if(typeof(row[\"type\"])== \"undefined\"){\r\n      return '';\r\n  } else {\r\n    if(row[\"type\"].toLowerCase() == \"instruct\"){\r\n      row_html  = write(\"instruct\",row);\r\n    } else if(row[\"type\"].toLowerCase() == \"jumbled\"){\r\n      row_html  = write(\"jumbled\",row);\r\n\t\t} else if(row[\"type\"].toLowerCase() == \"likert\"){\r\n\r\n\t\t\tif(typeof(row[\"side_by_side\"]) !== \"undefined\" &&\r\n\t\t\t\t row[\"side_by_side\"].toLowerCase() == \"yes\"){\r\n\r\n\t\t\t\tvar row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar row_html = \"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2'>\" +\r\n\t\t\t\t\t\t\trow[\"text\"] +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\" +\r\n\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2' align='center'>\" +\r\n\t\t\t\t\t\t\tquestion_td +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\";\r\n\t\t\t}\r\n\r\n\r\n    } else if(row[\"type\"].toLowerCase()==\"google_slide\") {\r\n      var row_html=\"<td colspan='2'>\"+row[\"text\"]+\"</label></td>\";\r\n    } else if(typeof(row[\"no_text\"]) !== \"undefined\" && row[\"no_text\"] == \"on\"){\r\n      var row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\r\n    } else {\r\n      if(row['text'].toLowerCase() == \"page_start\" | row['type'].toLowerCase() == \"page_start\"){\r\n        row_html = question_td;\r\n      } else {\r\n        var row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n      }\r\n    }\r\n    if(typeof(row[\"optional\"]) !== \"undefined\"){\r\n      if(row[\"optional\"].toLowerCase() == \"no\"){\r\n        proceed_object.name.push(row[\"item_name\"]);\r\n        proceed_object.type.push(row[\"type\"]);\r\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\r\n      }\r\n    }\r\n    if(typeof(row[\"shuffle_question\"]) == \"undefined\" || row[\"shuffle_question\"].toLowerCase() == \"off\"){\r\n      this_shuffle='none';\r\n    } else {\r\n      this_shuffle=row[\"shuffle_question\"];\r\n    }\r\n    return [row_html,this_shuffle];\r\n  }\r\n}\r\n\r\nfunction process_score(row_no, values_col, this_response, item, values_reverse ){\r\n  item_values = survey_obj.data[row_no][values_col].split(\"|\");\r\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\r\n    item_values.reverse();\r\n  }\r\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\r\n  var this_value    = item_values[item_answers.indexOf(this_response)];\r\n  $(\"#survey_\" + item + \"_score\").val(this_value);\r\n  if(typeof(this_value) !== \"undefined\"){\r\n    return parseFloat(this_value);\r\n  }\r\n}\r\n\r\nfunction process_returned_questionnaire(data){\r\n  survey_obj.data = data;\r\n  survey_obj.data = Papa.parse(\r\n    Papa.unparse(survey_obj.data),{\r\n      header:true,\r\n      beforeFirstChunk: function(chunk) {\r\n        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\r\n        var headings = rows[0].toLowerCase();\r\n        rows[0] = headings;\r\n        return rows.join(\"\\r\\n\");\r\n      },\r\n    }\r\n  ).data;\r\n  survey_obj.scales = {};\r\n  var col_headers = Object.keys(survey_obj.data[0]);\r\n  col_headers.forEach(function(header){\r\n    if(header.indexOf(\"score:\")==0){\r\n      var original_header = header;\r\n      header = header.replace(\"score: \",\"\");\r\n      header = header.replace(\"score:\",\"\");\r\n      survey_obj.scales[header] = {};\r\n      survey_obj.scales[header].questions = {};\r\n\r\n      for(var i = 1; i < survey_obj.data.length; i++){\r\n        row = survey_obj.data[i];\r\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\r\n          survey_obj.scales[header].questions[i] = row[original_header];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  write_survey(survey_obj.data,\"this_survey_id\");\r\n  $(\"#please_wait_div\").hide();\r\n  $(\"#proceed_button\").show();\r\n  $('html, body').animate({\r\n    scrollTop: $(\"#survey_outline\").offset().top\r\n  }, 1000);\r\n}\r\n\r\nfunction row_perc(this_rat){\r\n\tif(typeof(this_rat) == \"undefined\"){\r\n    row_resp_perc = \"50%\";\r\n    row_ques_perc = \"50%\";\r\n  } else {\r\n    row_resp_perc = parseFloat(100-this_rat.replace(\"%\",\"\"))+\"%\";\r\n    row_ques_perc = parseFloat(this_rat.replace(\"%\",\"\"))+\"%\";\r\n  }\r\n  return [row_ques_perc,row_resp_perc];\r\n}\r\n\r\nfunction response_check(submitted_element){\r\n  switch(submitted_element.type){\r\n    case \"checkbox\":\r\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\r\n      if(checked_responses.length){ //i.e. more than 0\r\n        var values = [];\r\n        for(var i = 0; i < checked_responses.length; i++){\r\n          values.push(checked_responses[i].value);\r\n        }\r\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\r\n      } else {\r\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\r\n      }\r\n      break;\r\n\r\n      case \"button\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.innerHTML\r\n        );\r\n      break;\r\n\r\n      case \"number\":\r\n      case \"radio\":\r\n      case \"select-one\":\r\n      case \"text\":\r\n      case \"textarea\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.value\r\n        );\r\n      break;\r\n    }\r\n    update_score();\r\n}\r\n\r\nfunction retrieve_row_no_item_name(this_element){\r\n  var these_classes = this_element.className.split(\" \");\r\n  var row_no;\r\n  var item_name;\r\n  these_classes.forEach(function(this_class){\r\n    if (this_class.indexOf('row_') > -1) {\r\n      row_no = this_class.replace(\"row_\",\"\");\r\n    }\r\n    if (this_class.indexOf('_item') > -1) {\r\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\r\n    }\r\n  });\r\n  return [row_no,item_name];\r\n}\r\n\r\nfunction reveal_answers(this_element){\r\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\r\n  response_present = this_response == \"\" ? false : true;\r\n\r\n  if(settings.feedback_before_response == false && response_present == false){\r\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\r\n  } else {\r\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\r\n      if(settings.lock_after_feedback){\r\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\r\n        $(\".\"+item_class).prop(\"disabled\",true);\r\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).html(\"Locked\");\r\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\r\n        $(\"#\"+this_element.id).addClass(\"disabled\");\r\n      } else {\r\n        $(\"#\"+this_element.id).html(\"Hide\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n      }\r\n    } else {\r\n      $(\"#\"+this_element.id).html(\"Show\");\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\r\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\r\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction row_check(type, row){\r\n  if(type = \"page_break\"){\r\n    return (\r\n      typeof(row[\"text\"]) !== \"undefined\" &&\r\n\t\t  typeof(row[\"type\"]) !== \"undefined\" &&\r\n\t\t  row['text'].toLowerCase() == \"page_break\" |\r\n      row['type'].toLowerCase() == \"page_break\"\r\n    )\r\n\r\n  } else if(type=\"\"){\r\n\r\n  }\r\n}\r\n\r\n// http://stackoverflow.com/questions/962802#962890\r\nfunction shuffle(array) {\r\n  var tmp, current, top = array.length;\r\n  if(top) while(--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction shuffle_answers(row){\r\n  if(\r\n    typeof(row[\"shuffle_answers\"]) !== \"undefined\" &&\r\n    row[\"shuffle_answers\"].toLowerCase() == \"yes\"\r\n  ){\r\n    var answers = row[\"answers\"].split(\"|\");\r\n    order = shuffle([...Array(answers.length).keys()]);\r\n\r\n    var ordered_answers = order.map(function(position){\r\n      return answers[position];\r\n    });\r\n    row[\"answers\"] = ordered_answers.join(\"|\");\r\n\r\n    if(row[\"values\"].indexOf(\"|\") !== -1){\r\n      var values = row[\"values\"].split(\"|\");\r\n      var ordered_values = order.map(function(position){\r\n        return values[position];\r\n      });\r\n      row[\"values\"] = ordered_values.join(\"|\");\r\n    }\r\n  }\r\n  return row;\r\n}\r\n\r\nfunction update_score(){\r\n  var scales = Object.keys(survey_obj.scales);\r\n  scales.forEach(function(scale){\r\n    this_scale = survey_obj.scales[scale];\r\n    var questions = Object.keys(this_scale.questions);\r\n    var this_score = 0;\r\n    complete_score = true;\r\n\r\n    questions.forEach(function(row_no){\r\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\r\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\r\n      var normal_reverse = this_scale.questions[row_no];\r\n\r\n      if(normal_reverse.indexOf(\"-\") == -1){\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,\"values\",this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,\"values\",this_response,item);\r\n        }\r\n      } else {\r\n        values_reverse = normal_reverse.split(\"-\");\r\n        values_col     = values_reverse[0].toLowerCase();\r\n        normal_reverse = values_reverse[1];\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,values_col,this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,values_col,this_response,item);\r\n        }\r\n      }\r\n      if(typeof(this_value) !== \"undefined\"){\r\n        this_score += multiplier * this_value;\r\n      } else {\r\n        complete_score = false;\r\n      }\r\n    });\r\n    if(complete_score){\r\n      $(\".score_\"+scale).addClass(\"bg-success\");\r\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\r\n    } else {\r\n      $(\".score_\"+scale).removeClass(\"text-success\");\r\n      $(\".score_\"+scale).addClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\r\n    }\r\n    $(\".score_\"+scale).val(this_score);\r\n  });\r\n}\r\n\r\nfunction write(type, row){\r\n  var this_html = \"\";\r\n  [feedback_array, feedback_color] = get_feedback(row);\r\n  row = shuffle_answers(row);\r\n  row[\"item_name\"] = row[\"item_name\"].toLowerCase();\r\n\r\n  if(type == \"checkbox_horizontal\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-checkbox\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"checkbox\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-checkbox\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_single\"){\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.attr(\"data-toggle\", \"buttons\");\r\n        this_div.addClass(\"btn-group-toggle\");\r\n    var this_label = $(\"<label>\");\r\n        this_label.addClass(\"btn\");\r\n        this_label.addClass(\"btn-outline-primary\");\r\n        this_label.html(row[\"answers\"]);\r\n    var this_checkbox = $(\"<input>\");\r\n        this_checkbox[0].id = row[\"item_name\"];\r\n        this_checkbox[0].name = \"survey_\" +\r\n          row[\"item_name\"].toLowerCase();\r\n        this_checkbox[0].type = \"checkbox\";\r\n        this_checkbox.attr(\"checked\",true);\r\n        this_checkbox\r\n          .addClass(\"response\")\r\n          .addClass(\r\n            row[\"item_name\"] +\r\n            '_item row_' +\r\n            row[\"row_no\"]\r\n          );\r\n    this_div.append(this_label);\r\n    this_label.append(this_checkbox)\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    for(var i = 0; i < options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color, row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\");\r\n      var this_checkbox = $(\"<input>\");\r\n          this_checkbox[0].id= row[\"item_name\"]+ i;\r\n          this_checkbox[0].type = \"checkbox\";\r\n          this_checkbox[0].name = 'survey_'+\r\n            row[\"item_name\"].toLowerCase();\r\n          this_checkbox\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"item_name\"] + \"_item_row\");\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerHTML = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_checkbox)\r\n              .append(this_label);\r\n\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"date\"){\r\n    var input = $(\"<input>\");\r\n        input.addClass(\"response\")\r\n             .addClass(\"custom-control\")\r\n             .addClass(\"datepicker\")\r\n             .addClass(\"date\")\r\n             .addClass(row[\"item_name\"] + \"_item\")\r\n             .addClass(\"row_\" + row[\"row_no\"])\r\n             .attr(\"name\", \"survey_\" + row['item_name'])\r\n             .attr(\"type\", \"text\");\r\n\r\n  } else if(type == \"dropdown\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_dropdown = $(\"<select>\");\r\n        this_dropdown.addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(\"txt-primary\")\r\n          .addClass(row[\"item_name\"] + \"_item\")\r\n          .addClass(\"row_\" + row[\"row_no\"])\r\n          .addClass(\"collector_button\")\r\n          .attr(\"name\", \"survey_\" + row[\"item_name\"])\r\n          .css(\"margin\", \"0px\")\r\n          .css(\"width\", \"auto\");\r\n\r\n    this_dropdown.append(\"<option selected disabled hidden>-- no option selected --</option>\");\r\n    options.forEach(function(this_option){\r\n      this_dropdown.append(\r\n        \"<option>\" + this_option + \"</option>\"\r\n      );\r\n    });\r\n    var this_html = this_dropdown[0].outerHTML;\r\n\r\n  } else if(type == \"email\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .attr(\"type\", \"email\")\r\n          .attr(\"name\", 'survey_' + row['item_name']);\r\n\r\n  } else if(type == \"instruct\"){\r\n    this_html += \"<td colspan='2'>\" + row[\"text\"] + \"</td>\";\r\n  } else if(type == \"jumbled\"){\r\n    var this_td = $(\"<td>\");\r\n        this_td.attr(\"colspan\",2) ;\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.addClass(\"form-inline\")\r\n                .addClass(\"bg-secondary\")\r\n                .addClass(\"text-white\")\r\n                .css(\"width\", \"100%\")\r\n                .css(\"padding\", \"20px\")\r\n                .css(\"margin\", \"20px\")\r\n                .css(\"border-radius\", \"5px\");\r\n\r\n    var question = row[\"text\"].split(\"|\");\r\n    questions_html = question.map(function(text,index){\r\n      if(index == question.length - 1){\r\n        return text;\r\n      } else {\r\n        var row_x = row;\r\n        row_x[\"item_name_old\"] = row_x[\"item_name\"];\r\n        row_x[\"item_name\"]     = row_x[\"item_name\"] + \"_\" + index;\r\n        var row_html = text + write(\"dropdown\", row_x)\r\n          .replace(\"margin: 0px\",\"margin: 5px\");\r\n        row_x[\"item_name\"] = row_x[\"item_name_old\"];\r\n        return row_html;\r\n      }\r\n    }).join(\"\");\r\n\r\n    this_td.append(this_div);\r\n    this_div.append(questions_html);\r\n\r\n    this_html = this_td[0].outerHTML;\r\n\r\n  } else if(type == \"likert\"){\r\n    // set styles\r\n    if(typeof(row[\"btn_width\"]) == \"undefined\"){\r\n      row[\"btn_width\"] = \"auto\"\r\n    }\r\n    if(typeof(row[\"side_width\"]) == \"undefined\"){\r\n      var side_width = \"auto\";\r\n    }\r\n\r\n    // create and build these elements\r\n    var this_div = $(\"<div>\");\r\n    if(typeof(row[\"side_text\"]) !== \"undefined\" &&\r\n      row[\"side_text\"] !== \"\"\r\n    ){\r\n      side_text = row[\"side_text\"].split(\"|\");\r\n      side_text = side_text.map(function(this_side){\r\n        var this_span = $(\"<span>\");\r\n            this_span.css(\"width\", side_width)\r\n                     .css(\"padding\", \"20px\")\r\n                     .addClass(\"text-primary\")\r\n                     .html(\"<b>\" + this_side + \"</b>\");\r\n        return this_span[0].outerHTML;\r\n      });\r\n    } else {\r\n      side_text = [\"\",\"\"];\r\n    }\r\n\r\n    this_div\r\n      .addClass(\"btn-group\")\r\n      .addClass(\"btn-group-toggle\")\r\n      .append(side_text[0])\r\n      .attr(\"data-togle\",\"buttons\");\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length;i++){\r\n      var this_button = $(\"<button>\");\r\n          this_button\r\n            .attr(\"autocomplete\", \"off\")\r\n            .attr(\"id\", 'likert_' + row[\"row_no\"] + '_' + i)\r\n            .attr(\"onclick\",'likert_update(this)')\r\n            .attr(\"value\", values[i])\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-outline-primary\")\r\n            .addClass(\"survey_btn\")\r\n            .addClass(\r\n              row[\"item_name\"] + '_item row_' + row[\"row_no\"]\r\n            )\r\n            .css(\"width\", row[\"btn_width\"])\r\n            .html(clean_item(options[i]));\r\n      this_div.append(this_button);\r\n    }\r\n    this_div.append(side_text[1]);\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"number\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type = \"number\";\r\n        this_input[0].name = 'survey_' + row['item_name'];\r\n        this_input\r\n          .addClass(\"response\")\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\r\n    this_html += this_input[0].outerHTML;\r\n\r\n  } else if(type == \"para\"){\r\n    var this_textarea = $(\"<textarea>\");\r\n        this_textarea[0].name = \"survey_\" + row['item_name'];\r\n        this_textarea\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\");\r\n        this_textarea.css(\"width\", \"100%\")\r\n                     .css(\"height\", \"200px\");\r\n    this_html += this_textarea[0].outerHTML;\r\n\r\n  } else if(type == \"radio_horizontal\"){\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"radio\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-radio\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"radio_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color,row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type  = \"radio\";\r\n          this_input[0].id    = row[\"item_name\"] + i;\r\n          this_input[0].value = options[i];\r\n          this_input[0].name  = 'survey_' + row[\"item_name\"];\r\n          this_input\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"response\")\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\")\r\n            .addClass(row[\"item_name\"] + \"_item_row_\" + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"]+i;\r\n          this_label.addClass(\"custom-control-label\");\r\n          this_label.html(options[i]);\r\n      this_div\r\n        .append(this_input)\r\n        .append(this_label)\r\n        .append(feedback_string);\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"text\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type=\"text\";\r\n        this_input[0].name=\"survey_\" + row['item_name'];\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\")\r\n    this_html += this_input[0].outerHTML;\r\n  }\r\n\r\n  switch(type){\r\n    case \"checkbox_vertical\":\r\n    case \"radio_vertical\":\r\n      // do nothing\r\n      break;\r\n    default:\r\n      this_html += generate_feedback_string(\r\n        feedback_array,\r\n        0,\r\n        feedback_color,\r\n        row\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (this_html);\r\n}\r\n\r\nfunction write_survey(this_survey, this_id){\r\n  scoring_object.update_scales(this_survey);\r\n  survey_html = \"<table class='table_break' id='table0'>\";\r\n  this_survey_object={\r\n    content:[],\r\n    shuffle_question:[],\r\n    content_new_order:[],\r\n    shuffled_content:[],\r\n    shuffled_arrays:{},\r\n  }\r\n\r\n  survey_html += \"<tr>\";\r\n  for(i = 0; i < this_survey.length; i++){\r\n    row = this_survey[i];\r\n    row_html = process_question(row,i);\r\n\t\tthis_survey_object.content.push(row_html[0]);\r\n    this_survey_object.shuffle_question.push(row_html[1]);\r\n\t}\r\n\r\n\tunique_shuffles = this_survey_object.shuffle_question.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\r\n\r\n\tfor(var i=0;i<unique_shuffles.length;i++){\r\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\r\n      unique_shuffles[i] !== \"none\" &&\r\n      unique_shuffles[i] !== \"\"){\r\n        shuffled_content = this_survey_object.shuffle_question.map(function(element,index){\r\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\r\n  \t       return this_survey_object.content[index];\r\n    \t   }\r\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\r\n    \tnew_order = shuffle(shuffled_content);\r\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\r\n    }\r\n\t}\r\n\r\n\tfor(var i=0;i<this_survey_object.content.length;i++){\r\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle_question[i]);\r\n    if(this_index !== -1){\r\n      //take first item off relevant list and delete item\r\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\r\n      this_survey_object.content_new_order[i]=this_item;\r\n    } else {\r\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\r\n    }\r\n\t}\r\n\r\n\tqs_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\r\n\tqs_in_order += \"</tr>\";\r\n\r\n\tsurvey_html += qs_in_order;\r\n\tsurvey_html += \"</table>\";\r\n\r\n\t$(\"#\" + this_id).html(survey_html);\r\n\r\n  $(\".response\").on(\"change\", function(){\r\n    response_check(this);\r\n  })\r\n\r\n  $(\"#\" + this_id).show(1000); //scroll to top\r\n\r\n\t$(\".show_tab\").on(\"click\",function(){\r\n    if(this.className.indexOf(\"disabled\") == -1){\r\n      $(\".show_tab\").removeClass(\"active\");\r\n      $(\".survey_page\").hide();\r\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\r\n    } else {\r\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\r\n    }\r\n\t});\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\r\n}\r\n\r\n/*\r\n* Load survey\r\n*/\r\ncurrent_survey = \"{{survey}}\";\r\nif(typeof(Trial) !== \"undefined\"){\r\n  Trial.set_timer(function(){\r\n    load_survey(current_survey);\r\n  },100);\r\n} else {\r\n  load_survey(current_survey);\r\n}\r\n</script>\r\n"
        },
        "procs_csv": {},
        "stims_csv": {}
      },
      "group_b": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,survey,timer_style,\r\n0,instruct,user,\"<iframe width=\"\"640\"\" height=\"\"360\"\" src=\"\"https://web.microsoftstream.com/embed/video/64816bfc-d1d3-4935-bdba-871e710a2bf4?autoplay=false&amp;showinfo=true\"\" allowfullscreen style=\"\"border:none;\"\"></iframe>\",off,,,\r\n2,survey,300,This is the start of a new experiment.,off,group_b_session_1.csv,,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,Please put your University Student code below:,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,",
          "jumbled_sentences.csv": "sentence,part,type,content,\r\n1,1,text,The,\r\n1,2,dropdown,\"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\",\r\n1,3,text,are at the junction between,\r\n1,4,dropdown,\"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\",\r\n1,5,text,and,\r\n1,6,dropdown,\"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\",\r\n1,7,text,\", they signal forces imposed on, or generated by, the\",\r\n1,8,dropdown,\"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\",\r\n1,9,text,.,\r\n2,1,text,Intrafusal,\r\n2,2,dropdown,\"--Please Select--,muscle spindles,muscles,sensory endings,gamma motor\",\r\n2,3,text,are embedded in,\r\n2,4,dropdown,\"--Please Select--,muscle spindles,muscles,sensory endings,gamma motor\",\r\n2,5,text,. They are innervated by,\r\n2,6,dropdown,\"--Please Select--,muscle spindles,muscles,sensory endings,gamma motor\",\r\n2,7,text,and,\r\n2,8,dropdown,\"--Please Select--,muscle spindles,muscles,sensory endings,gamma motor\",\r\n2,9,text,endings that respond to changes of muscle length.,\r\n3,1,text,\"The dorsal column medial lemniscal system is an ascending pathway for \"\"\",\r\n3,2,dropdown,\"--Please Select--,touch,proprioception,somatosensory cortex,separated\",\r\n3,3,text,and,\r\n3,4,dropdown,\"--Please Select--,touch,proprioception,somatosensory cortex,separated\",\r\n3,5,text,\". The information is carried via neurons and eventually ends up in the \"\"\",\r\n3,6,dropdown,\"--Please Select--,touch,proprioception,somatosensory cortex,separated\",\r\n3,7,text,\". Touch and proprioception are \"\"\",\r\n3,8,dropdown,\"--Please Select--,touch,proprioception,somatosensory cortex,separated\",\r\n3,9,text,\" in these ascending pathways.\"\"\",\r\n4,1,dropdown,\"--Please Select--,Seconday sensory endings,tail endings,length\",\r\n4,2,text,\" are slow adapting and are found at the \"\"\",\r\n4,3,dropdown,\"--Please Select--,Seconday sensory endings,tail endings,length\",\r\n4,4,text,\" of the muscle fibre and react to changes of muscle \"\"\",\r\n4,5,dropdown,\"--Please Select--,Seconday sensory endings,tail endings,length\",\r\n4,6,text,\".\"\"\",\r\n5,1,text,\"The Golgi tendon organs are at the \"\"\",\r\n5,2,dropdown,\"--Please Select--\"\",\n          \"\"junction\"\",\n          \"\"tendons\"\",\n          \"\"forces\"\",\n          \"\"muscles\"\"\",\r\n5,3,text,\" between muscles and \"\"\",\r\n5,4,dropdown,\"--Please Select--\"\",\n          \"\"junction\"\",\n          \"\"tendons\"\",\n          \"\"forces\"\",\n          \"\"muscles\"\"\",\r\n5,5,text,\", they signal \"\"\",\r\n5,6,dropdown,\"--Please Select--\"\",\n          \"\"junction\"\",\n          \"\"tendons\"\",\n          \"\"forces\"\",\n          \"\"muscles\"\"\",\r\n5,7,text,\" imposed on, or generated by, the \"\"\",\r\n5,8,dropdown,\"--Please Select--\"\",\n          \"\"junction\"\",\n          \"\"tendons\"\",\n          \"\"forces\"\",\n          \"\"muscles\"\"\",\r\n5,9,text,\".\"\"\",\r\n6,1,dropdown,\"--Please Select--\"\",\n          \"\"intrafusal\"\",\n          \"\"sensory endings\"\",\n          \"\"gamma motor\"\",\n          \"\"muscle length\"\"\",\r\n6,2,text,\"  muscle spindles are embedded in muscles. They are innervated by \"\"\",\r\n6,3,dropdown,\"--Please Select--\"\",\n          \"\"intrafusal\"\",\n          \"\"sensory endings\"\",\n          \"\"gamma motor\"\",\n          \"\"muscle length\"\"\",\r\n6,4,text,\" and \"\"\",\r\n6,5,dropdown,\"--Please Select--\"\",\n          \"\"intrafusal\"\",\n          \"\"sensory endings\"\",\n          \"\"gamma motor\"\",\n          \"\"muscle length\"\"\",\r\n6,6,text,\" endings that respond to changes of \"\"\",\r\n6,7,dropdown,\"--Please Select--\"\",\n          \"\"intrafusal\"\",\n          \"\"sensory endings\"\",\n          \"\"gamma motor\"\",\n          \"\"muscle length\"\"\",\r\n6,8,text,\".\"\"\",\r\n7,1,text,\"The dorsal column medial lemniscal system is an \"\"\",\r\n7,2,dropdown,\"--Please Select--\"\",\n          \"\"ascending pathway\"\",\n          \"\"neurons\"\",\n          \"\"Touch\"\",\n          \"\"proprioception\"\"\",\r\n7,3,text,\" for touch and proprioception. The information is carried via \"\"\",\r\n7,4,dropdown,\"--Please Select--\"\",\n          \"\"ascending pathway\"\",\n          \"\"neurons\"\",\n          \"\"Touch\"\",\n          \"\"proprioception\"\"\",\r\n7,5,text,\" and eventually ends up in the somatosensory cortex. \"\"\",\r\n7,6,dropdown,\"--Please Select--\"\",\n          \"\"ascending pathway\"\",\n          \"\"neurons\"\",\n          \"\"Touch\"\",\n          \"\"proprioception\"\"\",\r\n7,7,text,\" and \"\"\",\r\n7,8,dropdown,\"--Please Select--\"\",\n          \"\"ascending pathway\"\",\n          \"\"neurons\"\",\n          \"\"Touch\"\",\n          \"\"proprioception\"\"\",\r\n7,9,text,\" are separated in these ascending pathways.\"\"\",\r\n8,1,text,\"Secondary sensory endings are \"\"\",\r\n8,2,dropdown,\"--Please Select--\"\",\n          \"\"slow adapting\"\",\n          \"\"tail endings\"\",\n          \"\"length\"\"\",\r\n8,3,text,\" and are found at the \"\"\",\r\n8,4,dropdown,\"--Please Select--\"\",\n          \"\"slow adapting\"\",\n          \"\"tail endings\"\",\n          \"\"length\"\"\",\r\n8,5,text,\" of the muscle fibre and react to changes of muscle \"\"\",\r\n8,6,dropdown,\"--Please Select--\"\",\n          \"\"slow adapting\"\",\n          \"\"tail endings\"\",\n          \"\"length\"\"\",\r\n8,7,text,\".\"\"\",\r\n,,,,"
        },
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw=",
        "surveys": {
          "jumbled_test.csv": [
            [
              "item_name",
              "text",
              "type",
              "answers",
              "values",
              "optional",
              "side_by_side",
              ""
            ],
            [
              "Instructions1",
              "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Investigator 1</td>\n    <td>Investigator1@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td>Investigator 2</td>\n    <td>Investigator2@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n  </tr>\n  <tr>\n    <td>Researcher 1</td>\n    <td>Researcher1@reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Researcher 2</td>\n    <td>Researcher2@reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: [Study title]</h2>\n<h1>Consent Form</h1>",
              "instruct",
              "",
              "",
              "",
              "",
              ""
            ],
            [
              "uor_consent_1",
              "beep|bop|brap",
              "jumbled",
              "brap|brop",
              "",
              "No",
              "",
              ""
            ],
            [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ]
          ],
          "group_b_session_1.csv": [
            [
              "item_name",
              "text",
              "type",
              "answers",
              "values",
              "optional",
              "shuffle_answers",
              "shuffle_question",
              null
            ],
            [
              "b1",
              "Where is a golgi tendon organ located and what is its function?<br><br>The | are at the junction between | and |, they signal forces imposed on, or generated by, the |.",
              "jumbled",
              "Golgi tendon organs|muscles|tendons",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b2",
              "What is the function of a Ruffini receptor?",
              "radio",
              "\"To detect skin stretching. | To detect pressure on the skin. | To detect changes in temperature. | To detect movement",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b3",
              "Holly pours herself a cup of tea and spills it on herself, and she quickly pulls her arm away. Which one of the following is responsible for her reaction?",
              "radio",
              "Primary Sensory Endings. | Secondary Sensory Endings. | Cutaneous Receptors. | Muscle Spindles.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b4",
              "Which of these is NOT a function of joint angle receptors? There may be more than one correct answer.",
              "checkbox",
              "Least active at extreme angles. |\nThey are rapidly adapting. |\nThey are not very sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b5",
              "Complete the sentence(s) below.<br><br>Intrafusal | are embedded in|. They are innervated by | and | endings that respond to changes of muscle length.",
              "jumbled",
              "muscle spindles | muscles | sensory endings | gamma motor",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b6",
              "What is the function of a Gamma Motor Neuron?",
              "radio",
              "It innovates the intrafusal fibres to match the muscle length. | It innovates the extrafusal fibres to match muscle length. | To detect pressure of the intrafusal fibres. | To detect stretch of the muscle length.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b7",
              "Complete the sentence(s) below.<br><br>The dorsal column medial lemniscal system is an ascending pathway for | and |. The information is carried via neurons and eventually ends up in the |. Touch and proprioception are | in these ascending pathways.",
              "jumbled",
              "touch | proprioception | somatosensory cortex | separated",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b8",
              "Complete the sentence(s) below.<br><br>| are slow adapting and are found at the | of the muscle fibre and react to changes of muscle |.",
              "jumbled",
              "Secondary sensory endings | tail endings | length",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "",
              "",
              "",
              "",
              "",
              null,
              null,
              null,
              null
            ]
          ]
        },
        "trialtypes": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
          "jumbled_sentence": "<!--\r\n  Jumbled sentence questions\r\n  \r\n-->\r\n<style>\r\n.question_box{\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  line-height: 200px;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n#sentence_html{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n</style>\r\n<table id = \"questionTable\">\r\n  <tr>\r\n    <td><div class=\"question_box\" id=\"box_0\"></div></td>\r\n  </tr>\r\n</table>\r\n\r\n<div id=\"sentence_html\" class=\"form-inline\">\r\n\r\n\r\n<script>\r\n// var select = document.getElementById(\"selectAnswer\");\r\n// var options1 = [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"];\r\n// for(var i = 0; i < options1.length; i++) {\r\n    // var opt = options1[i];\r\n    // var dropDown = document.createElement(\"option\");\r\n    // dropDown.textContent = opt;\r\n    // dropDown.value = opt;\r\n    // select.appendChild(dropDown);\r\n// }\r\n/*\r\nvar allQuestions = [\r\n  {\r\n    question: \"The \" + \"<select id = 'selectAnswer'</select>\" + \" are at the junction between \" + \"<select id = 'selectAnswer'</select>\" + \" and \" + \"<select id = 'selectAnswer'</select>\" + \", they signal forces imposed on, or generated by, the \" + \"<select id = 'selectAnswer'</select>\" + \".\",\r\n    answers: [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"]\r\n  }\r\n];\r\n*/\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[\"{{jumbled}}\"]) !== \"undefined\"){\r\n  var raw_questions = Trial.get_stim(\"{{jumbled}}\");\r\n  console.log(\"raw_questions\");\r\n  console.log(raw_questions);\r\n  var long_questions = Papa.parse(raw_questions,{\r\n    header: true\r\n  }).data;\r\n  \r\n  console.dir(\"long_questions\");\r\n  console.log(long_questions);\r\n  \r\n  /*\r\n  * group the items together to make each sentence - based on https://stackoverflow.com/a/35092559/4490801\r\n  */ \r\n  var sentence_numbers = [...new Set(long_questions.map(item => item.sentence))];\r\n  \r\n  console.dir(\"howdy\");\r\n  \r\n  allQuestions = [];\r\n  sentence_numbers.forEach(function(sentence_number){\r\n    var this_sentence = long_questions.filter(row => row.sentence == sentence_number);\r\n    allQuestions.push(this_sentence);\r\n  });\r\n  \r\n  \r\n} else {\r\n  var allQuestions = [\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ],\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ]\r\n  ];\r\n \r\n}\r\n\r\n\r\n\r\nvar this_question = allQuestions[0];  \r\nvar question = this_question.map(function(sentence_part, index){\r\n  console.dir(sentence_part);\r\n  if(sentence_part.type == \"text\"){\r\n    return sentence_part[\"content\"];\r\n  } else {\r\n    sentence_part.content = sentence_part.content.split(\",\");\r\n    return \"<select class='form-control' style='width:auto'> <option>\" + sentence_part.content.join(\"</option><option>\") + \"</option> </select><br>\";\r\n  }\r\n});\r\n\r\n$(\"#sentence_html\").html(question.join(\"\"));\r\n\r\n\r\n/*\r\n\r\n\r\nvar question = allQuestions.map(function(card, index){\r\n  if(card.type == \"text\"){\r\n    return card[\"sentence\"][content];\r\n    return \"allQuestions[sentence][content]\";\r\n  } else {\r\n    return \"<select> <option>\" + card.content + \"</option> </select><br>\";\r\n  }\r\n\r\n});\r\n$(\".question_box\").html(question);\r\n*/\r\n\r\n\r\n// var currentQuestion = 0;\r\n// var question = allQuestions.map(function(card, index){\r\n//   return \"<button onClick='loadCard(this.id)' class='btn btn-primary card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.answers + \"</button><br>\";\r\n// });\r\n// $(\"#selectAnswer\").html(answers);\r\n// var this_question = allQuestions[currentQuestion][\"answers\"];\r\n// $(\".question_box\").html(this_question);\r\n\r\n</script>\r\n",
          "survey": "<!--\r\n  Author: Dr. Anthony Haffey\r\n\r\n  Collector: Cat/Kitten/Cat release\r\n  A program for running experiments on the web\r\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\r\n\r\n  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\n  Kitten/Cat release (2019-2021) author: Dr. Anthony Haffey\r\n\r\n  (team@someopen.solutions)\r\n-->\r\n<style>\r\nbody{\r\n  background-color:#5F9EA0;\r\n  width:100%;\r\n  height:100%;\r\n}\r\ntd{\r\n  padding:10px;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\n*\telements by id\r\n*/\r\n\r\n#content{\r\n  width:95%;\r\n}\r\n#proceed_button{\r\n  display:none;\r\n  float:right;\r\n}\r\n#survey_outline{\r\n\tposition: \t\t\t\t\tfixed;\r\n  top: \t\t\t\t\t\t\t\t50%;\r\n  left: \t\t\t\t\t\t\t50%;\r\n\theight: \t\t\t\t\t\t90%;\r\n\toverflow: \t\t\t\t\tauto;\r\n\t-webkit-transform: \ttranslate(-50%, -50%);\r\n  transform: \t\t\t\t\ttranslate(-50%, -50%);\r\n  background-color: \twhite;\r\n\tmin-width:        \t900px;\r\n\tmax-width:        \t9000px;\r\n\tborder-radius:    \t20px;\r\n  border-color:     \t#069;\r\n  border-style:     \tsolid;\r\n  border-width:     \t5px;\r\n\tpadding:            10px;\r\n}\r\n#survey_tabs{\r\n  padding:            20px;\r\n}\r\n#this_survey_id{\r\n  padding:            20px;\r\n  display:            none;\r\n}\r\n\r\n/*\r\n*\telements by class\r\n*/\r\n.feedback_span_multiple{\r\n  display: none;\r\n  margin:  10px;\r\n}\r\n.feedback_span_single{\r\n  display: none;\r\n  padding: 10px;\r\n}\r\n.likert_table td{\r\n  padding:    1px;\r\n  text-align: center;\r\n}\r\n.likert_table td:hover{\r\n  color: blue;\r\n}\r\n.score_total{\r\n  display: none;\r\n}\r\n.show_tab{\r\n  margin: 5px;\r\n}\r\n.survey_btn{\r\n\twhite-space: normal;\r\n\tword-wrap: \t initial;\r\n}\r\n.table_break{\r\n\twidth:    100%;\r\n\theight:   300px;\r\n\toverflow: auto;\r\n}\r\n\r\n\r\n/*\r\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\r\n*/\r\n::-webkit-scrollbar {\r\n  width: 14px;\r\n  height: 18px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  height: 6px;\r\n  border: 4px solid rgba(0, 0, 0, 0);\r\n  background-clip: padding-box;\r\n\t-webkit-border-radius: 7px;\r\n  background-color: rgba(0, 102, 153, 0.5);\r\n  -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05), inset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n}\r\n::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n  display: none;\r\n}\r\n::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n<div id=\"everything\">\r\n\t<div id=\"survey_outline\"></div>\r\n</div>\r\n<span id=\"scales_span\"></span>\r\n<script>\r\n/*\r\n* Retrieving settings\r\n*/\r\n\r\nif(typeof(settings) !== \"undefined\"){\r\n  settings = [settings];\r\n} else {\r\n  settings = {};\r\n}\r\n\r\n/*\r\n* vertical vs. horizontal tabs\r\n*/\r\n\r\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\r\n  settings.tab_hor_vert = \"horizontal\";\r\n  var please_wait = $(\"<div>\");\r\n  var this_survey = $(\"<div>\");\r\n  var survey_tabs = $(\"<div>\");\r\n  var proceed_btn = $(\"<input>\");\r\n  please_wait.attr(\"id\", \"please_wait_div\")\r\n             .html(\"Loading... Please wait\");\r\n  this_survey.addClass(\"needs-validation\")\r\n             .attr(\"id\", \"this_survey_id\")\r\n             .attr(\"novalidate\", true);\r\n  survey_tabs.attr(\"id\", \"survey_tabs\")\r\n             .addClass(\"border-top\")\r\n             .addClass(\"border-primary\")\r\n             .css(\"text-align\", \"right\")\r\n  proceed_btn.addClass(\"btn\")\r\n             .addClass(\"btn-primary\")\r\n             .attr(\"id\", \"proceed_button\")\r\n             .attr(\"type\", \"submit\")\r\n             .attr(\"value\", \"Proceed\")\r\n  $(\"#survey_outline\").append(please_wait)\r\n                      .append(this_survey)\r\n                      .append(survey_tabs)\r\n                      .append(proceed_btn);\r\n\r\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\r\n  $(\"#survey_outline\").html(\r\n    '<table>' +\r\n      '<tr>' +\r\n        '<td valign=\"top\" class=\"border-right border-primary\">'+\r\n          '<div id=\"survey_tabs\"></div>' +\r\n        '</td>' +\r\n        '<td>'+\r\n          '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n          '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\r\n          '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\r\n        '</td>'+\r\n      '</tr>'+\r\n    '</table>'\r\n  );\r\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\r\n  $(\"#survey_outline\").html(\r\n    '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\r\n    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'\r\n  );\r\n} else {\r\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\r\n}\r\n\r\n/*\r\n* Defining objects\r\n*/\r\n\r\npage_break_management = {\r\n  breaks_remaining : 0,\r\n  breaks_index     : 0\r\n}\r\n\r\nproceed_object = {\r\n  type:[],\r\n  name:[],\r\n  break_no:[]\r\n};\r\n\r\nscoring_object={\r\n  scales:[],\r\n  scale_scores:[],\r\n  update_scales:function(this_survey){\r\n    headers = Object.keys(this_survey[0]);\r\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\r\n    var scales_html = '';\r\n    this.scales.forEach(function(element){\r\n      element = element.replace(\": \",\":\");\r\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\r\n    });\r\n    $(\"#scales_span\").html(scales_html);\r\n  }\r\n}\r\n\r\nsurvey_obj = {};\r\n\r\n/*\r\n* Element actions\r\n*/\r\n\r\n/*\r\n$(function() {\r\n  $( \".datepicker\" ).datepicker({\r\n    dateFormat : 'mm/dd/yy',\r\n    changeMonth : true,\r\n    changeYear : true,\r\n    yearRange: '-100y:c+nn',\r\n    maxDate: '-1d'\r\n  });\r\n});\r\n*/\r\n\r\n\r\n$('#ExperimentContainer').css('transform','scale(1,1)');\r\n\r\n$(\"#proceed_button\").on(\"click\",function(){\r\n  var proceed = true;\r\n  var tabs    = document.getElementsByClassName('show_tab active');\r\n  if(tabs.length > 0){\r\n    var current_tab       = document.getElementsByClassName(\r\n      'show_tab active')[0]\r\n        .id\r\n        .replace(\"_button\", \"\")\r\n        .replace(\"tab_\",    \"\");\r\n    var response_elements = $('#table_'+current_tab).find('.response_element');\r\n\r\n  } else {\r\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\r\n  }\r\n\r\n  for(var i = 0; i < response_elements.length; i++){\r\n    [row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\r\n    var this_optional = survey_obj.data[row_no].optional.toLowerCase();\r\n\r\n    if(this_optional.indexOf(\"no\") !== -1){\r\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\r\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\r\n        var min_resp_length = 1;\r\n      } else if(this_optional.length == 2) {\r\n        var min_resp_length = this_optional[1];\r\n      } else {\r\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\r\n        return false;\r\n      }\r\n    } else {\r\n      min_resp_length = 0;\r\n    }\r\n\r\n\r\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\r\n    if (quest_resp.length < min_resp_length){\r\n      proceed = false;\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\r\n    } else {\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\r\n    }\r\n  }\r\n\r\n  if(current_tab == survey_obj.tabs && proceed){\r\n    if(typeof(sql_surveys) == \"undefined\"){\r\n      //$(\".table_break\");\r\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\r\n\r\n      if($(\".table_break#table\"+next_table_no).length == 0){\r\n        if(typeof(Trial) !== \"undefined\"){\r\n          Trial.submit();\r\n        } else {\r\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\r\n        }\r\n      } else {\r\n        $(\".table_break\").hide();\r\n        $(\".table_break#table\" + next_table_no).show();\r\n      }\r\n    } else {\r\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\r\n    }\r\n  } else if(current_tab < survey_obj.tabs && proceed) {\r\n    current_tab ++;\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\r\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-dark\");\r\n    $(\"#tab_\"+current_tab+\"_button\").click();\r\n  } else if(proceed == false){\r\n    bootbox.alert(\"You have failed to complete at least one compulsory input.\");\r\n  } else if(current_tab > survey_obj.tabs){\r\n    bootbox.alert(\"Error - please contact the Collector team about this problem, error 'Survey_001'.\");\r\n  }\r\n});\r\n\r\n//by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\r\nString.prototype.replaceAll = function(str1, str2, ignore){\r\n  return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n}\r\n\r\n\r\n/*\r\nFunctions\r\n*/\r\n\r\nfunction clean_item(this_item){\r\n  if(this_item.indexOf(\"'\") !== -1 |\r\n     this_item.indexOf('\"') !== -1){\r\n    bootbox.alert(\"Please avoid apostraphes or quote marks in the responses the participant can give. These cause problems with smooth running of surveys. This occurs when you wrote:<br><br>\" + this_item);\r\n  }\r\n  return(this_item);\r\n}\r\n\r\nfunction generate_feedback_string(feedback_array, this_index, feedback_color, row){\r\n  if(feedback_array){                 //i.e. if it's not null\r\n    if(feedback_array.length > 1){\r\n      return \"<div class='feedback_span_multiple \"+row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    } else {\r\n      return \"<div class='feedback_span_single \" +\r\n      row[\"item_name\"].toLowerCase() + \"_feedback' style='color:\" +\r\n      feedback_color[this_index] +\r\n      \"'>\" +\r\n      feedback_array[this_index] +\r\n      \"</div>\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction get_feedback(row){\r\n  if(typeof(row[\"feedback\"]) !== \"undefined\" && row[\"feedback\"] !== \"\"){\r\n    feedback_array = row[\"feedback\"].split(\"|\");\r\n    if(typeof(row[\"feedback_color\"]) == \"undefined\"){\r\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\r\n    }\r\n    feedback_color = row[\"feedback_color\"].split(\"|\");\r\n  } else {\r\n    feedback_array = null;\r\n    feedback_color = '';\r\n  }\r\n  return [feedback_array,feedback_color];\r\n}\r\n\r\nfunction isJSON(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction likert_update(this_element){\r\n\r\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\r\n\r\n  $(\".row_\"+row_no).removeClass(\"active\");\r\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\r\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\r\n  $(this_element).removeClass(\"btn-outline-primary\");\r\n  $(this_element).addClass(\"btn-primary\");\r\n  $(\"#survey_\"+item_name+\"_response\").val(this_element.value);\r\n  response_check(this_element);\r\n}\r\n\r\nfunction load_survey(survey){\r\n  /*\r\n  * are we in preview?\r\n  */\r\n  if(typeof(parent.collector_survey_preview) !== \"undefined\"){\r\n    survey_content = survey;\r\n  } else if(typeof(parent.master_json) !== \"undefined\" && parent.master_json.surveys.preview){\r\n    survey_content = survey;\r\n    survey_obj.mods = parent.master_json.mods;\r\n  } else {\r\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\r\n\r\n    if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n       typeof(parent.parent.exp_json.surveys[survey]) !== \"undefined\"){\r\n      survey_content = parent.parent.exp_json.surveys[survey];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\r\n    } else if(\r\n      typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n      typeof(parent.parent.exp_json.surveys[\r\n        survey.replace(\".csv\",\"\")\r\n      ])\r\n    ){\r\n\t\t\tsurvey_content = parent.parent.exp_json.surveys[survey.replace(\".csv\",\"\")];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\t\t}\telse {\r\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\r\n    }\r\n  }\r\n  process_returned_questionnaire(survey_content);\r\n}\r\n\r\nfunction process_question(row, row_no){\r\n  row.values = row.values == \"\" ? row.answers : row.values;\r\n  if(row_check(\"page_break\", row)){\r\n    page_break_management.breaks_remaining++;\r\n    question_td = \"</tr></table><table id='table\" +\r\n      page_break_management.breaks_remaining +\r\n      \"' style='display:none' class='table_break'></tr>\";\r\n  } else {\r\n    if(\r\n      typeof(row[\"values\"]) !== \"undefined\" & typeof(row[\"values\"]) !== \"function\"\r\n    ){ //to address microsoft edge issue.\r\n      value_array = row[\"values\"].split(\"|\");\r\n    } else {\r\n      value_array='';\r\n    }\r\n\r\n    if(row[\"item_name\"].indexOf(\" \") !== -1){\r\n      bootbox.alert(\"Please note that the 'item name' '\" +\r\n        row['item_name'] +\r\n        \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\"\r\n      );\r\n    }\r\n\r\n    /*\r\n    * class for scoring\r\n    */\r\n\r\n    var this_class = \"\";\r\n    for(var i=0;i<scoring_object.scales.length;i++){\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\r\n          \"score: \",\"\"\r\n        ).replace(/ |-/,\"\") + \" \";\r\n      }\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\r\n      }\r\n    }\r\n\r\n    /*\r\n    * adding to row to help with \"write\" function\r\n    */\r\n    var row_x = JSON.parse(\r\n      JSON.stringify(row)\r\n    );\r\n    row_x[\"row_no\"] = row_no;\r\n    row_x[\"this_class\"] = this_class;\r\n\r\n    [feedback_array,feedback_color] = get_feedback(row);\r\n\r\n\r\n    question_td = '<input type=\"hidden\" class=\"response_element row_' + row_no + '\" id=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" name=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" value=\"\">';\r\n\r\n    /*\r\n    * Survey settings\r\n    */\r\n    [row_ques_perc,row_resp_perc] = row_perc(row[\"question_width\"]);\r\n\r\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\r\n      settings.feedback_before_response = true;\r\n    }\r\n\r\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\r\n      settings.lock_after_feedback = false;\r\n    }\r\n\r\n    if(typeof(row[\"type\"]) == \"undefined\"){\r\n      return false;\r\n    }\r\n\r\n    if(\r\n      typeof(survey_obj.mods) !== \"undefined\" &&\r\n\t\t\ttypeof(survey_obj.mods[row.type]) !== \"undefined\"\r\n    ){\r\n      var mod_html = survey_obj.mods[row.type].contents;\r\n\r\n      Object.keys(row).forEach(function(attribute){\r\n        mod_html = mod_html.replaceAll(\"{{\"+attribute+\"}}\",row[attribute]);\r\n      });\r\n      question_td += mod_html;\r\n    } else {\r\n      switch(row[\"type\"].toLowerCase()){\r\n        case \"page_start\":\r\n          var tabs_html = $(\"#survey_tabs\").html();\r\n          if(settings.tab_hor_vert == \"horizontal\"){\r\n            span_div = \"span\";\r\n          } else if(settings.tab_hor_vert == \"vertical\"){\r\n            span_div = \"div\";\r\n          }\r\n          if(typeof(survey_obj.tabs) == \"undefined\"){\r\n            survey_obj.tabs = 0;\r\n          } else {\r\n            survey_obj.tabs++;\r\n          }\r\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\r\n            active_button = \"btn-outline-primary active\";\r\n          } else {\r\n            active_button = \"btn-secondary disabled\";\r\n          }\r\n          if(settings.tab_hor_vert == \"vertical\"){\r\n            var vert_btn_block = \"btn-block\";\r\n          } else {\r\n            var vert_btn_block = \"\";\r\n          }\r\n\r\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\r\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ row['text'] +\r\n            '</label>'+\r\n          '</'+span_div+'>';\r\n\r\n          $(\"#survey_tabs\").html(tabs_html);\r\n\r\n          page_break_indexes = [];\r\n          survey_obj.data.forEach(function(row,this_index){\r\n            if(typeof(row.type) !== \"undefined\" && row.type.toLowerCase() == \"page_start\"){\r\n              page_break_indexes.push(this_index);\r\n            }\r\n          });\r\n\r\n          if(survey_obj.tabs > 0){\r\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\" + survey_obj.tabs + \"' style='display:none'><table id='table_\" + survey_obj.tabs + \"' class='table_break'><tr>\";\r\n          } else {\r\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          }\r\n          break;\r\n        case \"checkbox\":\r\n        case \"checkbox_vertical\":\r\n          question_td += write(\"checkbox_vertical\",row_x);\r\n          break;\r\n        case \"checkbox_horizontal\":\r\n          question_td += write(\"checkbox_horizontal\",row_x);\r\n          break;\r\n        case \"checkbox_single\":\r\n          question_td += write(\"checkbox_single\", row_x);\r\n          break;\r\n        case \"date\":\r\n          question_td += write(\"date\",row_x);\r\n        break;\r\n        case \"dropdown\":\r\n\t\t\t\tcase \"select\":\r\n          question_td += write(\"dropdown\",row_x);\r\n        break;\r\n        case \"email\":\r\n          question_td += write(\"email\", row_x);\r\n        break;\r\n        case \"google_slide\":\r\n        case \"jumbled\":\r\n        case \"instruct\":\r\n          // these are defined elsewhere to take the whole row\r\n          break;\r\n        case \"likert\":\r\n          question_td += write(\"likert\", row_x);\r\n        break;\r\n        case \"number\":\r\n          question_td += write(\"number\", row_x);\r\n          break;\r\n        case \"para\":\r\n          question_td += write(\"para\", row_x);\r\n          break;\r\n        case \"radio\":\r\n        case \"radio_vertical\":\r\n          question_td += write(\"radio_vertical\", row_x);\r\n          break;\r\n        case \"radio_horizontal\":\r\n          question_td += write(\"radio_horizontal\", row_x);\r\n        break;\r\n\r\n        case \"report_score\":\r\n            question_td += \"<input disabled class='form-control score_\" + row[\"item_name\"] + \" \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+row['item_name'].toLowerCase()+\"'>\";\r\n        break;\r\n\r\n        case \"text\":\r\n          question_td += write(\"text\", row_x);\r\n        break;\r\n      }\r\n    }\r\n    if(feedback_array){\r\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+row[\"item_name\"].toLowerCase()+\"_feedback' onclick='reveal_answers(this)'>Show</button>\";\r\n    }\r\n  }\r\n  if(typeof(row[\"type\"])== \"undefined\"){\r\n      return '';\r\n  } else {\r\n    if(row[\"type\"].toLowerCase() == \"instruct\"){\r\n      row_html  = write(\"instruct\",row);\r\n    } else if(row[\"type\"].toLowerCase() == \"jumbled\"){\r\n      row_html  = write(\"jumbled\",row);\r\n\t\t} else if(row[\"type\"].toLowerCase() == \"likert\"){\r\n\r\n\t\t\tif(typeof(row[\"side_by_side\"]) !== \"undefined\" &&\r\n\t\t\t\t row[\"side_by_side\"].toLowerCase() == \"yes\"){\r\n\r\n\t\t\t\tvar row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar row_html = \"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2'>\" +\r\n\t\t\t\t\t\t\trow[\"text\"] +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\" +\r\n\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2' align='center'>\" +\r\n\t\t\t\t\t\t\tquestion_td +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\";\r\n\t\t\t}\r\n\r\n\r\n    } else if(row[\"type\"].toLowerCase()==\"google_slide\") {\r\n      var row_html=\"<td colspan='2'>\"+row[\"text\"]+\"</label></td>\";\r\n    } else if(typeof(row[\"no_text\"]) !== \"undefined\" && row[\"no_text\"] == \"on\"){\r\n      var row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\r\n    } else {\r\n      if(row['text'].toLowerCase() == \"page_start\" | row['type'].toLowerCase() == \"page_start\"){\r\n        row_html = question_td;\r\n      } else {\r\n        var row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n      }\r\n    }\r\n    if(typeof(row[\"optional\"]) !== \"undefined\"){\r\n      if(row[\"optional\"].toLowerCase() == \"no\"){\r\n        proceed_object.name.push(row[\"item_name\"]);\r\n        proceed_object.type.push(row[\"type\"]);\r\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\r\n      }\r\n    }\r\n    if(typeof(row[\"shuffle_question\"]) == \"undefined\" || row[\"shuffle_question\"].toLowerCase() == \"off\"){\r\n      this_shuffle='none';\r\n    } else {\r\n      this_shuffle=row[\"shuffle_question\"];\r\n    }\r\n    return [row_html,this_shuffle];\r\n  }\r\n}\r\n\r\nfunction process_score(row_no, values_col, this_response, item, values_reverse ){\r\n  item_values = survey_obj.data[row_no][values_col].split(\"|\");\r\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\r\n    item_values.reverse();\r\n  }\r\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\r\n  var this_value    = item_values[item_answers.indexOf(this_response)];\r\n  $(\"#survey_\" + item + \"_score\").val(this_value);\r\n  if(typeof(this_value) !== \"undefined\"){\r\n    return parseFloat(this_value);\r\n  }\r\n}\r\n\r\nfunction process_returned_questionnaire(data){\r\n  survey_obj.data = data;\r\n  survey_obj.data = Papa.parse(\r\n    Papa.unparse(survey_obj.data),{\r\n      header:true,\r\n      beforeFirstChunk: function(chunk) {\r\n        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\r\n        var headings = rows[0].toLowerCase();\r\n        rows[0] = headings;\r\n        return rows.join(\"\\r\\n\");\r\n      },\r\n    }\r\n  ).data;\r\n  survey_obj.scales = {};\r\n  var col_headers = Object.keys(survey_obj.data[0]);\r\n  col_headers.forEach(function(header){\r\n    if(header.indexOf(\"score:\")==0){\r\n      var original_header = header;\r\n      header = header.replace(\"score: \",\"\");\r\n      header = header.replace(\"score:\",\"\");\r\n      survey_obj.scales[header] = {};\r\n      survey_obj.scales[header].questions = {};\r\n\r\n      for(var i = 1; i < survey_obj.data.length; i++){\r\n        row = survey_obj.data[i];\r\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\r\n          survey_obj.scales[header].questions[i] = row[original_header];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  write_survey(survey_obj.data,\"this_survey_id\");\r\n  $(\"#please_wait_div\").hide();\r\n  $(\"#proceed_button\").show();\r\n  $('html, body').animate({\r\n    scrollTop: $(\"#survey_outline\").offset().top\r\n  }, 1000);\r\n}\r\n\r\nfunction row_perc(this_rat){\r\n\tif(typeof(this_rat) == \"undefined\"){\r\n    row_resp_perc = \"50%\";\r\n    row_ques_perc = \"50%\";\r\n  } else {\r\n    row_resp_perc = parseFloat(100-this_rat.replace(\"%\",\"\"))+\"%\";\r\n    row_ques_perc = parseFloat(this_rat.replace(\"%\",\"\"))+\"%\";\r\n  }\r\n  return [row_ques_perc,row_resp_perc];\r\n}\r\n\r\nfunction response_check(submitted_element){\r\n  switch(submitted_element.type){\r\n    case \"checkbox\":\r\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\r\n      if(checked_responses.length){ //i.e. more than 0\r\n        var values = [];\r\n        for(var i = 0; i < checked_responses.length; i++){\r\n          values.push(checked_responses[i].value);\r\n        }\r\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\r\n      } else {\r\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\r\n      }\r\n      break;\r\n\r\n      case \"button\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.innerHTML\r\n        );\r\n      break;\r\n\r\n      case \"number\":\r\n      case \"radio\":\r\n      case \"select-one\":\r\n      case \"text\":\r\n      case \"textarea\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.value\r\n        );\r\n      break;\r\n    }\r\n    update_score();\r\n}\r\n\r\nfunction retrieve_row_no_item_name(this_element){\r\n  var these_classes = this_element.className.split(\" \");\r\n  var row_no;\r\n  var item_name;\r\n  these_classes.forEach(function(this_class){\r\n    if (this_class.indexOf('row_') > -1) {\r\n      row_no = this_class.replace(\"row_\",\"\");\r\n    }\r\n    if (this_class.indexOf('_item') > -1) {\r\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\r\n    }\r\n  });\r\n  return [row_no,item_name];\r\n}\r\n\r\nfunction reveal_answers(this_element){\r\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\r\n  response_present = this_response == \"\" ? false : true;\r\n\r\n  if(settings.feedback_before_response == false && response_present == false){\r\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\r\n  } else {\r\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\r\n      if(settings.lock_after_feedback){\r\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\r\n        $(\".\"+item_class).prop(\"disabled\",true);\r\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).html(\"Locked\");\r\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\r\n        $(\"#\"+this_element.id).addClass(\"disabled\");\r\n      } else {\r\n        $(\"#\"+this_element.id).html(\"Hide\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n      }\r\n    } else {\r\n      $(\"#\"+this_element.id).html(\"Show\");\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\r\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\r\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction row_check(type, row){\r\n  if(type = \"page_break\"){\r\n    return (\r\n      typeof(row[\"text\"]) !== \"undefined\" &&\r\n\t\t  typeof(row[\"type\"]) !== \"undefined\" &&\r\n\t\t  row['text'].toLowerCase() == \"page_break\" |\r\n      row['type'].toLowerCase() == \"page_break\"\r\n    )\r\n\r\n  } else if(type=\"\"){\r\n\r\n  }\r\n}\r\n\r\n// http://stackoverflow.com/questions/962802#962890\r\nfunction shuffle(array) {\r\n  var tmp, current, top = array.length;\r\n  if(top) while(--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction shuffle_answers(row){\r\n  if(\r\n    typeof(row[\"shuffle_answers\"]) !== \"undefined\" &&\r\n    row[\"shuffle_answers\"].toLowerCase() == \"yes\"\r\n  ){\r\n    var answers = row[\"answers\"].split(\"|\");\r\n    order = shuffle([...Array(answers.length).keys()]);\r\n\r\n    var ordered_answers = order.map(function(position){\r\n      return answers[position];\r\n    });\r\n    row[\"answers\"] = ordered_answers.join(\"|\");\r\n\r\n    if(row[\"values\"].indexOf(\"|\") !== -1){\r\n      var values = row[\"values\"].split(\"|\");\r\n      var ordered_values = order.map(function(position){\r\n        return values[position];\r\n      });\r\n      row[\"values\"] = ordered_values.join(\"|\");\r\n    }\r\n  }\r\n  return row;\r\n}\r\n\r\nfunction update_score(){\r\n  var scales = Object.keys(survey_obj.scales);\r\n  scales.forEach(function(scale){\r\n    this_scale = survey_obj.scales[scale];\r\n    var questions = Object.keys(this_scale.questions);\r\n    var this_score = 0;\r\n    complete_score = true;\r\n\r\n    questions.forEach(function(row_no){\r\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\r\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\r\n      var normal_reverse = this_scale.questions[row_no];\r\n\r\n      if(normal_reverse.indexOf(\"-\") == -1){\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,\"values\",this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,\"values\",this_response,item);\r\n        }\r\n      } else {\r\n        values_reverse = normal_reverse.split(\"-\");\r\n        values_col     = values_reverse[0].toLowerCase();\r\n        normal_reverse = values_reverse[1];\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,values_col,this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,values_col,this_response,item);\r\n        }\r\n      }\r\n      if(typeof(this_value) !== \"undefined\"){\r\n        this_score += multiplier * this_value;\r\n      } else {\r\n        complete_score = false;\r\n      }\r\n    });\r\n    if(complete_score){\r\n      $(\".score_\"+scale).addClass(\"bg-success\");\r\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\r\n    } else {\r\n      $(\".score_\"+scale).removeClass(\"text-success\");\r\n      $(\".score_\"+scale).addClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\r\n    }\r\n    $(\".score_\"+scale).val(this_score);\r\n  });\r\n}\r\n\r\nfunction write(type, row){\r\n  var this_html = \"\";\r\n  [feedback_array, feedback_color] = get_feedback(row);\r\n  row = shuffle_answers(row);\r\n  row[\"item_name\"] = row[\"item_name\"].toLowerCase();\r\n\r\n  if(type == \"checkbox_horizontal\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-checkbox\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"checkbox\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-checkbox\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_single\"){\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.attr(\"data-toggle\", \"buttons\");\r\n        this_div.addClass(\"btn-group-toggle\");\r\n    var this_label = $(\"<label>\");\r\n        this_label.addClass(\"btn\");\r\n        this_label.addClass(\"btn-outline-primary\");\r\n        this_label.html(row[\"answers\"]);\r\n    var this_checkbox = $(\"<input>\");\r\n        this_checkbox[0].id = row[\"item_name\"];\r\n        this_checkbox[0].name = \"survey_\" +\r\n          row[\"item_name\"].toLowerCase();\r\n        this_checkbox[0].type = \"checkbox\";\r\n        this_checkbox.attr(\"checked\",true);\r\n        this_checkbox\r\n          .addClass(\"response\")\r\n          .addClass(\r\n            row[\"item_name\"] +\r\n            '_item row_' +\r\n            row[\"row_no\"]\r\n          );\r\n    this_div.append(this_label);\r\n    this_label.append(this_checkbox)\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    for(var i = 0; i < options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color, row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\");\r\n      var this_checkbox = $(\"<input>\");\r\n          this_checkbox[0].id= row[\"item_name\"]+ i;\r\n          this_checkbox[0].type = \"checkbox\";\r\n          this_checkbox[0].name = 'survey_'+\r\n            row[\"item_name\"].toLowerCase();\r\n          this_checkbox\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"item_name\"] + \"_item_row\");\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerHTML = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_checkbox)\r\n              .append(this_label);\r\n\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"date\"){\r\n    var input = $(\"<input>\");\r\n        input.addClass(\"response\")\r\n             .addClass(\"custom-control\")\r\n             .addClass(\"datepicker\")\r\n             .addClass(\"date\")\r\n             .addClass(row[\"item_name\"] + \"_item\")\r\n             .addClass(\"row_\" + row[\"row_no\"])\r\n             .attr(\"name\", \"survey_\" + row['item_name'])\r\n             .attr(\"type\", \"text\");\r\n\r\n  } else if(type == \"dropdown\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_dropdown = $(\"<select>\");\r\n        this_dropdown.addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(\"txt-primary\")\r\n          .addClass(row[\"item_name\"] + \"_item\")\r\n          .addClass(\"row_\" + row[\"row_no\"])\r\n          .addClass(\"collector_button\")\r\n          .attr(\"name\", \"survey_\" + row[\"item_name\"])\r\n          .css(\"margin\", \"0px\")\r\n          .css(\"width\", \"auto\");\r\n\r\n    this_dropdown.append(\"<option selected disabled hidden>-- no option selected --</option>\");\r\n    options.forEach(function(this_option){\r\n      this_dropdown.append(\r\n        \"<option>\" + this_option + \"</option>\"\r\n      );\r\n    });\r\n    var this_html = this_dropdown[0].outerHTML;\r\n\r\n  } else if(type == \"email\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .attr(\"type\", \"email\")\r\n          .attr(\"name\", 'survey_' + row['item_name']);\r\n\r\n  } else if(type == \"instruct\"){\r\n    this_html += \"<td colspan='2'>\" + row[\"text\"] + \"</td>\";\r\n  } else if(type == \"jumbled\"){\r\n    var this_td = $(\"<td>\");\r\n        this_td.attr(\"colspan\",2) ;\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.addClass(\"form-inline\")\r\n                .addClass(\"bg-secondary\")\r\n                .addClass(\"text-white\")\r\n                .css(\"width\", \"100%\")\r\n                .css(\"padding\", \"20px\")\r\n                .css(\"margin\", \"20px\")\r\n                .css(\"border-radius\", \"5px\");\r\n\r\n    var question = row[\"text\"].split(\"|\");\r\n    questions_html = question.map(function(text,index){\r\n      if(index == question.length - 1){\r\n        return text;\r\n      } else {\r\n        var row_x = row;\r\n        row_x[\"item_name_old\"] = row_x[\"item_name\"];\r\n        row_x[\"item_name\"]     = row_x[\"item_name\"] + \"_\" + index;\r\n        var row_html = text + write(\"dropdown\", row_x)\r\n          .replace(\"margin: 0px\",\"margin: 5px\");\r\n        row_x[\"item_name\"] = row_x[\"item_name_old\"];\r\n        return row_html;\r\n      }\r\n    }).join(\"\");\r\n\r\n    this_td.append(this_div);\r\n    this_div.append(questions_html);\r\n\r\n    this_html = this_td[0].outerHTML;\r\n\r\n  } else if(type == \"likert\"){\r\n    // set styles\r\n    if(typeof(row[\"btn_width\"]) == \"undefined\"){\r\n      row[\"btn_width\"] = \"auto\"\r\n    }\r\n    if(typeof(row[\"side_width\"]) == \"undefined\"){\r\n      var side_width = \"auto\";\r\n    }\r\n\r\n    // create and build these elements\r\n    var this_div = $(\"<div>\");\r\n    if(typeof(row[\"side_text\"]) !== \"undefined\" &&\r\n      row[\"side_text\"] !== \"\"\r\n    ){\r\n      side_text = row[\"side_text\"].split(\"|\");\r\n      side_text = side_text.map(function(this_side){\r\n        var this_span = $(\"<span>\");\r\n            this_span.css(\"width\", side_width)\r\n                     .css(\"padding\", \"20px\")\r\n                     .addClass(\"text-primary\")\r\n                     .html(\"<b>\" + this_side + \"</b>\");\r\n        return this_span[0].outerHTML;\r\n      });\r\n    } else {\r\n      side_text = [\"\",\"\"];\r\n    }\r\n\r\n    this_div\r\n      .addClass(\"btn-group\")\r\n      .addClass(\"btn-group-toggle\")\r\n      .append(side_text[0])\r\n      .attr(\"data-togle\",\"buttons\");\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length;i++){\r\n      var this_button = $(\"<button>\");\r\n          this_button\r\n            .attr(\"autocomplete\", \"off\")\r\n            .attr(\"id\", 'likert_' + row[\"row_no\"] + '_' + i)\r\n            .attr(\"onclick\",'likert_update(this)')\r\n            .attr(\"value\", values[i])\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-outline-primary\")\r\n            .addClass(\"survey_btn\")\r\n            .addClass(\r\n              row[\"item_name\"] + '_item row_' + row[\"row_no\"]\r\n            )\r\n            .css(\"width\", row[\"btn_width\"])\r\n            .html(clean_item(options[i]));\r\n      this_div.append(this_button);\r\n    }\r\n    this_div.append(side_text[1]);\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"number\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type = \"number\";\r\n        this_input[0].name = 'survey_' + row['item_name'];\r\n        this_input\r\n          .addClass(\"response\")\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\r\n    this_html += this_input[0].outerHTML;\r\n\r\n  } else if(type == \"para\"){\r\n    var this_textarea = $(\"<textarea>\");\r\n        this_textarea[0].name = \"survey_\" + row['item_name'];\r\n        this_textarea\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\");\r\n        this_textarea.css(\"width\", \"100%\")\r\n                     .css(\"height\", \"200px\");\r\n    this_html += this_textarea[0].outerHTML;\r\n\r\n  } else if(type == \"radio_horizontal\"){\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"radio\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-radio\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"radio_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color,row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type  = \"radio\";\r\n          this_input[0].id    = row[\"item_name\"] + i;\r\n          this_input[0].value = options[i];\r\n          this_input[0].name  = 'survey_' + row[\"item_name\"];\r\n          this_input\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"response\")\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\")\r\n            .addClass(row[\"item_name\"] + \"_item_row_\" + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"]+i;\r\n          this_label.addClass(\"custom-control-label\");\r\n          this_label.html(options[i]);\r\n      this_div\r\n        .append(this_input)\r\n        .append(this_label)\r\n        .append(feedback_string);\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"text\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type=\"text\";\r\n        this_input[0].name=\"survey_\" + row['item_name'];\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\")\r\n    this_html += this_input[0].outerHTML;\r\n  }\r\n\r\n  switch(type){\r\n    case \"checkbox_vertical\":\r\n    case \"radio_vertical\":\r\n      // do nothing\r\n      break;\r\n    default:\r\n      this_html += generate_feedback_string(\r\n        feedback_array,\r\n        0,\r\n        feedback_color,\r\n        row\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (this_html);\r\n}\r\n\r\nfunction write_survey(this_survey, this_id){\r\n  scoring_object.update_scales(this_survey);\r\n  survey_html = \"<table class='table_break' id='table0'>\";\r\n  this_survey_object={\r\n    content:[],\r\n    shuffle_question:[],\r\n    content_new_order:[],\r\n    shuffled_content:[],\r\n    shuffled_arrays:{},\r\n  }\r\n\r\n  survey_html += \"<tr>\";\r\n  for(i = 0; i < this_survey.length; i++){\r\n    row = this_survey[i];\r\n    row_html = process_question(row,i);\r\n\t\tthis_survey_object.content.push(row_html[0]);\r\n    this_survey_object.shuffle_question.push(row_html[1]);\r\n\t}\r\n\r\n\tunique_shuffles = this_survey_object.shuffle_question.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\r\n\r\n\tfor(var i=0;i<unique_shuffles.length;i++){\r\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\r\n      unique_shuffles[i] !== \"none\" &&\r\n      unique_shuffles[i] !== \"\"){\r\n        shuffled_content = this_survey_object.shuffle_question.map(function(element,index){\r\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\r\n  \t       return this_survey_object.content[index];\r\n    \t   }\r\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\r\n    \tnew_order = shuffle(shuffled_content);\r\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\r\n    }\r\n\t}\r\n\r\n\tfor(var i=0;i<this_survey_object.content.length;i++){\r\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle_question[i]);\r\n    if(this_index !== -1){\r\n      //take first item off relevant list and delete item\r\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\r\n      this_survey_object.content_new_order[i]=this_item;\r\n    } else {\r\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\r\n    }\r\n\t}\r\n\r\n\tqs_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\r\n\tqs_in_order += \"</tr>\";\r\n\r\n\tsurvey_html += qs_in_order;\r\n\tsurvey_html += \"</table>\";\r\n\r\n\t$(\"#\" + this_id).html(survey_html);\r\n\r\n  $(\".response\").on(\"change\", function(){\r\n    response_check(this);\r\n  })\r\n\r\n  $(\"#\" + this_id).show(1000); //scroll to top\r\n\r\n\t$(\".show_tab\").on(\"click\",function(){\r\n    if(this.className.indexOf(\"disabled\") == -1){\r\n      $(\".show_tab\").removeClass(\"active\");\r\n      $(\".survey_page\").hide();\r\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\r\n    } else {\r\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\r\n    }\r\n\t});\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\r\n}\r\n\r\n/*\r\n* Load survey\r\n*/\r\ncurrent_survey = \"{{survey}}\";\r\nif(typeof(Trial) !== \"undefined\"){\r\n  Trial.set_timer(function(){\r\n    load_survey(current_survey);\r\n  },100);\r\n} else {\r\n  load_survey(current_survey);\r\n}\r\n</script>\r\n"
        },
        "mods": {},
        "location": "haffey-studies/placement-projects/group_b",
        "storage_scripts": {
          "ocollector.org": "https://ocollector.org/StoreData_Cat_0_ahsd8elnqwhela0w8emzbxvaow.php"
        },
        "procs_csv": {},
        "stims_csv": {}
      },
      "groupwork": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,flashcards_sheet,timer_style,\r\n0,instruct,,hi,off,,,\r\n0,flashcard,300,This is the start of a new experiment.,off,flashcards.csv,,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,",
          "flashcards.csv": "cue,answer,\r\nList 8 small molecule transmitters,\"Aminobutyric acid, glycine, glutamate, aspartate, histamine, acetylcholine, dopamine, norepinephrine, serotonin\",\r\nGlycine,Glycine is the major inhibitory neurotransmitter in the brainstem and spinal chord.,\r\nList 4 components of a neuron.,\"Axon, Cell body, Dendrites, Axon terminals\",\r\nThe dopamine pathway,This neurotransmitter pathway projects through the prefrontal cortex,\r\nWhat is GABA’s role in the adult brain?,Set of projection neurons that synthesize and release the neurotransmitter dopamine,\r\nlist 5 drugs that act on the nucleus accumbens,The main inhibitory neurotransmitter in the adult brain is GABA which reduce the activity of the neurons to which it binds.,\r\n\"List 8 neuropeptide neurotransmitter examples \",\"Neurotensin​, Somatostatin, Oxytocin, Vasopressin, Bradykinin, Dynorphin, Beta-endorphin, Corticotropin\",\r\n\"neuropeptide neurotransmitters and their role \",\"Unlike small molecule neurotransmitters, neuropeptide neurotransmitters are encoded by specific genes and are synthesised from protein precursors in the cell body.\",\r\nStages of a second stage reward neuron,\"Second stage reward neurons project from the ventral tegmental area to the Nucleus accumbens and use dopamine as their neurotransmitter, which is a small molecule neurotransmitter\",\r\nNeurotransmitter synthesis and role,\" A substance is considered a neurotransmitter if it is synthesised in the neuron and is found in the pre synaptic terminus and is released to have an effect on the postsynaptic cell\",\r\n\" Norepinephrine \",\"Norepinephrine spreads anteriorly through the brain forming an extensive net in the cortex. It’s roles include learning, memory, anxiety and psychosis.\",\r\n,,"
        },
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw=",
        "surveys": {},
        "trialtypes": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
          "flashcard": "<!--\r\n  Flashcard trialtype\r\n  Authors:\r\n    Harry Sullivan\r\n    Dr. Anthony Haffey\r\n    University of Reading\r\n    \r\n---development---\r\n[\r\n  {\"text\":\"your practice text\"}\r\n]\r\n---development---\r\n\r\n\r\n-->\r\n\r\n\r\n<style>\r\n.card_btn{\r\n  width:100%;\r\n  margin:1px;\r\n}\r\n\r\n.flashcard_box{\r\n  border: 2px solid teal;\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n\r\n#everything{\r\n  margin:auto;\r\n  width:620px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: right;\r\n}\r\n</style>\r\n\r\n<body>\r\n<div id=\"everything\">\r\n  <h5>Perception and Neuroscience Flashcards</h5>\r\n  <p class=\"text-right\">Select a flashcard from the panel on the left and use the buttons below to flip the card or hide it.</p>\r\n  <p class=\"text-right\">You will be alerted once 30 minutes have elapsed.</p>\r\n  <table id=\"card_table\">\r\n    <tr>\r\n      <td id=\"card_list\"></td>\r\n      <td><div class=\"flashcard_box\" id=\"box_0\"></div></td>\r\n    </tr>\r\n    <tr>\r\n      <td> </td>\r\n      <td>\r\n        <button type=\"button\" onclick=\"frontFlip()\" class=\"btn btn-primary\">Front</button>\r\n        <button type=\"button\" onclick=\"backFlip()\" class=\"btn btn-primary\">Back</button>\r\n      </div>\r\n    </td>\r\n  </table>\r\n</div>\r\n</body>\r\n\r\n<script>\r\n\r\nvar flashcards_sheet = \"{{flashcards_sheet}}\".toLowerCase();\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[flashcards_sheet]) !== \"undefined\"){\r\n  var cards_array = parent.parent.Collector.PapaParsed(\r\n    parent.parent.exp_json.all_stims[flashcards_sheet]\r\n  );\r\n} else {\r\n  \r\n  cards_array = [\r\n    {\r\n      answer: \"Derived from the greek ‘synth’ (meaning together) and ethesia (sensation).<br>The joining of two senses, one sensory or cognitive pathway connects to another which results in involuntary experiences in another sensory or cognitive pathway↵60-100 different forms of synaesthesia have been identified (Simner, 2013)\",\r\n      cue: \"synaesthesia\",\r\n      \"font-size\": \"20px\"\r\n    },\r\n    {\r\n      answer: \"Ink colour is the same as the word written.<br>This test identifies if synaesthesia is automatic/pre-attentive. <br> Meier & Rothen (2009): This study was able to train non-synaesthetic individuals to behave like synaesthetes\",\r\n      cue: \"Modified stroop task\",\r\n      \"font-size\": \"20px\"\r\n    }\r\n  ]\r\n}\r\n\r\nvar current_card = 0; // this acts as a placeholder for the current flashcard\r\nvar no_of_cards = cards_array.length;\r\nvar cues = cards_array.map(function(card, index){\r\n  return \"<button onClick='loadCard(this.id)' class='btn btn-primary btn-sm card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.cue + \"</button><br>\";\r\n});\r\n\r\n$(\"#card_list\").html(cues);\r\nfunction loadCard(clicked_id) {\r\n  var this_card = cards_array[clicked_id][\"cue\"];\r\n  $(\".flashcard_box\").html(this_card);\r\n  current_card = clicked_id;\r\n}\r\n\r\nfunction backFlip() {\r\n  $(\".flashcard_box\").css(\r\n    \"font-size\",\r\n    cards_array[current_card][\"font-size\"]\r\n  );\r\n  $(\".flashcard_box\").css(\"line-height\",\"normal\");\r\n  var this_card = cards_array[current_card][\"answer\"];\r\n  $(\".flashcard_box\").html(this_card);\r\n}\r\nfunction hideMe(){\r\n  $(\".flashcard_box\").html(\" \")\r\n}\r\nfunction frontFlip(){\r\n  var this_card = cards_array[current_card][\"cue\"];\r\n  $(\".flashcard_box\").css(\"font-size\",\"25px\");\r\n  $(\".flashcard_box\").css(\"line-height\",\"200px\");\r\n  $(\".flashcard_box\").html(this_card);\r\n}\r\n\r\nwindow.setTimeout(Trial.submit(), 1800000); //1800000ms = 30 mins\r\n\r\n</script>\r\n"
        },
        "procs_csv": {},
        "stims_csv": {}
      },
      "group_b_session_2": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,survey,\r\n0,survey,300,This is the start of a new experiment.,off,group_b_session_2.csv,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,Please put your University Student code below:,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"
        },
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw=",
        "surveys": {
          "group_b_session_2.csv": [
            [
              "item_name",
              "text",
              "type",
              "answers",
              "values",
              "optional",
              "shuffle_answers",
              "shuffle_question",
              null
            ],
            [
              "b1",
              "Skin receptors can also signal movements, what receptors detect skin stretching?",
              "radio",
              "Ruffini receptors. \n| Joint angle receptor. | Movement receptors.|Proprioceptors.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b2",
              "The Golgi tendon organs are at the | between muscles and |, they signal | imposed on, or generated by, |.",
              "jumbled",
              "junction| tendons | forces | muscles",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b3",
              "Which of the following is the correct explanation of primary sensory endings?",
              "radio",
              "They wrap around the belly of the fibre in a spiral fashion and react to changes of muscle length and the rate of change (fast adapting). |\nThey are at the tail endings of the muscle fibre and react to changes of muscle length (slowly adapting). |\nThey wrap around the head of the fibre in parallel lines and react to changes of muscle length and rate of change (fast adapting).\nThey are at the tail endings of the muscle fibre and react to the rate of change in muscle length (fast adapting).",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b4",
              "Which of these is a function of joint angle receptors? There may be more than one correct answer.",
              "checkbox",
              "Least active at extreme angles.|\nThey are rapidly adapting. |\nThey are not sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b5",
              "| muscle spindles are embedded in muscles.\nThey are innervated by | and | endings \nthat respond to changes of |.",
              "jumbled",
              "intrafusal | sensory endings | gamma motor | muscle length",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b6",
              "What innervates the intrafusal fibres to match the muscle length i.e. adjusting the sensitivity of the muscle spindles ?",
              "radio",
              "Alpha motor fibre. | \nGamma Motor Neuron. | \nGamma Motor Fibre. | \nExtrafusal Muscle fibre.",
              "",
              "no",
              "yes",
              "yes",
              null
            ],
            [
              "b7",
              "The dorsal column medial lemniscal system is an | for touch and proprioception.\n The information is carried via | and eventually ends up in the somatosensory cortex. \n| and | are separated in these ascending pathways.",
              "jumbled",
              "ascending pathway | neurons | Touch | proprioception",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "b8",
              "Secondary sensory endings are |\n and are found at the |\nof the muscle fibre and react to changes of muscle |.",
              "jumbled",
              "slow adapting | tail endings | length",
              "",
              "no",
              "",
              "yes",
              null
            ],
            [
              "",
              "",
              "",
              "",
              "",
              null,
              null,
              null,
              null
            ]
          ]
        },
        "trialtypes": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
          "survey": "<!--\r\n  Author: Dr. Anthony Haffey\r\n\r\n  Collector: Cat/Kitten/Cat release\r\n  A program for running experiments on the web\r\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\r\n\r\n  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\n  Kitten/Cat release (2019-2021) author: Dr. Anthony Haffey\r\n\r\n  (team@someopen.solutions)\r\n-->\r\n<style>\r\nbody{\r\n  background-color:#5F9EA0;\r\n  width:100%;\r\n  height:100%;\r\n}\r\ntd{\r\n  padding:10px;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\n*\telements by id\r\n*/\r\n\r\n#content{\r\n  width:95%;\r\n}\r\n#proceed_button{\r\n  display:none;\r\n  float:right;\r\n}\r\n#survey_outline{\r\n\tposition: \t\t\t\t\tfixed;\r\n  top: \t\t\t\t\t\t\t\t50%;\r\n  left: \t\t\t\t\t\t\t50%;\r\n\theight: \t\t\t\t\t\t90%;\r\n\toverflow: \t\t\t\t\tauto;\r\n\t-webkit-transform: \ttranslate(-50%, -50%);\r\n  transform: \t\t\t\t\ttranslate(-50%, -50%);\r\n  background-color: \twhite;\r\n\tmin-width:        \t900px;\r\n\tmax-width:        \t9000px;\r\n\tborder-radius:    \t20px;\r\n  border-color:     \t#069;\r\n  border-style:     \tsolid;\r\n  border-width:     \t5px;\r\n\tpadding:            10px;\r\n}\r\n#survey_tabs{\r\n  padding:            20px;\r\n}\r\n#this_survey_id{\r\n  padding:            20px;\r\n  display:            none;\r\n}\r\n\r\n/*\r\n*\telements by class\r\n*/\r\n.feedback_span_multiple{\r\n  display: none;\r\n  margin:  10px;\r\n}\r\n.feedback_span_single{\r\n  display: none;\r\n  padding: 10px;\r\n}\r\n.likert_table td{\r\n  padding:    1px;\r\n  text-align: center;\r\n}\r\n.likert_table td:hover{\r\n  color: blue;\r\n}\r\n.score_total{\r\n  display: none;\r\n}\r\n.show_tab{\r\n  margin: 5px;\r\n}\r\n.survey_btn{\r\n\twhite-space: normal;\r\n\tword-wrap: \t initial;\r\n}\r\n.table_break{\r\n\twidth:    100%;\r\n\theight:   300px;\r\n\toverflow: auto;\r\n}\r\n\r\n\r\n/*\r\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\r\n*/\r\n::-webkit-scrollbar {\r\n  width: 14px;\r\n  height: 18px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  height: 6px;\r\n  border: 4px solid rgba(0, 0, 0, 0);\r\n  background-clip: padding-box;\r\n\t-webkit-border-radius: 7px;\r\n  background-color: rgba(0, 102, 153, 0.5);\r\n  -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05), inset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n}\r\n::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n  display: none;\r\n}\r\n::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n<div id=\"everything\">\r\n\t<div id=\"survey_outline\"></div>\r\n</div>\r\n<span id=\"scales_span\"></span>\r\n<script>\r\n/*\r\n* Retrieving settings\r\n*/\r\n\r\nif(typeof(settings) !== \"undefined\"){\r\n  settings = [settings];\r\n} else {\r\n  settings = {};\r\n}\r\n\r\n/*\r\n* vertical vs. horizontal tabs\r\n*/\r\n\r\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\r\n  settings.tab_hor_vert = \"horizontal\";\r\n  var please_wait = $(\"<div>\");\r\n  var this_survey = $(\"<div>\");\r\n  var survey_tabs = $(\"<div>\");\r\n  var proceed_btn = $(\"<input>\");\r\n  please_wait.attr(\"id\", \"please_wait_div\")\r\n             .html(\"Loading... Please wait\");\r\n  this_survey.addClass(\"needs-validation\")\r\n             .attr(\"id\", \"this_survey_id\")\r\n             .attr(\"novalidate\", true);\r\n  survey_tabs.attr(\"id\", \"survey_tabs\")\r\n             .addClass(\"border-top\")\r\n             .addClass(\"border-primary\")\r\n             .css(\"text-align\", \"right\")\r\n  proceed_btn.addClass(\"btn\")\r\n             .addClass(\"btn-primary\")\r\n             .attr(\"id\", \"proceed_button\")\r\n             .attr(\"type\", \"submit\")\r\n             .attr(\"value\", \"Proceed\")\r\n  $(\"#survey_outline\").append(please_wait)\r\n                      .append(this_survey)\r\n                      .append(survey_tabs)\r\n                      .append(proceed_btn);\r\n\r\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\r\n  $(\"#survey_outline\").html(\r\n    '<table>' +\r\n      '<tr>' +\r\n        '<td valign=\"top\" class=\"border-right border-primary\">'+\r\n          '<div id=\"survey_tabs\"></div>' +\r\n        '</td>' +\r\n        '<td>'+\r\n          '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n          '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\r\n          '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\r\n        '</td>'+\r\n      '</tr>'+\r\n    '</table>'\r\n  );\r\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\r\n  $(\"#survey_outline\").html(\r\n    '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\r\n    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'\r\n  );\r\n} else {\r\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\r\n}\r\n\r\n/*\r\n* Defining objects\r\n*/\r\n\r\npage_break_management = {\r\n  breaks_remaining : 0,\r\n  breaks_index     : 0\r\n}\r\n\r\nproceed_object = {\r\n  type:[],\r\n  name:[],\r\n  break_no:[]\r\n};\r\n\r\nscoring_object={\r\n  scales:[],\r\n  scale_scores:[],\r\n  update_scales:function(this_survey){\r\n    headers = Object.keys(this_survey[0]);\r\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\r\n    var scales_html = '';\r\n    this.scales.forEach(function(element){\r\n      element = element.replace(\": \",\":\");\r\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\r\n    });\r\n    $(\"#scales_span\").html(scales_html);\r\n  }\r\n}\r\n\r\nsurvey_obj = {};\r\n\r\n/*\r\n* Element actions\r\n*/\r\n\r\n/*\r\n$(function() {\r\n  $( \".datepicker\" ).datepicker({\r\n    dateFormat : 'mm/dd/yy',\r\n    changeMonth : true,\r\n    changeYear : true,\r\n    yearRange: '-100y:c+nn',\r\n    maxDate: '-1d'\r\n  });\r\n});\r\n*/\r\n\r\n\r\n$('#ExperimentContainer').css('transform','scale(1,1)');\r\n\r\n$(\"#proceed_button\").on(\"click\",function(){\r\n  var proceed = true;\r\n  var tabs    = document.getElementsByClassName('show_tab active');\r\n  if(tabs.length > 0){\r\n    var current_tab       = document.getElementsByClassName(\r\n      'show_tab active')[0]\r\n        .id\r\n        .replace(\"_button\", \"\")\r\n        .replace(\"tab_\",    \"\");\r\n    var response_elements = $('#table_'+current_tab).find('.response_element');\r\n\r\n  } else {\r\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\r\n  }\r\n\r\n  for(var i = 0; i < response_elements.length; i++){\r\n    [row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\r\n    var this_optional = survey_obj.data[row_no].optional.toLowerCase();\r\n\r\n    if(this_optional.indexOf(\"no\") !== -1){\r\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\r\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\r\n        var min_resp_length = 1;\r\n      } else if(this_optional.length == 2) {\r\n        var min_resp_length = this_optional[1];\r\n      } else {\r\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\r\n        return false;\r\n      }\r\n    } else {\r\n      min_resp_length = 0;\r\n    }\r\n\r\n\r\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\r\n    if (quest_resp.length < min_resp_length){\r\n      proceed = false;\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\r\n    } else {\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\r\n    }\r\n  }\r\n\r\n  if(current_tab == survey_obj.tabs && proceed){\r\n    if(typeof(sql_surveys) == \"undefined\"){\r\n      //$(\".table_break\");\r\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\r\n\r\n      if($(\".table_break#table\"+next_table_no).length == 0){\r\n        if(typeof(Trial) !== \"undefined\"){\r\n          Trial.submit();\r\n        } else {\r\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\r\n        }\r\n      } else {\r\n        $(\".table_break\").hide();\r\n        $(\".table_break#table\" + next_table_no).show();\r\n      }\r\n    } else {\r\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\r\n    }\r\n  } else if(current_tab < survey_obj.tabs && proceed) {\r\n    current_tab ++;\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\r\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-dark\");\r\n    $(\"#tab_\"+current_tab+\"_button\").click();\r\n  } else if(proceed == false){\r\n    bootbox.alert(\"You have failed to complete at least one compulsory input.\");\r\n  } else if(current_tab > survey_obj.tabs){\r\n    bootbox.alert(\"Error - please contact the Collector team about this problem, error 'Survey_001'.\");\r\n  }\r\n});\r\n\r\n//by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\r\nString.prototype.replaceAll = function(str1, str2, ignore){\r\n  return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n}\r\n\r\n\r\n/*\r\nFunctions\r\n*/\r\n\r\nfunction clean_item(this_item){\r\n  if(this_item.indexOf(\"'\") !== -1 |\r\n     this_item.indexOf('\"') !== -1){\r\n    bootbox.alert(\"Please avoid apostraphes or quote marks in the responses the participant can give. These cause problems with smooth running of surveys. This occurs when you wrote:<br><br>\" + this_item);\r\n  }\r\n  return(this_item);\r\n}\r\n\r\nfunction generate_feedback_string(feedback_array, this_index, feedback_color, row){\r\n  if(feedback_array){                 //i.e. if it's not null\r\n    if(feedback_array.length > 1){\r\n      return \"<div class='feedback_span_multiple \"+row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    } else {\r\n      return \"<div class='feedback_span_single \" +\r\n      row[\"item_name\"].toLowerCase() + \"_feedback' style='color:\" +\r\n      feedback_color[this_index] +\r\n      \"'>\" +\r\n      feedback_array[this_index] +\r\n      \"</div>\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction get_feedback(row){\r\n  if(typeof(row[\"feedback\"]) !== \"undefined\" && row[\"feedback\"] !== \"\"){\r\n    feedback_array = row[\"feedback\"].split(\"|\");\r\n    if(typeof(row[\"feedback_color\"]) == \"undefined\"){\r\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\r\n    }\r\n    feedback_color = row[\"feedback_color\"].split(\"|\");\r\n  } else {\r\n    feedback_array = null;\r\n    feedback_color = '';\r\n  }\r\n  return [feedback_array,feedback_color];\r\n}\r\n\r\nfunction isJSON(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction likert_update(this_element){\r\n\r\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\r\n\r\n  $(\".row_\"+row_no).removeClass(\"active\");\r\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\r\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\r\n  $(this_element).removeClass(\"btn-outline-primary\");\r\n  $(this_element).addClass(\"btn-primary\");\r\n  $(\"#survey_\"+item_name+\"_response\").val(this_element.value);\r\n  response_check(this_element);\r\n}\r\n\r\nfunction load_survey(survey){\r\n  /*\r\n  * are we in preview?\r\n  */\r\n  if(typeof(parent.collector_survey_preview) !== \"undefined\"){\r\n    survey_content = survey;\r\n  } else if(typeof(parent.master_json) !== \"undefined\" && parent.master_json.surveys.preview){\r\n    survey_content = survey;\r\n    survey_obj.mods = parent.master_json.mods;\r\n  } else {\r\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\r\n\r\n    if(typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n       typeof(parent.parent.exp_json.surveys[survey]) !== \"undefined\"){\r\n      survey_content = parent.parent.exp_json.surveys[survey];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\r\n    } else if(\r\n      typeof(parent.parent.exp_json.surveys) !== \"undefined\" &&\r\n      typeof(parent.parent.exp_json.surveys[\r\n        survey.replace(\".csv\",\"\")\r\n      ])\r\n    ){\r\n\t\t\tsurvey_content = parent.parent.exp_json.surveys[survey.replace(\".csv\",\"\")];\r\n      survey_obj.mods = parent.parent.exp_json.mods;\r\n\t\t}\telse {\r\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\r\n    }\r\n  }\r\n  process_returned_questionnaire(survey_content);\r\n}\r\n\r\nfunction process_question(row, row_no){\r\n  row.values = row.values == \"\" ? row.answers : row.values;\r\n  if(row_check(\"page_break\", row)){\r\n    page_break_management.breaks_remaining++;\r\n    question_td = \"</tr></table><table id='table\" +\r\n      page_break_management.breaks_remaining +\r\n      \"' style='display:none' class='table_break'></tr>\";\r\n  } else {\r\n    if(\r\n      typeof(row[\"values\"]) !== \"undefined\" & typeof(row[\"values\"]) !== \"function\"\r\n    ){ //to address microsoft edge issue.\r\n      value_array = row[\"values\"].split(\"|\");\r\n    } else {\r\n      value_array='';\r\n    }\r\n\r\n    if(row[\"item_name\"].indexOf(\" \") !== -1){\r\n      bootbox.alert(\"Please note that the 'item name' '\" +\r\n        row['item_name'] +\r\n        \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\"\r\n      );\r\n    }\r\n\r\n    /*\r\n    * class for scoring\r\n    */\r\n\r\n    var this_class = \"\";\r\n    for(var i=0;i<scoring_object.scales.length;i++){\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\r\n          \"score: \",\"\"\r\n        ).replace(/ |-/,\"\") + \" \";\r\n      }\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\r\n      }\r\n    }\r\n\r\n    /*\r\n    * adding to row to help with \"write\" function\r\n    */\r\n    var row_x = JSON.parse(\r\n      JSON.stringify(row)\r\n    );\r\n    row_x[\"row_no\"] = row_no;\r\n    row_x[\"this_class\"] = this_class;\r\n\r\n    [feedback_array,feedback_color] = get_feedback(row);\r\n\r\n\r\n    question_td = '<input type=\"hidden\" class=\"response_element row_' + row_no + '\" id=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" name=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" value=\"\">';\r\n\r\n    /*\r\n    * Survey settings\r\n    */\r\n    [row_ques_perc,row_resp_perc] = row_perc(row[\"question_width\"]);\r\n\r\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\r\n      settings.feedback_before_response = true;\r\n    }\r\n\r\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\r\n      settings.lock_after_feedback = false;\r\n    }\r\n\r\n    if(typeof(row[\"type\"]) == \"undefined\"){\r\n      return false;\r\n    }\r\n\r\n    if(\r\n      typeof(survey_obj.mods) !== \"undefined\" &&\r\n\t\t\ttypeof(survey_obj.mods[row.type]) !== \"undefined\"\r\n    ){\r\n      var mod_html = survey_obj.mods[row.type].contents;\r\n\r\n      Object.keys(row).forEach(function(attribute){\r\n        mod_html = mod_html.replaceAll(\"{{\"+attribute+\"}}\",row[attribute]);\r\n      });\r\n      question_td += mod_html;\r\n    } else {\r\n      switch(row[\"type\"].toLowerCase()){\r\n        case \"page_start\":\r\n          var tabs_html = $(\"#survey_tabs\").html();\r\n          if(settings.tab_hor_vert == \"horizontal\"){\r\n            span_div = \"span\";\r\n          } else if(settings.tab_hor_vert == \"vertical\"){\r\n            span_div = \"div\";\r\n          }\r\n          if(typeof(survey_obj.tabs) == \"undefined\"){\r\n            survey_obj.tabs = 0;\r\n          } else {\r\n            survey_obj.tabs++;\r\n          }\r\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\r\n            active_button = \"btn-outline-primary active\";\r\n          } else {\r\n            active_button = \"btn-secondary disabled\";\r\n          }\r\n          if(settings.tab_hor_vert == \"vertical\"){\r\n            var vert_btn_block = \"btn-block\";\r\n          } else {\r\n            var vert_btn_block = \"\";\r\n          }\r\n\r\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\r\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ row['text'] +\r\n            '</label>'+\r\n          '</'+span_div+'>';\r\n\r\n          $(\"#survey_tabs\").html(tabs_html);\r\n\r\n          page_break_indexes = [];\r\n          survey_obj.data.forEach(function(row,this_index){\r\n            if(typeof(row.type) !== \"undefined\" && row.type.toLowerCase() == \"page_start\"){\r\n              page_break_indexes.push(this_index);\r\n            }\r\n          });\r\n\r\n          if(survey_obj.tabs > 0){\r\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\" + survey_obj.tabs + \"' style='display:none'><table id='table_\" + survey_obj.tabs + \"' class='table_break'><tr>\";\r\n          } else {\r\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          }\r\n          break;\r\n        case \"checkbox\":\r\n        case \"checkbox_vertical\":\r\n          question_td += write(\"checkbox_vertical\",row_x);\r\n          break;\r\n        case \"checkbox_horizontal\":\r\n          question_td += write(\"checkbox_horizontal\",row_x);\r\n          break;\r\n        case \"checkbox_single\":\r\n          question_td += write(\"checkbox_single\", row_x);\r\n          break;\r\n        case \"date\":\r\n          question_td += write(\"date\",row_x);\r\n        break;\r\n        case \"dropdown\":\r\n\t\t\t\tcase \"select\":\r\n          question_td += write(\"dropdown\",row_x);\r\n        break;\r\n        case \"email\":\r\n          question_td += write(\"email\", row_x);\r\n        break;\r\n        case \"google_slide\":\r\n        case \"jumbled\":\r\n        case \"instruct\":\r\n          // these are defined elsewhere to take the whole row\r\n          break;\r\n        case \"likert\":\r\n          question_td += write(\"likert\", row_x);\r\n        break;\r\n        case \"number\":\r\n          question_td += write(\"number\", row_x);\r\n          break;\r\n        case \"para\":\r\n          question_td += write(\"para\", row_x);\r\n          break;\r\n        case \"radio\":\r\n        case \"radio_vertical\":\r\n          question_td += write(\"radio_vertical\", row_x);\r\n          break;\r\n        case \"radio_horizontal\":\r\n          question_td += write(\"radio_horizontal\", row_x);\r\n        break;\r\n\r\n        case \"report_score\":\r\n            question_td += \"<input disabled class='form-control score_\" + row[\"item_name\"] + \" \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+row['item_name'].toLowerCase()+\"'>\";\r\n        break;\r\n\r\n        case \"text\":\r\n          question_td += write(\"text\", row_x);\r\n        break;\r\n      }\r\n    }\r\n    if(feedback_array){\r\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+row[\"item_name\"].toLowerCase()+\"_feedback' onclick='reveal_answers(this)'>Show</button>\";\r\n    }\r\n  }\r\n  if(typeof(row[\"type\"])== \"undefined\"){\r\n      return '';\r\n  } else {\r\n    if(row[\"type\"].toLowerCase() == \"instruct\"){\r\n      row_html  = write(\"instruct\",row);\r\n    } else if(row[\"type\"].toLowerCase() == \"jumbled\"){\r\n      row_html  = write(\"jumbled\",row);\r\n\t\t} else if(row[\"type\"].toLowerCase() == \"likert\"){\r\n\r\n\t\t\tif(typeof(row[\"side_by_side\"]) !== \"undefined\" &&\r\n\t\t\t\t row[\"side_by_side\"].toLowerCase() == \"yes\"){\r\n\r\n\t\t\t\tvar row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar row_html = \"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2'>\" +\r\n\t\t\t\t\t\t\trow[\"text\"] +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\" +\r\n\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2' align='center'>\" +\r\n\t\t\t\t\t\t\tquestion_td +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\";\r\n\t\t\t}\r\n\r\n\r\n    } else if(row[\"type\"].toLowerCase()==\"google_slide\") {\r\n      var row_html=\"<td colspan='2'>\"+row[\"text\"]+\"</label></td>\";\r\n    } else if(typeof(row[\"no_text\"]) !== \"undefined\" && row[\"no_text\"] == \"on\"){\r\n      var row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\r\n    } else {\r\n      if(row['text'].toLowerCase() == \"page_start\" | row['type'].toLowerCase() == \"page_start\"){\r\n        row_html = question_td;\r\n      } else {\r\n        var row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n      }\r\n    }\r\n    if(typeof(row[\"optional\"]) !== \"undefined\"){\r\n      if(row[\"optional\"].toLowerCase() == \"no\"){\r\n        proceed_object.name.push(row[\"item_name\"]);\r\n        proceed_object.type.push(row[\"type\"]);\r\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\r\n      }\r\n    }\r\n    if(typeof(row[\"shuffle_question\"]) == \"undefined\" || row[\"shuffle_question\"].toLowerCase() == \"off\"){\r\n      this_shuffle='none';\r\n    } else {\r\n      this_shuffle=row[\"shuffle_question\"];\r\n    }\r\n    return [row_html,this_shuffle];\r\n  }\r\n}\r\n\r\nfunction process_score(row_no, values_col, this_response, item, values_reverse ){\r\n  item_values = survey_obj.data[row_no][values_col].split(\"|\");\r\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\r\n    item_values.reverse();\r\n  }\r\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\r\n  var this_value    = item_values[item_answers.indexOf(this_response)];\r\n  $(\"#survey_\" + item + \"_score\").val(this_value);\r\n  if(typeof(this_value) !== \"undefined\"){\r\n    return parseFloat(this_value);\r\n  }\r\n}\r\n\r\nfunction process_returned_questionnaire(data){\r\n  survey_obj.data = data;\r\n  survey_obj.data = Papa.parse(\r\n    Papa.unparse(survey_obj.data),{\r\n      header:true,\r\n      beforeFirstChunk: function(chunk) {\r\n        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\r\n        var headings = rows[0].toLowerCase();\r\n        rows[0] = headings;\r\n        return rows.join(\"\\r\\n\");\r\n      },\r\n    }\r\n  ).data;\r\n  survey_obj.scales = {};\r\n  var col_headers = Object.keys(survey_obj.data[0]);\r\n  col_headers.forEach(function(header){\r\n    if(header.indexOf(\"score:\")==0){\r\n      var original_header = header;\r\n      header = header.replace(\"score: \",\"\");\r\n      header = header.replace(\"score:\",\"\");\r\n      survey_obj.scales[header] = {};\r\n      survey_obj.scales[header].questions = {};\r\n\r\n      for(var i = 1; i < survey_obj.data.length; i++){\r\n        row = survey_obj.data[i];\r\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\r\n          survey_obj.scales[header].questions[i] = row[original_header];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  write_survey(survey_obj.data,\"this_survey_id\");\r\n  $(\"#please_wait_div\").hide();\r\n  $(\"#proceed_button\").show();\r\n  $('html, body').animate({\r\n    scrollTop: $(\"#survey_outline\").offset().top\r\n  }, 1000);\r\n}\r\n\r\nfunction row_perc(this_rat){\r\n\tif(typeof(this_rat) == \"undefined\"){\r\n    row_resp_perc = \"50%\";\r\n    row_ques_perc = \"50%\";\r\n  } else {\r\n    row_resp_perc = parseFloat(100-this_rat.replace(\"%\",\"\"))+\"%\";\r\n    row_ques_perc = parseFloat(this_rat.replace(\"%\",\"\"))+\"%\";\r\n  }\r\n  return [row_ques_perc,row_resp_perc];\r\n}\r\n\r\nfunction response_check(submitted_element){\r\n  switch(submitted_element.type){\r\n    case \"checkbox\":\r\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\r\n      if(checked_responses.length){ //i.e. more than 0\r\n        var values = [];\r\n        for(var i = 0; i < checked_responses.length; i++){\r\n          values.push(checked_responses[i].value);\r\n        }\r\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\r\n      } else {\r\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\r\n      }\r\n      break;\r\n\r\n      case \"button\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.innerHTML\r\n        );\r\n      break;\r\n\r\n      case \"number\":\r\n      case \"radio\":\r\n      case \"select-one\":\r\n      case \"text\":\r\n      case \"textarea\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.value\r\n        );\r\n      break;\r\n    }\r\n    update_score();\r\n}\r\n\r\nfunction retrieve_row_no_item_name(this_element){\r\n  var these_classes = this_element.className.split(\" \");\r\n  var row_no;\r\n  var item_name;\r\n  these_classes.forEach(function(this_class){\r\n    if (this_class.indexOf('row_') > -1) {\r\n      row_no = this_class.replace(\"row_\",\"\");\r\n    }\r\n    if (this_class.indexOf('_item') > -1) {\r\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\r\n    }\r\n  });\r\n  return [row_no,item_name];\r\n}\r\n\r\nfunction reveal_answers(this_element){\r\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\r\n  response_present = this_response == \"\" ? false : true;\r\n\r\n  if(settings.feedback_before_response == false && response_present == false){\r\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\r\n  } else {\r\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\r\n      if(settings.lock_after_feedback){\r\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\r\n        $(\".\"+item_class).prop(\"disabled\",true);\r\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).html(\"Locked\");\r\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\r\n        $(\"#\"+this_element.id).addClass(\"disabled\");\r\n      } else {\r\n        $(\"#\"+this_element.id).html(\"Hide\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n      }\r\n    } else {\r\n      $(\"#\"+this_element.id).html(\"Show\");\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\r\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\r\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction row_check(type, row){\r\n  if(type = \"page_break\"){\r\n    return (\r\n      typeof(row[\"text\"]) !== \"undefined\" &&\r\n\t\t  typeof(row[\"type\"]) !== \"undefined\" &&\r\n\t\t  row['text'].toLowerCase() == \"page_break\" |\r\n      row['type'].toLowerCase() == \"page_break\"\r\n    )\r\n\r\n  } else if(type=\"\"){\r\n\r\n  }\r\n}\r\n\r\n// http://stackoverflow.com/questions/962802#962890\r\nfunction shuffle(array) {\r\n  var tmp, current, top = array.length;\r\n  if(top) while(--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction shuffle_answers(row){\r\n  if(\r\n    typeof(row[\"shuffle_answers\"]) !== \"undefined\" &&\r\n    row[\"shuffle_answers\"].toLowerCase() == \"yes\"\r\n  ){\r\n    var answers = row[\"answers\"].split(\"|\");\r\n    order = shuffle([...Array(answers.length).keys()]);\r\n\r\n    var ordered_answers = order.map(function(position){\r\n      return answers[position];\r\n    });\r\n    row[\"answers\"] = ordered_answers.join(\"|\");\r\n\r\n    if(row[\"values\"].indexOf(\"|\") !== -1){\r\n      var values = row[\"values\"].split(\"|\");\r\n      var ordered_values = order.map(function(position){\r\n        return values[position];\r\n      });\r\n      row[\"values\"] = ordered_values.join(\"|\");\r\n    }\r\n  }\r\n  return row;\r\n}\r\n\r\nfunction update_score(){\r\n  var scales = Object.keys(survey_obj.scales);\r\n  scales.forEach(function(scale){\r\n    this_scale = survey_obj.scales[scale];\r\n    var questions = Object.keys(this_scale.questions);\r\n    var this_score = 0;\r\n    complete_score = true;\r\n\r\n    questions.forEach(function(row_no){\r\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\r\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\r\n      var normal_reverse = this_scale.questions[row_no];\r\n\r\n      if(normal_reverse.indexOf(\"-\") == -1){\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,\"values\",this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,\"values\",this_response,item);\r\n        }\r\n      } else {\r\n        values_reverse = normal_reverse.split(\"-\");\r\n        values_col     = values_reverse[0].toLowerCase();\r\n        normal_reverse = values_reverse[1];\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,values_col,this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,values_col,this_response,item);\r\n        }\r\n      }\r\n      if(typeof(this_value) !== \"undefined\"){\r\n        this_score += multiplier * this_value;\r\n      } else {\r\n        complete_score = false;\r\n      }\r\n    });\r\n    if(complete_score){\r\n      $(\".score_\"+scale).addClass(\"bg-success\");\r\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\r\n    } else {\r\n      $(\".score_\"+scale).removeClass(\"text-success\");\r\n      $(\".score_\"+scale).addClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\r\n    }\r\n    $(\".score_\"+scale).val(this_score);\r\n  });\r\n}\r\n\r\nfunction write(type, row){\r\n  var this_html = \"\";\r\n  [feedback_array, feedback_color] = get_feedback(row);\r\n  row = shuffle_answers(row);\r\n  row[\"item_name\"] = row[\"item_name\"].toLowerCase();\r\n\r\n  if(type == \"checkbox_horizontal\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-checkbox\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"checkbox\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-checkbox\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_single\"){\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.attr(\"data-toggle\", \"buttons\");\r\n        this_div.addClass(\"btn-group-toggle\");\r\n    var this_label = $(\"<label>\");\r\n        this_label.addClass(\"btn\");\r\n        this_label.addClass(\"btn-outline-primary\");\r\n        this_label.html(row[\"answers\"]);\r\n    var this_checkbox = $(\"<input>\");\r\n        this_checkbox[0].id = row[\"item_name\"];\r\n        this_checkbox[0].name = \"survey_\" +\r\n          row[\"item_name\"].toLowerCase();\r\n        this_checkbox[0].type = \"checkbox\";\r\n        this_checkbox.attr(\"checked\",true);\r\n        this_checkbox\r\n          .addClass(\"response\")\r\n          .addClass(\r\n            row[\"item_name\"] +\r\n            '_item row_' +\r\n            row[\"row_no\"]\r\n          );\r\n    this_div.append(this_label);\r\n    this_label.append(this_checkbox)\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    for(var i = 0; i < options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color, row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\");\r\n      var this_checkbox = $(\"<input>\");\r\n          this_checkbox[0].id= row[\"item_name\"]+ i;\r\n          this_checkbox[0].type = \"checkbox\";\r\n          this_checkbox[0].name = 'survey_'+\r\n            row[\"item_name\"].toLowerCase();\r\n          this_checkbox\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"item_name\"] + \"_item_row\");\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerHTML = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_checkbox)\r\n              .append(this_label);\r\n\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"date\"){\r\n    var input = $(\"<input>\");\r\n        input.addClass(\"response\")\r\n             .addClass(\"custom-control\")\r\n             .addClass(\"datepicker\")\r\n             .addClass(\"date\")\r\n             .addClass(row[\"item_name\"] + \"_item\")\r\n             .addClass(\"row_\" + row[\"row_no\"])\r\n             .attr(\"name\", \"survey_\" + row['item_name'])\r\n             .attr(\"type\", \"text\");\r\n\r\n  } else if(type == \"dropdown\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_dropdown = $(\"<select>\");\r\n        this_dropdown.addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(\"txt-primary\")\r\n          .addClass(row[\"item_name\"] + \"_item\")\r\n          .addClass(\"row_\" + row[\"row_no\"])\r\n          .addClass(\"collector_button\")\r\n          .attr(\"name\", \"survey_\" + row[\"item_name\"])\r\n          .css(\"margin\", \"0px\")\r\n          .css(\"width\", \"auto\");\r\n\r\n    this_dropdown.append(\"<option selected disabled hidden>-- no option selected --</option>\");\r\n    options.forEach(function(this_option){\r\n      this_dropdown.append(\r\n        \"<option>\" + this_option + \"</option>\"\r\n      );\r\n    });\r\n    var this_html = this_dropdown[0].outerHTML;\r\n\r\n  } else if(type == \"email\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .attr(\"type\", \"email\")\r\n          .attr(\"name\", 'survey_' + row['item_name']);\r\n\r\n  } else if(type == \"instruct\"){\r\n    this_html += \"<td colspan='2'>\" + row[\"text\"] + \"</td>\";\r\n  } else if(type == \"jumbled\"){\r\n    var this_td = $(\"<td>\");\r\n        this_td.attr(\"colspan\",2) ;\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.addClass(\"form-inline\")\r\n                .addClass(\"bg-secondary\")\r\n                .addClass(\"text-white\")\r\n                .css(\"width\", \"100%\")\r\n                .css(\"padding\", \"20px\")\r\n                .css(\"margin\", \"20px\")\r\n                .css(\"border-radius\", \"5px\");\r\n\r\n    var question = row[\"text\"].split(\"|\");\r\n    questions_html = question.map(function(text,index){\r\n      if(index == question.length - 1){\r\n        return text;\r\n      } else {\r\n        var row_x = row;\r\n        row_x[\"item_name_old\"] = row_x[\"item_name\"];\r\n        row_x[\"item_name\"]     = row_x[\"item_name\"] + \"_\" + index;\r\n        var row_html = text + write(\"dropdown\", row_x)\r\n          .replace(\"margin: 0px\",\"margin: 5px\");\r\n        row_x[\"item_name\"] = row_x[\"item_name_old\"];\r\n        return row_html;\r\n      }\r\n    }).join(\"\");\r\n\r\n    this_td.append(this_div);\r\n    this_div.append(questions_html);\r\n\r\n    this_html = this_td[0].outerHTML;\r\n\r\n  } else if(type == \"likert\"){\r\n    // set styles\r\n    if(typeof(row[\"btn_width\"]) == \"undefined\"){\r\n      row[\"btn_width\"] = \"auto\"\r\n    }\r\n    if(typeof(row[\"side_width\"]) == \"undefined\"){\r\n      var side_width = \"auto\";\r\n    }\r\n\r\n    // create and build these elements\r\n    var this_div = $(\"<div>\");\r\n    if(typeof(row[\"side_text\"]) !== \"undefined\" &&\r\n      row[\"side_text\"] !== \"\"\r\n    ){\r\n      side_text = row[\"side_text\"].split(\"|\");\r\n      side_text = side_text.map(function(this_side){\r\n        var this_span = $(\"<span>\");\r\n            this_span.css(\"width\", side_width)\r\n                     .css(\"padding\", \"20px\")\r\n                     .addClass(\"text-primary\")\r\n                     .html(\"<b>\" + this_side + \"</b>\");\r\n        return this_span[0].outerHTML;\r\n      });\r\n    } else {\r\n      side_text = [\"\",\"\"];\r\n    }\r\n\r\n    this_div\r\n      .addClass(\"btn-group\")\r\n      .addClass(\"btn-group-toggle\")\r\n      .append(side_text[0])\r\n      .attr(\"data-togle\",\"buttons\");\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length;i++){\r\n      var this_button = $(\"<button>\");\r\n          this_button\r\n            .attr(\"autocomplete\", \"off\")\r\n            .attr(\"id\", 'likert_' + row[\"row_no\"] + '_' + i)\r\n            .attr(\"onclick\",'likert_update(this)')\r\n            .attr(\"value\", values[i])\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-outline-primary\")\r\n            .addClass(\"survey_btn\")\r\n            .addClass(\r\n              row[\"item_name\"] + '_item row_' + row[\"row_no\"]\r\n            )\r\n            .css(\"width\", row[\"btn_width\"])\r\n            .html(clean_item(options[i]));\r\n      this_div.append(this_button);\r\n    }\r\n    this_div.append(side_text[1]);\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"number\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type = \"number\";\r\n        this_input[0].name = 'survey_' + row['item_name'];\r\n        this_input\r\n          .addClass(\"response\")\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\r\n    this_html += this_input[0].outerHTML;\r\n\r\n  } else if(type == \"para\"){\r\n    var this_textarea = $(\"<textarea>\");\r\n        this_textarea[0].name = \"survey_\" + row['item_name'];\r\n        this_textarea\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\");\r\n        this_textarea.css(\"width\", \"100%\")\r\n                     .css(\"height\", \"200px\");\r\n    this_html += this_textarea[0].outerHTML;\r\n\r\n  } else if(type == \"radio_horizontal\"){\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"radio\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-radio\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"radio_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color,row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type  = \"radio\";\r\n          this_input[0].id    = row[\"item_name\"] + i;\r\n          this_input[0].value = options[i];\r\n          this_input[0].name  = 'survey_' + row[\"item_name\"];\r\n          this_input\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"response\")\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\")\r\n            .addClass(row[\"item_name\"] + \"_item_row_\" + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"]+i;\r\n          this_label.addClass(\"custom-control-label\");\r\n          this_label.html(options[i]);\r\n      this_div\r\n        .append(this_input)\r\n        .append(this_label)\r\n        .append(feedback_string);\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"text\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type=\"text\";\r\n        this_input[0].name=\"survey_\" + row['item_name'];\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\")\r\n    this_html += this_input[0].outerHTML;\r\n  }\r\n\r\n  switch(type){\r\n    case \"checkbox_vertical\":\r\n    case \"radio_vertical\":\r\n      // do nothing\r\n      break;\r\n    default:\r\n      this_html += generate_feedback_string(\r\n        feedback_array,\r\n        0,\r\n        feedback_color,\r\n        row\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (this_html);\r\n}\r\n\r\nfunction write_survey(this_survey, this_id){\r\n  scoring_object.update_scales(this_survey);\r\n  survey_html = \"<table class='table_break' id='table0'>\";\r\n  this_survey_object={\r\n    content:[],\r\n    shuffle_question:[],\r\n    content_new_order:[],\r\n    shuffled_content:[],\r\n    shuffled_arrays:{},\r\n  }\r\n\r\n  survey_html += \"<tr>\";\r\n  for(i = 0; i < this_survey.length; i++){\r\n    row = this_survey[i];\r\n    row_html = process_question(row,i);\r\n\t\tthis_survey_object.content.push(row_html[0]);\r\n    this_survey_object.shuffle_question.push(row_html[1]);\r\n\t}\r\n\r\n\tunique_shuffles = this_survey_object.shuffle_question.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\r\n\r\n\tfor(var i=0;i<unique_shuffles.length;i++){\r\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\r\n      unique_shuffles[i] !== \"none\" &&\r\n      unique_shuffles[i] !== \"\"){\r\n        shuffled_content = this_survey_object.shuffle_question.map(function(element,index){\r\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\r\n  \t       return this_survey_object.content[index];\r\n    \t   }\r\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\r\n    \tnew_order = shuffle(shuffled_content);\r\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\r\n    }\r\n\t}\r\n\r\n\tfor(var i=0;i<this_survey_object.content.length;i++){\r\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle_question[i]);\r\n    if(this_index !== -1){\r\n      //take first item off relevant list and delete item\r\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\r\n      this_survey_object.content_new_order[i]=this_item;\r\n    } else {\r\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\r\n    }\r\n\t}\r\n\r\n\tqs_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\r\n\tqs_in_order += \"</tr>\";\r\n\r\n\tsurvey_html += qs_in_order;\r\n\tsurvey_html += \"</table>\";\r\n\r\n\t$(\"#\" + this_id).html(survey_html);\r\n\r\n  $(\".response\").on(\"change\", function(){\r\n    response_check(this);\r\n  })\r\n\r\n  $(\"#\" + this_id).show(1000); //scroll to top\r\n\r\n\t$(\".show_tab\").on(\"click\",function(){\r\n    if(this.className.indexOf(\"disabled\") == -1){\r\n      $(\".show_tab\").removeClass(\"active\");\r\n      $(\".survey_page\").hide();\r\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\r\n    } else {\r\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\r\n    }\r\n\t});\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\r\n}\r\n\r\n/*\r\n* Load survey\r\n*/\r\ncurrent_survey = \"{{survey}}\";\r\nif(typeof(Trial) !== \"undefined\"){\r\n  Trial.set_timer(function(){\r\n    load_survey(current_survey);\r\n  },100);\r\n} else {\r\n  load_survey(current_survey);\r\n}\r\n</script>\r\n"
        },
        "mods": {},
        "procs_csv": {},
        "stims_csv": {}
      },
      "group_c": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,\r\n2,instruct,user,This is the start of a new experiment.,off,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,groupwork,stimuli_1.csv,procedure_1.csv,off,,on,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"
        },
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw=",
        "surveys": {},
        "trialtypes": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>"
        },
        "procs_csv": {},
        "stims_csv": {}
      }
    }
  },
  "github": {
    "organization": "scientific-open-solutions",
    "repository": "unlockabook",
    "organizations": {}
  },
  "mods": {
    "nico_examples": {
      "contents": "<div id=\"experiment_div\"></div>\n\n<script>\nvar index = 0;\nvar trial_iframe = $(\"<iframe>\");\ntrial_iframe.addClass(\"trial_iframe\")\n            .attr(\"frameBorder\", \"0\")\n            .attr(\"id\", \"trial\" + index)\n            .attr(\"scrolling\", \"no\")\n            .css(\"height\", \"100%\")\n            .css(\"width\", \"100%\");\nconsole.log(trial_iframe);\n\n$(\"#experiment_div\").append(trial_iframe);\n\nthis_iframe = document.getElementById('trial'+index).contentWindow;\n\nvar timer_div = $(\"<div>\");\n    timer_div.html(\"I'm a timer\")\n             .attr(\"id\",\"this_timer\");\n    \n    timer_div_html = timer_div[0].outerHTML;\n    \n    /*\n    i=0; \n    setInterval(function(){ \n      document.getElementById('this_timer').innerHTML = i;\n      i+= 1\n    },1000)\n    */\n    \n    var seconds = 1800;\n    var minutes = Math.floor(seconds/60)\n        seconds = seconds % 60;    \n    \n    var this_code = \"i=1800;\" +\n    \"setInterval(function(){\" +\n      \"var seconds = i;\" +\n      \"var minutes = Math.floor(seconds/60);\" +\n      \"seconds = seconds % 60;\" +\n      \"document.getElementById('this_timer').innerHTML = minutes + ':' + seconds;\"+\n      \"i-= 1},1000)\" ;\n    \n\nthis_iframe.document.open();\nthis_iframe.document.write(timer_div_html + \"\\n\" +\n  \"<scr\" + \"ipt>\" + \n    this_code + \n  \"</scr\" + \"ipt>\");\nthis_iframe.document.close();\n\n\n\n\n\n</script>",
      "location": ""
    },
    "_help": {}
  },
  "surveys": {
    "preview": true,
    "user_surveys": {
      "group_b_session_1.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_answers",
          "shuffle_question",
          null
        ],
        [
          "b1",
          "What is the function of a Ruffini receptor?",
          "radio",
          "To detect skin stretching. | To detect pressure on the skin. | To detect changes in temperature. | To detect movement",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b2",
          "Where is a golgi tendon organ located and what is its function?<br><br>The | are at the junction between | and |, they signal forces imposed on, or generated by, the |.",
          "jumbled",
          "Muscles|Tendons|Muscles|Golgi Tendon Organs",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b3",
          "Holly pours herself a cup of tea and spills it on herself, and she quickly pulls her arm away. Which one of the following is responsible for her reaction?",
          "radio",
          "Primary Sensory Endings. | Secondary Sensory Endings. | Cutaneous Receptors. | Muscle Spindles.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b4",
          "Which of these is NOT a function of joint angle receptors? There are 2 correct answers.",
          "checkbox",
          "Least active at extreme angles. |\nThey are rapidly adapting. |\nThey are not very sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b5",
          "Intrafusal | are embedded in|. They are innervated by | and | endings that respond to changes of muscle length.",
          "jumbled",
          "Sensory Endings|Muscle Spindles|Gamma Motor|Muscles",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "b6",
          "What is the function of a Gamma Motor Neuron?",
          "radio",
          "It innovates the intrafusal fibres to match the muscle length. | It innovates the extrafusal fibres to match muscle length. | To detect pressure of the intrafusal fibres. | To detect stretch of the muscle length.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b7",
          "The dorsal column medial lemniscal system is an ascending pathway for | and |. The information is carried via neurons and eventually ends up in the |. Touch and proprioception are | in these ascending pathways.",
          "jumbled",
          "Separated|Somatosensory Cortex|Proprioception|Touch",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "b8",
          "| are slow adapting and are found at the | of the muscle fibre and react to changes of muscle |.",
          "jumbled",
          "Tail Endings|Length|Secondary Sensory Endings",
          "",
          "",
          "",
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "group_b_session_2.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_answers",
          "shuffle_question",
          null
        ],
        [
          "b1",
          "Skin receptors can also signal movements, what receptors detect skin stretching?",
          "radio",
          "Ruffini receptors. \n| Joint angle receptor. | Movement receptors.|Proprioceptors.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b2",
          "The Golgi tendon organs are at the | between muscles and |, they signal | imposed on, or generated by, |.",
          "jumbled",
          "Forces|Junction|Muscles|Tendons",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b3",
          "Which of the following is the correct explanation of primary sensory endings?",
          "radio",
          "They wrap around the belly of the fibre in a spiral fashion and react to changes of muscle length and the rate of change (fast adapting). |\nThey are at the tail endings of the muscle fibre and react to changes of muscle length (slowly adapting). |\nThey wrap around the head of the fibre in parallel lines and react to changes of muscle length and rate of change (fast adapting).|\nThey are at the tail endings of the muscle fibre and react to the rate of change in muscle length (fast adapting).",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b4",
          "Which of these is a function of joint angle receptors? There may be more than one correct answer.",
          "checkbox",
          "Least active at extreme angles.|\nThey are rapidly adapting. |\nThey are not sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b5",
          "| muscle spindles are embedded in muscles.\nThey are innervated by | and | endings \nthat respond to changes of |.",
          "jumbled",
          "Gamma Motor|Intrafusal|Muscle Length|Sensory Endings",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b6",
          "What innervates the intrafusal fibres to match the muscle length i.e. adjusting the sensitivity of the muscle spindles ?",
          "radio",
          "Alpha motor fibre. | \nGamma Motor Neuron. | \nGamma Motor Fibre. | \nExtrafusal Muscle fibre.",
          "",
          "no",
          "yes",
          "",
          null
        ],
        [
          "b7",
          "The dorsal column medial lemniscal system is an | for touch and proprioception.\n The information is carried via | and eventually ends up in the somatosensory cortex. \n| and | are separated in these ascending pathways.",
          "jumbled",
          "Ascending Pathway|Neurons|Proprioception|Touch",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b8",
          "Secondary sensory endings are |\n and are found at the |\nof the muscle fibre and react to changes of muscle |.",
          "jumbled",
          "Length|Slow Adapting|Tail Endings",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "",
          "",
          "",
          "",
          "",
          null,
          null,
          null,
          null
        ]
      ],
      "group_a_info.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          ""
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Dr. Anthony Haffey</td>\n    <td>a.haffey@reading.ac.uk</td>\n    <td>0118 378 8850</td>\n  </tr>\n</table>\n\n<h2>Title of Study: How do flashcards help learning?</h2>\n<h1>PARTICIPANT INFORMATION SHEET </h1>\n\n<h2>Invitation paragraph </h2>\nYou have been invited to take part in a research study. Before you decide whether to take part it is important for you to understand why the research is being done and what it will involve. Please take time to read the following information carefully and discuss it with friends and relatives if you wish to. Ask us if there is anything that is not clear or if you would like more information. Take time to decide whether you wish to take part or not. Thank you for reading this. \n \n \n<h2>What is the study about? </h2>\nThe study will investigate how flashcards influence your learning. \n \n \n<h2>What does the study involve? </h2>\nYou will be presented with 12 flashcards containing information from the perception and neuroscience module. You will be given 30 minutes to study the flashcards and after a 3 hour time gap, you will be able to take a 15 minute multiple choice test.\n \n \n<h2>Do I have to take part? </h2>\nIt is up to you to decide whether or not to take part. If you do decide to take part you will be asked to sign a consent form. If you decide to take part you are still free to withdraw at any time during the data collection without giving a reason. \n \n \n<h2>I am interested in taking part, what do I do next? </h2>\nPlease find a quiet room with minimal distractions. Please ensure you have a good internet connection on a PC / laptop / tablet device. You will be allotted 30 minutes time to study the flashcards. There will then be a gap of 3 hours before completing an online test. You will have 20 minutes to complete the test. Once ready please follow the link to the online study. \n \n \n<h2>What if I agree to take part and then change my mind? </h2>\nThat is fine. If you decide to withdraw after completing the task then you would need to provide your SONA ID to the researchers. The researcher will then delete all the data generated by that ID. \n \n \n<h2>Will my taking part in this study be kept confidential? </h2>\nAll information which is collected about you during the course of the research will be kept on a password protected database and is strictly confidential. You will be given an ID code which will be used instead of your name. The lead researcher will replace the SONA ID with a participant number to further anonymise the data before sharing it with the other researchers. \n \n \n<h2>Who has reviewed the study? </h2>\nThis study has been reviewed and approved by the school ethics committee and has been given a favourable ethical opinion for conduct. \n \n \n<h2>How is data secured? </h2>\nNo personally identifiable information will be stored for this project. <br>\n<br>\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct <br>\n<br>\nThank you, <br>\n<br>\nProject Supervisor: Anthony Haffey <br>\n<br>\nModule convenor: Anthony Haffey (a.haffey@reading.ac.uk) \n",
          "instruct",
          "",
          "",
          "",
          ""
        ],
        [
          "info_voluntary",
          "I understand that my participation in this study is voluntary and that I may withdraw any time without giving any reason.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_read_sheet",
          "I have read the information sheet about this study and the procedure of the study has been explained to me.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_ask_question",
          "I have been given the opportunity to ask any questions that I may have about the study and these have been answered to my satisfaction.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_understand",
          "I understand that the data collected from me in this study will be preserved and made available in anonymised form, so that they can be consulted and re-used by others.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "insfo_first",
          "First name",
          "text",
          null,
          null,
          null,
          null
        ],
        [
          "info_last",
          "Last name",
          "text",
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "flashcard_test.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_question",
          "shuffle_answers",
          "score: flashcard_total",
          null
        ],
        [
          "flashcard_1",
          "1. What is synaesthesia?",
          "radio",
          "A lack of sensory/cognitive activation in response to a stimulus|A cognitive/sensory condition only affecting children|A response to a stimulus that prompts a secondary involuntary response from another sensory/cognitive pathway\n",
          "0|0|1",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_2",
          "2. Name three types of synaesthesia",
          "text",
          "",
          "",
          "No",
          "",
          "",
          "",
          null
        ],
        [
          "flashcard_3",
          "3. Name two ways to identify synaesthesia",
          "checkbox",
          "Modified Stroop task|Tower of Hanoi task|Visual Search task|9 Dot task",
          "1|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_4",
          "4. Reduced neural pruning' relates to which theory of synaesthesia?",
          "radio",
          "Disinhibited Feedback Theory|Cross-Activation Theory|Neurotypical Theory|Sensory Mechanism Theory",
          "0|1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_5",
          "5. How does cross-activation theory explain grapheme-colour synaesthesia?",
          "radio",
          "Visual word information from the environment is processed by areas of the brain normally activated by colours|Visual word information from the environment results in stronger feedback from higher-level cortical regions in the brain|Visual word information from the environment is processes by all sensory regions in the brain",
          "1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_6",
          "6. How does disinhibited feedback theory explain synaesthesia?",
          "radio",
          "Activation of the brain area associated with colours is a result of stimuli from the environment|The activation of colour in the brain when hearing sounds|Higher-level cortical regions in the brain have stronger feedback, suggesting activation of colour is a result of the processing of graphemes",
          "0|0|1",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_7",
          "7. Mirror-touch synaesthesia has been associated with which of the following?",
          "radio",
          "Increased physical ability and increased empathy|Increased empathy and increased emotion discrimination|Increased mimicry and increased physical ability|Increased emotion discrimination and increased mimicry",
          "0|1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_8",
          "8. Approximately how many forms of synaesthesia have been identified?",
          "radio",
          "10-30|30-60|60-100|100-150",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_9",
          "9. Approximately how many people does synaesthesia affect?",
          "radio",
          "1 in 7|1 in 13|1 in 23|1 in 52",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_10",
          "10. Which of the following describes lexical-gustatory synaesthesia?",
          "radio",
          "Having the same experience of emotions/sensations as somone else|Spatial locations seem to be related to sequences such as months of the year|Tasting certain foods in response to processing certain phonemes|Associating colour with a range of noises and sounds",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_11",
          "11. Which group of people is synaesthesia most common in?",
          "radio",
          "Under 50's|Men|Over 50's|Women",
          "0|0|0|1",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_12",
          "12. What has research using the visual search task revealed about synaesthesia?",
          "radio",
          "If synaesthesia is genetic|If synaesthesia is automatic/pre-attentive|If grapheme-colour synaesthetes can hear colours",
          "0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_13",
          "13. A study by Meier & Rothen (2009) trained non-synaesthetic participants to behave like synaesthetes using which task?",
          "radio",
          "Visual Search task|Tower of Hanoi task|Modified Stroop task|9 Dot task",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_14",
          "14. Which is the most common type of synaesthesia?",
          "radio",
          "Lexical-gustatory|Mirror-touch|Sound-colour|Grapheme-colour",
          "0|0|0|1",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_15",
          "15. In sound-colour synaesthetes, there is increased activation in which area of the brain?",
          "radio",
          "Prefrontal cortex|Right anterior cingulate cortex|Somatosensory cortex|Left inferior parietal cortex",
          "0|0|0|1",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_16",
          "16. In which type of synaesthesia would a synaesthete perceive months of the year as occupying spatial locations around them?",
          "radio",
          "Mirror-touch synaesthesia|Lexical-gustatory synaesthesia|Sequence-space synaesthesia|Misophonia",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_17",
          "17. Which of these exeperiences would be associated with auditory-tactile synaesthesia?",
          "radio",
          "A physical sensation induces the perception of sound|Listening to music results in the perception of colours|Hearing a noise or music results in a physical sensation|Listening to music induces physical pain",
          "0|0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_18",
          "18. Which functions do the high-level cortical regions of the brain control in disinhibited feedback theory?",
          "radio",
          "Movement, language, vision, and sound|Language, vision, recognition of objects, and awareness|Awareness, sound, movement, and recognition of objects|Vision, language, touch, taste",
          "0|1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_19",
          "19. Which of the following sensory experiences occur in mirror-touch synaesthesia?",
          "radio",
          "Experiencing physical sensation as a result of hearing sound|Experiencing the same physical sensations of an observed other|Experiencing physical sensations on the opposite side of the body to the stimulus",
          "0|1|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_20",
          "20. What potential explanation has been provided to explain sequence-space synaesthesia?",
          "radio",
          "Fractionation of imagery processes|Dual coding of sensory input|Sensory conflict theory",
          "1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "flashcard_21",
          "21. A milder version of auditory-tactile synaesthesia has been found in approximately 50% of the population. What is is called?",
          "radio",
          "Frission|Mysophonia|Chromesthesia",
          "1|0|0",
          "No",
          "",
          "",
          "1",
          null
        ],
        [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          null,
          null,
          null
        ]
      ],
      "placement_demographics.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "optional",
          "values",
          "side_by_side",
          "btn_width",
          null
        ],
        [
          "Gender",
          "Gender",
          "likert",
          "Male|Female|Other",
          "No",
          "",
          "yes",
          "100px",
          null
        ],
        [
          "Age",
          "Age",
          "number",
          "",
          "No",
          "",
          "",
          "",
          null
        ],
        [
          "Education",
          "Education (which level are you currently in, or is the highest you've completed)",
          "dropdown",
          "Some high school| High school graduate| Some college, no degree| Associate's degree| Bachelor's degree|Graduate degree (Master's, Doctorate, etc.)",
          "No",
          "",
          "",
          "",
          null
        ],
        [
          "English_Fluency",
          "Do you speak English fluently?",
          "likert",
          "Yes|No",
          "No",
          "",
          "yes",
          "200px",
          null
        ],
        [
          "English_Age",
          "At what age did you start learning English? (write \"0\" if from birth)",
          "number",
          "",
          "No",
          "",
          "",
          "",
          null
        ],
        [
          "Country",
          "What is your country of residence?",
          "text",
          "",
          "No",
          "",
          "",
          "",
          null
        ],
        [
          "Handedness",
          "What is your preferred hand?",
          "likert",
          "Left|Right|Both",
          "No",
          "",
          "yes",
          "100px",
          null
        ],
        [
          "uor_student",
          "Are you a student at the University of Reading?",
          "likert",
          "Yes|No",
          "No",
          "",
          "yes",
          "200px"
        ],
        [
          "degree_subject",
          "What degree are you/have you complete(d)? Please write \"none\" if you have not been a university student.",
          "text",
          null,
          "No",
          null,
          null,
          null,
          null
        ],
        [
          "degree_year",
          "Can you please confirm how many years you have completed of a BSc degree. For example, if you are a second year student, you would write \"1\".",
          "text",
          null,
          "Yes",
          null,
          null,
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "group_a_debrief.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side",
          null
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Dr. Anthony Haffey</td>\n    <td>a.haffey@reading.ac.uk</td>\n    <td>0118 378 8850</td>\n  </tr>\n</table>\n\n<h2>Title of Study: How do flashcards help learning?</h2>\n<h1>Debrief form </h1>\n<br>\nThank you for participating in this study. <br>\n<br>\nIn this project we were interested in how your memory was affected by the types of flashcards you studied. In particular, we were interested in whether images on flashcards and a competitive condition influenced your score on the multiple choice test.<br>\n<br>\nThe study did involve an element of deception. You were told that your performance on the test would be ranked among other participants, however we did not gather any data relating to this. Your perception of competition was what was required for the study.<br>\n<br>\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct. <br>\n<br>\nThank you, <br>\n<br>\nProject Supervisor: Anthony Haffey <br>\n<br>\nModule convenor: Anthony Haffey (a.haffey@reading.ac.uk)\n",
          "instruct",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "agree_info",
          "I am happy for my data to be used",
          "checkbox",
          "agree",
          "agree",
          "no"
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "groupwork_test.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_question",
          "shuffle_answers",
          null
        ],
        [
          "b1",
          "1. Which of the following is not a small molecule transmitter?",
          "checkbox",
          "Histamine|somatostatin|glutamate|beta-endorphin",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b2",
          "2. Which of the following is the major inhibitory neurotransmitter in the brainstem and spinal chord?",
          "radio",
          "Glycine|Aspartate|Dopamine|Enkephalin",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b3",
          "3. Which of the following are not components of a neuron?",
          "checkbox",
          "Axon body|Axon|Cell body|Dendrite terminal",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b4",
          "4. Unlike small molecule neurotransmitters, neuropeptide neurotransmitters are encoded by specific | and are synthesised from | in the |. An example of a neuropeptide neurotransmitter is |.",
          "jumbled",
          "genes|protein precursors|cell body|Oxytocin",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "b5",
          "5. Cocaine addiction is related to which brain area?",
          "radio",
          "Nucleus Accumbens|Ventral Tegmental area|Frontal Cortex|Ventral pallidium",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b6",
          "6. Which neurotransmitter pathway projects through the prefrontal cortex?",
          "radio",
          "The acetylcholine pathway|The dopamine pathway|The norepinephrine pathway|The serotonin pathway",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b7",
          "7. Which of the following is the main inhibitory neurotransmitter in the adult brain?",
          "radio",
          "Glycine|GABA|serotonin|Acetylcholine",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b8",
          "8. Which of the following drugs do not affect the nucleus accumbens?",
          "radio",
          "Amphetamines|Cocaine|Cannabis|Nicotine",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b9",
          "9. Which of these is not an example of a neuropeptide neurotransmitter?",
          "checkbox",
          "Vasopressin|Dopamine|Serotonin|Corticotrophin releasing hormone",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b10",
          "10. Second stage reward neurons project from the | to the | and use | as their neurotransmitter, which is a |",
          "jumbled",
          "Ventral tegmental area|nucleus accumbens|Dopamine|small molecule neurotransmitter",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "b11",
          "11. Which of the following are roles of the norepinephrine pathway?",
          "checkbox",
          "Emotional processing|Learning|Anxiety|Motor control",
          "",
          "No",
          "",
          "",
          null
        ],
        [
          "b12",
          "12. A substance is considered a neurotransmitter if it is synthesised in the | and is found in the | and is released to have an effect on the |",
          "jumbled",
          "Neuron|pre synaptic terminus|post synaptic cell",
          "",
          "",
          "",
          "",
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "feedback_test_1.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_question",
          "shuffle_answers",
          null
        ],
        [
          "b1",
          "1. Skin receptors can also signal movements, what receptors detect skin stretching?",
          "radio",
          "Ruffini receptors. \n| Joint angle receptor. | Movement receptors.|Proprioceptors.",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b2",
          "2. The Golgi tendon organs are at the | between muscles and |, they signal | imposed on, or generated by, |.",
          "jumbled",
          "junction| tendons | forces | muscles",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b3",
          "3. Which of the following is the correct explanation of primary sensory endings?",
          "radio",
          "They wrap around the belly of the fibre in a spiral fashion and react to changes of muscle length and the rate of change (fast adapting). |\nThey are at the tail endings of the muscle fibre and react to changes of muscle length (slowly adapting). |\nThey wrap around the head of the fibre in parallel lines and react to changes of muscle length and rate of change (fast adapting).\nThey are at the tail endings of the muscle fibre and react to the rate of change in muscle length (fast adapting).",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b4",
          "4. Which of these is a function of joint angle receptors? There may be more than one correct answer.",
          "checkbox",
          "Least active at extreme angles.|\nThey are rapidly adapting. |\nThey are not sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles.",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b5",
          "5. | muscle spindles are embedded in muscles.\nThey are innervated by | and | endings \nthat respond to changes of |.",
          "jumbled",
          "intrafusal | sensory endings | gamma motor | muscle length",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b6",
          "6. What innervates the intrafusal fibres to match the muscle length i.e. adjusting the sensitivity of the muscle spindles ?",
          "radio",
          "Alpha motor fibre. | \nGamma Motor Neuron. | \nGamma Motor Fibre. | \nExtrafusal Muscle fibre. |",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b7",
          "7.The dorsal column medial lemniscal system is an | for touch and proprioception.\n The information is carried via | and eventually ends up in the somatosensory cortex. \n| and | are separated in these ascending pathways.",
          "jumbled",
          "ascending pathway | neurons | Touch | proprioception",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          "b8",
          "8. Secondary sensory endings are |\n and are found at the |\nof the muscle fibre and react to changes of muscle |.",
          "jumbled",
          "slow adapting | tail endings | length",
          null,
          "no",
          "",
          "",
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "feedback_test_2.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "shuffle_question",
          "shuffle_answers",
          null
        ],
        [
          "b1",
          "1. Where is a golgi tendon organ located and what is its function? <br><br> The | are at the junction between | and |, they signal forces imposed on, or generated by, the |.",
          "jumbled",
          "Golgi tendon organs|muscles|tendons",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b2",
          "2. What is the function of a Ruffini receptor?",
          "radio",
          "To detect skin stretching. | To detect pressure on the skin. | To detect changes in temperature. | To detect movement",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b3",
          "3. Holly pours herself a cup of tea and spills it on herself, and she quickly pulls her arm away. Which one of the following is responsible for her reaction?",
          "radio",
          "Primary Sensory Endings. | Secondary Sensory Endings. | Cutaneous Receptors. | Muscle Spindles.",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b4",
          "4. Which of these is NOT a function of joint angle receptors? There may be more than one correct answer.",
          "checkbox",
          "Least active at extreme angles. |\nThey are rapidly adapting. |\nThey are not very sensitive in signalling precise joint angles. |\nThey are not sensitive to extreme angles. |",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b5",
          "5. Complete the sentence(s) below. <br><br> Intrafusal | are embedded in|. They are innervated by | and | endings that respond to changes of muscle length.",
          "jumbled",
          "muscle spindles | muscles | sensory endings | gamma motor",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b6",
          "6. What is the function of a Gamma Motor Neuron?",
          "radio",
          "It innovates the intrafusal fibres to match the muscle length. | It innovates the extrafusal fibres to match muscle length. | To detect pressure of the intrafusal fibres. | To detect stretch of the muscle length.",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b7",
          "7. Complete the sentence(s) below. <br><br> The dorsal column medial lemniscal system is an ascending pathway for | and |. The information is carried via neurons and eventually ends up in the |. Touch and proprioception are | in these ascending pathways.",
          "jumbled",
          "touch | proprioception | somatosensory cortex | separated",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "b8",
          "8. Complete the sentence(s) below. <br><br>| are slow adapting and are found at the | of the muscle fibre and react to changes of muscle |.",
          "jumbled",
          "Secondary sensory endings | tail endings | length",
          "",
          "no",
          "",
          "",
          null
        ],
        [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          null
        ]
      ],
      "group_b_info.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side",
          null
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Dr. Anthony Haffey</td>\n    <td>a.haffey@reading.ac.uk</td>\n    <td>0118 378 8850</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Bryony Parkinson</td>\n    <td>ox012074@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Holly Price</td>\n    <td>dm012976@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Helena Dale</td>\n    <td>bp004032@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Lissa Hughes</td>\n    <td>nv015675@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Megan Powell</td>\n    <td>id002673@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Harry Sullivan</td>\n    <td>h.sullivan@student.reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: Learning Perception Neuroscience Online</h2>\n<h1>PARTICIPANT INFORMATION SHEET </h1>\n\nWe would be grateful if you could assist us by participating in our online study. In the experiment you will be presented with a first set of multiple-choice questions. You will be sent a link about 24 hours after completion to receive feedback. 24 hours after you read the feedback you will be sent a final 5 minutes test. The experiment should take no longer than 30 minutes total.<br><br>\n\n\nYour data will be kept confidential and securely stored, with only an anonymous number identifying it. Data collected from this study will be preserved and made available in anonymised form, so that data can be re-used by others.<br><br>\n\n\nWe foresee no risks during the experiment. However,  taking part in this study is completely voluntary and you may withdraw at any time without having to give any reason. Please feel free to ask any questions that you may have about this study at any point.<br><br>\n\n\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct.<br><br>\n\n\nIf you have any questions or concerns about the research, please feel free to contact a.haffey@reading.ac.uk.<br><br>\n\n\nEmail: a.haffey@reading.ac.uk, Tel: +44-(0)118-378-8850.<br><br>\n\n\nThank you for your help.\n\n\n",
          "instruct",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "info_voluntary",
          "I understand that my participation in this study is voluntary and that I may withdraw any time without giving any reason.",
          "checkbox",
          "agree",
          "agree",
          "no"
        ],
        [
          "info_read_sheet",
          "I have read the information sheet about this study and the procedure of the study has been explained to me.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null,
          null
        ],
        [
          "info_ask_question",
          "I have been given the opportunity to ask any questions that I may have about the study and these have been answered to my satisfaction.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null,
          null
        ],
        [
          "info_understand",
          "I understand that the data collected from me in this study will be preserved and made available in anonymised form, so that they can be consulted and re-used by others.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null,
          null
        ],
        [
          "insfo_first",
          "First name",
          "text",
          "",
          "",
          "no",
          null,
          null
        ],
        [
          "info_last",
          "Last name",
          "text",
          "",
          "",
          "no",
          null,
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "group_b_debrief.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side",
          null
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Dr. Anthony Haffey</td>\n    <td>a.haffey@reading.ac.uk</td>\n    <td>0118 378 8850</td>\n  </tr>\n</table>\n\n<h2>Title of Study: How do flashcards help learning?</h2>\n<h1>Debrief form </h1>\n<br>\nThank you for participating in this study. <br>\n<br>\nIn this project we were interested in how your memory was affected by the types of flashcards you studied. In particular, we were interested in whether images on flashcards and a competitive condition influenced your score on the multiple choice test.<br>\n<br>\nThe study did involve an element of deception. You were told that your performance on the test would be ranked among other participants, however we did not gather any data relating to this. Your perception of competition was what was required for the study.<br>\n<br>\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct. <br>\n<br>\nThank you, <br>\n<br>\nProject Supervisor: Anthony Haffey <br>\n<br>\nModule convenor: Anthony Haffey (a.haffey@reading.ac.uk)\n",
          "instruct",
          "",
          "",
          "",
          "",
          null
        ],
        [
          "agree_info",
          "I am happy for my data to be used",
          "checkbox",
          "agree",
          "agree",
          "no"
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ],
      "group_c_info.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          ""
        ],
        [
          "Instructions1",
          "<h1>PARTICIPANT INFORMATION SHEET </h1>\n<h2>Title of Project: Group work Intervention</h2>\n<h3>Name of Lead Investigator:Dr. Anthony Haffey(University of Reading) </h3>\n \n<h3>Invitation paragraph </h3>\nYou have been invited to take part in a research study. Before you decide whether to take part it is important for you to understand why the research is being done and what it will involve. Please take time to read the following information carefully and discuss it with friends and relatives if you wish to. Ask us if there is anything that is not clear or if you would like more information. Take time to decide whether you wish to take part or not. Thank you for reading this. \n \n \n<h3>What is the study about? </h3>\nThe study will investigate the effect of group work on subsequent learning. \n \n \n<h3>What does the study involve? </h3>\nYou will be required to revise a set of flashcards (12) within a group setting. Following this, you will take a test on the content you have learnt from the screencast. This will consist of 12 multiple choice questions. Half of the questions (6) you will be required to get 50% of the questions correct to pass the test. However, on the other half of the questions (6) you will not need a specific percentage of correct answers to pass. \n \n \n<h3>Do I have to take part? </h3>\nIt is up to you to decide whether or not to take part. If you do decide to take part you will be given this information sheet to keep and be asked to sign a consent form. If you decide to take part you are still free to withdraw at any time during the data collection without giving a reason. \n \n \n<h3>I am interested in taking part, what do I do next? </h3>\nPlease find a quiet room with minimal distractions. Please ensure you have a good internet connection on a PC / laptop / tablet device. You will need 20 minutes to revise the flashcard in your group.There will then be a gap of 5 hours before completing an online test. You will have 15 minutes to complete the test. Once ready please follow the link to the online study. \n \n \n<h3>What if I agree to take part and then change my mind? </h3>\nThat is fine. You can contact the researchers if you would like to have any data of yours deleted.\n\n<h3>Will my taking part in this study be kept confidential? </h3>\nAll information which is collected about you during the course of the research will be kept on a password protected database and is strictly confidential. You will be given an ID code which will be used instead of your name. \n \n \n<h3>Who has reviewed the study? </h3>\nThis study has been reviewed and approved by the school ethics committee and has been given a favourable ethical opinion for conduct. \n \n \n<h3>How is data secured? </h3>\nNo personally identifiable information will be stored for this project. \n \n \nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct <br>\n\nThank you, <br>\nProject Supervisor: Anthony Haffey <br>\n<i>Module convenor: Anthony Haffey (a.haffey@reading.ac.uk) </i>",
          "instruct",
          "",
          "",
          "",
          ""
        ],
        [
          "info_voluntary",
          "I understand that my participation in this study is voluntary and that I may withdraw any time without giving any reason.",
          "checkbox",
          "agree",
          "agree",
          "no"
        ],
        [
          "info_read_sheet",
          "I have read the information sheet about this study and the procedure of the study has been explained to me.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_ask_question",
          "I have been given the opportunity to ask any questions that I may have about the study and these have been answered to my satisfaction.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_understand",
          "I understand that the data collected from me in this study will be preserved and made available in anonymised form, so that they can be consulted and re-used by others.",
          "checkbox",
          "agree",
          "agree",
          "no",
          null
        ],
        [
          "info_first",
          "First name",
          "text",
          "",
          "",
          "no",
          null
        ],
        [
          "info_last",
          "Last name",
          "text",
          "",
          "",
          "no",
          null
        ],
        [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      ]
    },
    "default_surveys": {
      "autism_quotient.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Score: AQ_Test",
          "Score: Social_Skill",
          "Score: Attention_switching",
          "Score: Communication",
          "Score: Imagination",
          "Score: Attention_to_detail",
          "Optional",
          "btn_width"
        ],
        [
          "Instructions1",
          "<span style='color:#006699'><span style='font-size:20px'>Choose one response that best describes how strongly each item applies to you:</span></span>",
          "Instruct",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "AQ1",
          "I prefer to do things with others rather than on my own.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ2",
          "I prefer to do things the same way over and over again.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ3",
          "If I try to imagine something, I find it very easy to create a picture in my mind.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ4",
          "I frequently get so strongly absorbed in one thing that I lose sight of other things.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ5",
          "I often notice small sounds when others do not.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ6",
          "I usually notice car number plates or similar strings of information.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ7",
          "Other people frequently tell me that what I've said is impolite, even though I think it is polite.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ8",
          "When I'm reading a story, I can easily imagine what the characters might look like.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ9",
          "I am fascinated by dates.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ10",
          "In a social group, I can easily keep track of several different people's conversations.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ11",
          "I find social situations easy.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ12",
          "I tend to notice details that others do not.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ13",
          "I would rather go to a library than a party.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ14",
          "I find making up stories easy.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ15",
          "I find myself drawn more strongly to people than to things.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ16",
          "I tend to have very strong interests which I get upset about if I can't pursue.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ17",
          "I enjoy social chit-chat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ18",
          "When I talk, it isn't always easy for others to get a word in edgeways.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ19",
          "I am fascinated by numbers.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ20",
          "When I'm reading a story, I find it difficult to work out the characters' intentions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ21",
          "I don't particularly enjoy reading fiction.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ22",
          "I find it hard to make new friends.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ23",
          "I notice patterns in things all the time.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "",
          "1",
          "No",
          "100px"
        ],
        [
          "AQ24",
          "I would rather go to the theatre than a museum.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ25",
          "It does not upset me if my daily routine is disturbed.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ26",
          "I frequently find that I don't know how to keep a conversation going.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ27",
          "I find it easy to 'read between the lines' when someone is talking to me.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ28",
          "I usually concentrate more on the whole picture, rather than the small details.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "",
          "r1",
          "No",
          "100px"
        ],
        [
          "AQ29",
          "I am not very good at remembering phone numbers.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "",
          "r1",
          "No",
          "100px"
        ],
        [
          "AQ30",
          "I don't usually notice small changes in a situation, or a person's appearance.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "",
          "r1",
          "No",
          "100px"
        ],
        [
          "AQ31",
          "I know how to tell if someone listening to me is getting bored.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ32",
          "I find it easy to do more than one thing at once.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ33",
          "When I talk on the phone, I'm not sure when it's my turn to speak.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ34",
          "I enjoy doing things spontaneously.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ35",
          "I am often the last to understand the point of a joke.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ36",
          "I find it easy to work out what someone is thinking or feeling just by looking at their face.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ37",
          "If there is an interruption, I can switch back to what I was doing very quickly.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ38",
          "I am good at social chit-chat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ39",
          "People often tell me that I keep going on and on about the same thing.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "1",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ40",
          "When I was young, I used to enjoy playing games involving pretending with other children.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ41",
          "I like to collect information about categories of things (e.g. types of car, types of bird, types of train, types of plant, etc.).",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ42",
          "I find it difficult to imagine what it would be like to be someone else.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "",
          "",
          "1",
          "",
          "No",
          "100px"
        ],
        [
          "AQ43",
          "I like to plan any activities I participate in carefully.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ44",
          "I enjoy social occasions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ45",
          "I find it difficult to work out people's intentions.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ46",
          "New situations make me anxious.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "1",
          "",
          "1",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ47",
          "I enjoy meeting new people.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ48",
          "I am a good diplomat.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "r1",
          "",
          "",
          "",
          "",
          "No",
          "100px"
        ],
        [
          "AQ49",
          "I am not very good at remembering people's date of birth.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "",
          "r1",
          "No",
          "100px"
        ],
        [
          "AQ50",
          "I find it very easy to play games with children that involve pretending.",
          "likert",
          "Definitely agree|Slightly agree|Slightly disagree|Definitely disagree",
          "1|1|0|0",
          "r1",
          "",
          "",
          "",
          "r1",
          "",
          "No",
          "100px"
        ],
        [
          ""
        ]
      ],
      "consent_sheet_uor.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side",
          "question_width",
          ""
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Investigator 1</td>\n    <td>Investigator1@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td>Investigator 2</td>\n    <td>Investigator2@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n  </tr>\n  <tr>\n    <td>Researcher 1</td>\n    <td>Researcher1@reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Researcher 2</td>\n    <td>Researcher2@reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: [Study title]</h2>\n<h1>Consent Form</h1>",
          "instruct",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "uor_consent_1",
          "I understand that my participation in this study is voluntary and that I may withdraw any time without giving any reason.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_2",
          "I have read the information sheet about this study and the procedure of the study has been explained to me.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%"
        ],
        [
          "uor_consent_3",
          "I have been given the opportunity to ask any questions that I may have about the study and these have been answered to my satisfaction.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_4",
          "I understand that the data collected from me in this study will be preserved and made available in anonymised form, so that they can be consulted and re-used by others.",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_5",
          "I am happy to be contacted about future studies (optional)",
          "checkbox",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_6",
          "First name",
          "text",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "uor_consent_7",
          "Last name",
          "text",
          "Agree",
          "1",
          "No",
          "yes",
          "70%",
          ""
        ],
        [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      ],
      "demographics.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Optional",
          "Values",
          "side_by_side",
          "btn_width"
        ],
        [
          "Gender",
          "Gender",
          "likert",
          "Male|Female|Other",
          "No",
          "",
          "yes",
          "100px"
        ],
        [
          "Age",
          "Age",
          "Number",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Education",
          "Education (which level are you currently in, or is the highest you've completed)",
          "Dropdown",
          "Some high school| High school graduate| Some college, no degree| Associate's degree| Bachelor's degree|Graduate degree (Master's, Doctorate, etc.)",
          "No",
          "",
          "",
          ""
        ],
        [
          "English_Fluency",
          "Do you speak English fluently?",
          "likert",
          "Yes|No",
          "No",
          "",
          "yes",
          "200px"
        ],
        [
          "English_Age",
          "At what age did you start learning English? (write \"0\" if from birth)",
          "Number",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Country",
          "What is your country of residence?",
          "Text",
          "",
          "No",
          "",
          "",
          ""
        ],
        [
          "Handedness",
          "What is your preferred hand?",
          "Likert",
          "Left|Right|Both",
          "No",
          "",
          "yes",
          "100px"
        ],
        [
          "ethnicity",
          "If you would like to please state your ethnicity",
          "Text",
          "",
          "Yes",
          "",
          "",
          ""
        ],
        [
          ""
        ]
      ],
      "empathy_quotient_40.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Score: EQ_Test",
          "Score: Cognitive",
          "Score: Social_Skills",
          "Score: Emotional_Reactivity",
          "optional"
        ],
        [
          "Instructions1",
          "Choose one response that best describes how strongly each item applies to you:",
          "Instruct",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ],
        [
          "EQ1",
          "I can easily tell if someone else wants to enter a conversation.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ4",
          "I find it difficult to explain to others things that I understand easily, when they don’t understand it the first time.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ6",
          "I really enjoy caring for other people.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ8",
          "I find it hard to know what to do in a social situation.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ10",
          "People often tell me that I went too far in driving my point home in a discussion.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ11",
          "It doesn’t bother me too much if I am late meeting a friend.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ12",
          "Friendships and relationships are just too difficult, so I tend not to bother with them.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ14",
          "I often find it difficult to judge if something is rude or polite.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "r1",
          "",
          "no"
        ],
        [
          "EQ15",
          "In a conversation, I tend to focus on my own thoughts rather than on what my listener might be thinking.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ18",
          "When I was a child, I enjoyed cutting up worms to see what would happen.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ19",
          "I can pick up quickly if someone says one thing but means another.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ21",
          "It is hard for me to see why some things upset people so much.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ22",
          "I find it easy to put myself in somebody else’s shoes.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ25",
          "I am good at predicting how someone will feel.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ26",
          "I am quick to spot when someone in a group is feeling awkward or uncomfortable.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ27",
          "If I say something that someone else is offended by, I think that that’s their problem, not mine.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ28",
          "If anyone asked me if I liked their haircut, I would reply truthfully, even if I didn’t like it.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ29",
          "I can’t always see why someone should have felt offended by a remark.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ32",
          "Seeing people cry doesn’t really upset me.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ34",
          "I am very blunt, which some people take to be rudeness, even though this is unintentional.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ35",
          "I do not tend to find social situations confusing.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "1",
          "",
          "no"
        ],
        [
          "EQ36",
          "Other people tell me I am good at understanding how they are feeling and what they are thinking.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ37",
          "When I talk to people, I tend to talk about their experiences rather than my own.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ38",
          "It upsets me to see an animal in pain.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ39",
          "I am able to make decisions without being influenced by people’s feelings.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ41",
          "I can easily tell if someone else is interested or bored with what I am saying.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ42",
          "I get upset if I see people suffering on news programs.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ43",
          "Friends usually talk to me about their problems as they say that I am very understanding.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ44",
          "I can sense if I am intruding, even if the other person doesn’t tell me.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ46",
          "People sometimes tell me that I have gone too far with teasing.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ48",
          "Other people often say that I am insensitive, though I don’t always see why.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ49",
          "If I see a stranger in a group, I think that it is up to them to make an effort to join in.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "",
          "no"
        ],
        [
          "EQ50",
          "I usually stay emotionally detached when watching a film.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "r1",
          "",
          "",
          "r1",
          "no"
        ],
        [
          "EQ52",
          "I can tune into how someone else feels rapidly and intuitively.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ54",
          "I can easily work out what another person might want to talk about.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ55",
          "I can tell if someone is masking their true emotion.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ57",
          "I don’t consciously work out the rules of social situations.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "1",
          "",
          "no"
        ],
        [
          "EQ58",
          "I am good at predicting what someone will do.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "1",
          "",
          "",
          "no"
        ],
        [
          "EQ59",
          "I tend to get emotionally involved with a friend’s problems.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "1",
          "no"
        ],
        [
          "EQ60",
          "I can usually appreciate the other person’s viewpoint, even if I don’t agree with it.",
          "likert",
          "Strongly agree|Slightly agree|Slightly disagree|Strongly disagree",
          "2|1|0|0",
          "1",
          "",
          "",
          "",
          "no"
        ],
        [
          ""
        ]
      ],
      "info_sheet.csv": [
        [
          "item_name",
          "text",
          "Type",
          "Answers",
          "Values",
          "Optional",
          "side_by_side"
        ],
        [
          "Instructions1",
          "<h1>PARTICIPANT INFORMATION SHEET </h1>\n\n<h2>Title of Project:  <u><span style='color:#f20707'>[[Your project title]]</span></u>.</h2>\n\n<h3>Name of Lead Investigator:  <span style='color:#f20707'>[[Investigator]]</span> ([[<span style='color:#f20707'>Institute</span>]]) </h3>\n\n<h4>Invitation paragraph</h4>\nYou have been invited to take part in a research study.  Before you decide whether to take part it is important for you to understand why the research is being done and what it will involve.  Please take time to read the following information carefully and discuss it with friends and relatives if you wish to. Ask us if there is anything that is not clear or if you would like more information. Take time to decide whether you wish to take part or not.  Thank you for reading this.<br><br>\n\n<h4>What is the study about?</h4>\n<span style='color:#f20707'>[[describe your experiment here]]</span>.<br><br>\n\n<h4>What does the study involve?</h4>\n<span style='color:#f20707'>[[what the participant will do]]</span> <br><br>\n\n<h4>Why have I been chosen?</h4>\n<span style='color:#f20707'>[[criterion, e.g. age, etc.]]</span>  <br><br>\n\n<h4>Do I have to take part?</h4>\nIt is up to you to decide whether or not to take part.  If you do decide to take part you will be given this information sheet to keep and be asked to sign a consent form.  If you decide to take part you are still free to withdraw at any time during the data collection without giving a reason.<br><br>\n\n<h4>I am interested in taking part, what do I do next?</h4>\nPlease find a quiet room with minimal distractions. Please ensure you have a good internet connection on a PC / laptop / tablet device. <span style='color:#070ff2'>[[optional: Please do not run the study on a mobile phone]]</span>. Make sure that you have about <span style='color:#f20707'>[[time needed]]</span> minutes time to complete the study. Once ready please follow the link to the online study.<br><br>\n\n<h4>What if I agree to take part and then change my mind?</h4>\nThat is fine. If you decide to withdraw you would need to provide your participation ID to the researchers. The researcher will then delete all the data generated by that ID from their computers. <br><br>\n\n<h4>What are the possible disadvantages and risks of taking part?</h4>\n <span style='color:#f20707'>[[describe risks etc. here]]</span><br><br>\n\n<h4>What are the possible benefits of taking part? </h4>\n<span style='color:#f20707'>[[benefits here]]</span> <br><br>\n\n<h4>Who can I complain to?</h4>\nIf you have a complaint regarding anything to do with this study, you can initially approach the lead investigator <span style='color:#f20707'>[[lead investigator]]</span> (<span style='color:#f20707'>[[lead_investigator_email]]</span>).  If this achieves no satisfactory outcome, you should then contact <span style='color:#f20707'>[[person to contact next]]</span><br><br>\n\n<h4>Will my taking part in this study be kept confidential?</h4>\nAll information which is collected about you during the course of the research will be kept on a password protected database and is strictly confidential. You will be given an ID code which will be used instead of your name. Your data will be shared with the following collaborators: <br> <span style='color:#f20707'>[[list of collaborators]]</span>\n<br><br>\n\n<span style='color:#070ff2'>[[optional: Your anonymised data can be shared with other research teams interested in understating it further.]]</span><br>\nThe raw data will be stored for up to 10 years after a study has been completed.<br> Members of the faculty human research ethics committee may require access to check that the study has been conducted in accordance with the approval. <br>\n\n\n<h4>What will happen to the results of the research study?</h4>\nThe results based on performance of the group of participants will be then analysed and submitted for publication in peer reviewed scientific journals. <br><br>\n\n<h4>Who is organising and funding the research?</h4>\n<br><br><span style='color:#f20707'>[[information about researchers and funders here]]</span>\n\n<h4>Who has reviewed the study?</h4>\nThis study has been reviewed and approved by <span style='color:#f20707'>[[your ethics committee]]</span>.<br><br>\n<br>\n<h4>How is data secured?</h4>\nData is encrypted in Collector on the participant's computer. This data cannot be decrypted without the researcher's password. For more information, go to: <a target=\"_blank\" href=\"https://some-open-solutions.github.io/collector/encryption.html\">https://some-open-solutions.github.io/collector/encryption.html</a>\n<h4>Contact for Further Information</h4>\n<span style='color:#f20707'>[[your contact information]]</span>",
          "Instruct",
          "",
          "",
          "",
          ""
        ],
        [
          "Info_Accept",
          "I understand these instructions and am happy to continue",
          "likert",
          "Agree",
          "1",
          "No",
          "yes"
        ],
        [
          ""
        ]
      ],
      "info_sheet_uor.csv": [
        [
          "item_name",
          "text",
          "type",
          "answers",
          "values",
          "optional",
          "side_by_side"
        ],
        [
          "Instructions1",
          "<h2>University of Reading</h2><br>\n<div align=\"right\">School of Psychology and Clinical Language Sciences<br>\nWhiteknights<br>\nReading RG6 6AL</div>\n<br>\n<table class=\"table\">\n  <tr>\n    <td><b>Investigator(s):</b></td>\n    <td><b>Email:</b></td>\n    <td><b>Telephone:</b></td>\n  </tr>\n  <tr>\n    <td>Investigator 1</td>\n    <td>Investigator1@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td>Investigator 2</td>\n    <td>Investigator2@reading.ac.uk</td>\n    <td>-phone_number-</td>\n  </tr>\n  <tr>\n    <td><b>Researcher(s):</b></td>\n  </tr>\n  <tr>\n    <td>Researcher 1</td>\n    <td>Researcher1@reading.ac.uk</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>Researcher 2</td>\n    <td>Researcher2@reading.ac.uk</td>\n    <td></td>\n  </tr>\n</table>\n\n<h2>Title of Study: [Study title]</h2>\n<h1>PARTICIPANT INFORMATION SHEET </h1>\n\nWe would be grateful if you could assist us by participating in our online study [BRIEF STUDY DESCRIPTION]. <br>\n<br>\nIn the experiment you will be presented with [DESCRIPTION OF STIMULI AND PROCEDURE]. The experiment should take no longer than [MAXIMUM TIME EXPECTED]. [DESCRIPTION OF ELIGIBILITY AND EXCLUSION CRITERIA].<br>\n<br>\nYour data will be kept confidential and securely stored, with only an anonymous number identifying it. Data collected from this study will be preserved and made available in anonymised form, so that data can be re-used by others.<br>\n<br>\n[DESCRIPTION OF RISKS e.g. We foresee few risks during the experiment, but you will be presented with some negative images, which may evoke an emotional response. Thus, the study may include a mild risk of anxiety, sadness or other emotional reactions. However, those stimuli are widely observed in our daily life. If you are concerned about the images in the study then you may discontinue your participation at any time.]<br>\n<br>\nTaking part in this study is completely voluntary; you may withdraw at any time without having to give any reason. Please feel free to ask any questions that you may have about this study at any point.<br>\n<br>\n[INFORMATION ABOUT COMPENSATION - HOW MUCH AND HOW IT WILL BE DELIVERED e.g. You will receive 0.5 credits through SONA. You will receive a £5 Amazon voucher by email. You will receive £2.50 through Prolific.]<br>\n<br>\nThis application has been reviewed by the University Research Ethics Committee and has been given a favourable ethical opinion for conduct ([SREC OR UREC NUMBER]).<br>\n<br>\nIf you have any questions or concerns about the research, please feel free to contact Investigator1.<br>\n<br>\nEmail: Investigator1, Tel: +44-(0)118-378-XXXX.<br>\n<br>\nThank you for your help.",
          "instruct",
          "",
          "",
          "",
          ""
        ],
        [
          ""
        ]
      ]
    }
  },
  "autoloaded_mods": {},
  "keys": {
    "archived": [
      {
        "public_key": "f2LKNVzGNfOTrjCnjY5UYSlq18ZUSNP+sOidmwkFnBw="
      }
    ],
    "public_key": "fYLDlYnC4uOPKWH7Z2LpABpvcwAXhDOCckSNHfXW2C0=",
    "encrypted_private_key": "U2FsdGVkX1/M8XukNYWc2AyadI4kD3jqqDVJqI2g3jtGWwC2r1jIF7p3cbNEz+GcrwtcX8XomAcH5u0kxiw3TQ=="
  },
  "pathway_mgmt": {
    "pathways": {}
  },
  "project_mgmt": {
    "any_loaded": false,
    "authenticated": false,
    "current_manager": "",
    "incomp_process": false,
    "pipe_position": 0,
    "pipe_direction": "",
    "versions": [],
    "project": "",
    "projects": {
      "cluedo": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,\r\n2,instruct,user,This is the start of a new experiment.,off,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,on,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,",
          "players.csv": "cue,answer,\r\nProf,Houston-Price,\r\nDr,Tempelmans Plat,\r\n,,"
        },
        "public_key": "fYLDlYnC4uOPKWH7Z2LpABpvcwAXhDOCckSNHfXW2C0=",
        "surveys": {},
        "code": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Phase.submit()\">Proceed</button>\n  </div>\n</div>"
        },
        "procs_csv": {},
        "stims_csv": {}
      },
      "unlockabook": {
        "all_procs": {
          "procedure_1.csv": "item,code,max time,text,shuffle 1,\r\n2,instruct,user,This is the start of a new experiment.,off,"
        },
        "conditions": "name,notes,stimuli,procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,scripts,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,off,,,5,,",
        "all_stims": {
          "stimuli_1.csv": "cue,answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"
        },
        "public_key": "fYLDlYnC4uOPKWH7Z2LpABpvcwAXhDOCckSNHfXW2C0=",
        "surveys": {},
        "trialtypes": {},
        "code": {
          "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Phase.submit()\">Proceed</button>\n  </div>\n</div>"
        },
        "procs_csv": {},
        "stims_csv": {}
      }
    }
  },
  "code": {
    "trialtype": "flashcard",
    "filetype": "",
    "version": 0,
    "user_trialtypes": {
      "beep": "",
      "flashcard": "<!--\r\n  Flashcard trialtype\r\n  Authors:\r\n    Harry Sullivan\r\n    Dr. Anthony Haffey\r\n    University of Reading\r\n    \r\n---development---\r\n[\r\n  {\"text\":\"your practice text\"; }\r\n]\r\n---development---\r\n\r\n\r\n-->\r\n\r\n\r\n<style>\r\n.card_btn{\r\n  width:100%;\r\n  margin:1px;\r\n}\r\n\r\n.flashcard_box{\r\n  border: 2px solid teal;\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n\r\n#everything{\r\n  margin:auto;\r\n  width:620px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: right;\r\n}\r\n#flashcard_image{\r\n  display:none;\r\n  width: 200px;\r\n  height:200px\r\n}\r\n</style>\r\n\r\n<body>\r\n<div id=\"everything\">\r\n  <h5>Perception and Neuroscience Flashcards</h5>\r\n  <p class=\"text-right\">Select a flashcard from the panel on the left and use the buttons below to flip the card or hide it.</p>\r\n  <p class=\"text-right\">You will be alerted once 30 minutes have elapsed.</p>\r\n  <table id=\"card_table\">\r\n    <tr>\r\n      <td id=\"card_list\"></td>\r\n      <td>\r\n          <div class=\"flashcard_box\" id=\"box_0\">\r\n            <div id=\"flashcard_text\"></div>\r\n            <img id=\"flashcard_image\"/>\r\n          </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td> </td>\r\n      <td>\r\n        <button type=\"button\" onclick=\"frontFlip()\" class=\"btn btn-primary\">Front</button>\r\n        <button type=\"button\" onclick=\"backFlip()\" class=\"btn btn-primary\">Back</button>\r\n      </div>\r\n    </td>\r\n  </table>\r\n</div>\r\n</body>\r\n\r\n<script>\r\n\r\nvar flashcards_sheet = \"{{flashcards_sheet}}\".toLowerCase();\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[flashcards_sheet]) !== \"undefined\"){\r\n  var cards_array = parent.parent.Collector.PapaParsed(\r\n    parent.parent.exp_json.all_stims[flashcards_sheet]\r\n  );\r\n  \r\n  if(parent.parent.Study.is_exe){\r\n    var home_dir = parent.parent.Collector\r\n      .electron\r\n      .fs\r\n      .home_dir();\r\n    cards_array = cards_array.map(function(row){\r\n      row.image = row.image.replace(\"../User\", home_dir + \"/User\")\r\n      return row;\r\n    });\r\n  }\r\n  \r\n} else {\r\n  \r\n  cards_array = [\r\n    {\r\n      answer: \"Derived from the greek ‘synth’ (meaning together) and ethesia (sensation).<br>The joining of two senses, one sensory or cognitive pathway connects to another which results in involuntary experiences in another sensory or cognitive pathway↵60-100 different forms of synaesthesia have been identified (Simner, 2013)\",\r\n      cue: \"synaesthesia\",\r\n      \"font-size\": \"20px\"\r\n    },\r\n    {\r\n      answer: \"Ink colour is the same as the word written.<br>This test identifies if synaesthesia is automatic/pre-attentive. <br> Meier & Rothen (2009): This study was able to train non-synaesthetic individuals to behave like synaesthetes\",\r\n      cue: \"Modified stroop task\",\r\n      \"font-size\": \"20px\"\r\n    }\r\n  ]\r\n}\r\n\r\nvar current_card = 0; // this acts as a placeholder for the current flashcard\r\nvar no_of_cards = cards_array.length;\r\nvar cues = cards_array.map(function(card, index){\r\n  return \"<button onClick='loadCard(this.id)' class='btn btn-primary btn-sm card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.cue + \"</button><br>\";\r\n});\r\n\r\n$(\"#card_list\").html(cues);\r\nfunction loadCard(clicked_id) {\r\n  var this_card = cards_array[clicked_id][\"cue\"];\r\n  $(\".flashcard_box\").html(this_card);\r\n  current_card = clicked_id;\r\n}\r\n\r\nfunction backFlip() {\r\n  $(\".flashcard_box\").css(\r\n    \"font-size\",\r\n    cards_array[current_card][\"font-size\"]\r\n  );\r\n  $(\".flashcard_box\").css(\"line-height\",\"normal\");\r\n  var this_card = cards_array[current_card][\"answer\"];\r\n  //image\timage_front\timage_back\r\n\r\n  /// D:/github/sos/collector-dev/web/User/Stimuli/flashcards/stroop.jpg\r\n  // ../User/Stimuli/flashcards/synaesthesia.jpg\r\n\r\n\r\n  if(cards_array[current_card].image_back == \"yes\"){\r\n    $(\"#flashcard_image\").attr(\"src\", cards_array[current_card].image);\r\n    $(\"#flashcard_image\").show();\r\n  } else {\r\n    $(\"#flashcard_image\").hide();\r\n  }\r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\nfunction hideMe(){\r\n  $(\"#flashcard_text\").html(\"\")\r\n}\r\nfunction frontFlip(){\r\n  var this_card = cards_array[current_card][\"cue\"];\r\n  $(\".flashcard_box\").css(\"font-size\",\"25px\");\r\n  $(\".flashcard_box\").css(\"line-height\",\"200px\");\r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\n\r\nwindow.setTimeout(Trial.submit(), 1800000); //1800000ms = 30 mins\r\n\r\n</script>\r\n",
      "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
      "instruct_practice": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n\n---development---\n[\n  {\"text\":\"your practice text\"}\n]\n---development---\n\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
      "webgazer": "<!--\r\n    This is based on code from OSF repository https://osf.io/jmz79/ that accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017.\r\n\r\n    Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a freeviewing task that works on Collector\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <link href=\"libraries/webgazer/css/jquery-ui.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <link href=\"libraries/webgazer/css/jquery.mobile-1.4.5.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <link href=\"libraries/webgazer/css/tolcam.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <script src=\"libraries/webgazer/js/jquery-1.12.3.min.js\"></script>\r\n    <script src=\"libraries/webgazer/js/jquery-ui.js\"></script>\r\n    <script src=\"libraries/webgazer/js/jquery.mobile-1.4.2.min.js\"></script>\r\n    <script src=\"libraries/webgazer/js/simpleheat.js\"></script>\r\n</head>\r\n<style>\r\n.stimuli_img{\r\n  width: {{image_width}};\r\n  object-fit: fill;\r\n  vertical-align: middle;\r\n  height: {{image_height}};\r\n  position: absolute;\r\n  transform: translate(-50%, 0);\r\n  left: 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n#stimuli_fixation{\r\n\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -moz-transform: translateX(-50%) translateY(-50%);\r\n  -webkit-transform: translateX(-50%) translateY(-50%);\r\n  transform: translateX(-50%) translateY(-50%);\r\n  font-size:100px;\r\n  text-align:center;\r\n  height:150px;\r\n}\r\n#stimuli_img_left{\r\n  margin-left: {{left_position}};\r\n}\r\n#stimuli_img_right{\r\n  /* left:  75%; */\r\n  margin-left: {{right_position}};\r\n}\r\n</style>\r\n<body>\r\n  <div id=\"instruction\">\r\n    <div id=\"instruction_1\" class=\"instruction_page\">\r\n      This experiment is based on code from the OSF repository <a href=\"https://osf.io/jmz79/\" target=\"_blank\">https://osf.io/jmz79/</a> which accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017. Please find the abstract and information about the code, analyses, and data below. This work is intended for scientific use only.\r\nWritten by Kilian Semmelmann, tolcam@ksemmelm.de, 2017. <br><br>\r\n\r\nUpdates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a task that works on Collector.\r\n    </div>\r\n\r\n    <div id=\"instruction_2\" class=\"instruction_page\">\r\n      <h1>Webcam Setup</h1>\r\n      <br />\r\n      <div id=\"setup_after\">\r\n          You can take a short break and move your head. Before continuing, please follow the instructions noted below.<br />\r\n      </div>\r\n      <br />\r\n      Please turn off your mobile phone and close all other programs and websites. Then carefully read and follow these instructions:<br />\r\n      <img src=\"libraries/webgazer/imgs/instructions_donttilt.png\" style = \"width: 100%; margin-top: 20px; margin-bottom: 20px;\"/> <br>\r\n      If possible, please adjust your position until your face matches the picture below as much as possible:<br />\r\n      <br />\r\n      <table>\r\n        <tr>\r\n          <td>\r\n            <img style=\"height:300px;width:400px; -webkit-transform: scaleX(-1); transform:scaleX(-1);\" src=\"libraries/webgazer/imgs/ideal_pose.png\"/>\r\n          </td>\r\n          <td>\r\n            <span id=\"webcam_insert\"></span>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <br />\r\n      <div id=\"setup_first\">\r\n          This study consists of multiple five-minute parts with pauses inbetween. After you clicked \"start\", please avoid moving your head. If you move too much, the calibration can fail and you might not be able to finish the study.\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div id=\"instruction_3\" class=\"instruction_page\">\r\n      <div id=\"beforetherest\">\r\n        <h1>Proceed</h1>\r\n        <br />\r\n        Click \"Proceed\" to move onto the next trial\r\n        <button onclick=\"Trial.submit()\" class=\"btn\">Proceed</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"instruction_back\" class=\"instruction_navigation\">\r\n      <div id=\"instruction_back_text\">\r\n        &lt;\r\n      </div>\r\n    </div>\r\n    <div id=\"instruction_continue\" class=\"instruction_navigation\">\r\n      <div id=\"instruction_continue_text\">\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"calibration_dot\" class=\"stimuli\">\r\n    <div id=\"calibration_cnt\">0</div>\r\n  </div>\r\n  <div id=\"stimulus\" class=\"stimuli\"><img src=\"libraries/webgazer/imgs/talking.jpg\" /></div>\r\n  <div id=\"stimuli_dot\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_bar\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_fixation\" class=\"stimuli\">+</div>\r\n  <div id=\"stimuli_prime\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_target\" class=\"stimuli\">X</div>\r\n  <img id=\"stimuli_img_left\" class=\"stimuli stimuli_img\"/>\r\n  <img id=\"stimuli_img_right\" class=\"stimuli stimuli_img\"/>\r\n  <div id=\"instruction_message\"></div>\r\n\r\n  <div id=\"message\">\r\n    no message\r\n  </div>\r\n\r\n  <!-- data quality info -->\r\n  <input type=\"hidden\" name=\"window_inner_height\" id=\"window_inner_height\"/>\r\n  <input type=\"hidden\" name=\"window_inner_width\"  id=\"window_inner_width\"/>\r\n  <input type=\"hidden\" name=\"fixation_rts\"        id=\"fixation_rts\"/>\r\n\r\n</body>\r\n</html>\r\n<script>\r\n\r\n\r\n\r\n//////////////////////\r\n// Borcsok variables\r\n//////////////////////\r\n\r\nvar all_fixation_rts = [];\r\n\r\nvar image_pair;\r\nTrial.set_timer(function(){\r\n  function refuse_height(){\r\n    bootbox.confirm(\"Your window height needs to be at least {{min_height}} before starting. Please make your window as big as possible before proceeding.\", function(result){\r\n      if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\r\n        refuse_height();\r\n      } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n    });\r\n  };\r\n  function refuse_width(){\r\n    bootbox.confirm(\"Your window width needs to be at least {{min_width}} before starting. Please make your window as big as possible before proceeding.\", function(result){\r\n      if(window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\r\n        refuse_width();\r\n      } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n    });\r\n  }\r\n  if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\r\n    refuse_height();\r\n  } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n  if(window.innerWidth <  parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\r\n    refuse_width();\r\n  } else {\r\n    $(\"#window_inner_height\").val(window.innerHeight);\r\n    $(\"#window_inner_width\").val(window.innerWidth);\r\n  }\r\n},0);\r\n\r\n\r\n//////////////////////\r\n// default settings //\r\n//////////////////////\r\n\r\nvar calibrations = \"{{calibrations}}\";\r\nvar freeview_image_file = \"{{freeview_image_file}}\".toLowerCase();\r\nvar design_type = \"{{design_type}}\";\r\nvar calibration_skip = \"{{calibration_skip}}\";\r\nvar image_height = \"{{image_height}}\";\r\nvar image_width = \"{{image_width}}\";\r\nvar left_side = \"{{left_side}}\";\r\nvar save_script = \"{{save_script}}\";\r\nvar stim_duration = \"{{stim_duration}}\";\r\nvar trials = \"{{trials}}\";\r\nvar trial_order = \"{{trial_order}}\";\r\n\r\n\r\nif(calibrations.indexOf(\"calibrations\") !== -1){\r\n  calibrations = 13;\r\n}\r\nif(calibration_skip.indexOf(\"calibration_skip\") !== -1){\r\n  calibration_skip = \"no\";\r\n}\r\nif(stim_duration.indexOf(\"stim_duration\") !== -1){\r\n  stim_duration = 2000;\r\n}\r\nif(left_side.indexOf(\"left_side\") !== -1){\r\n  left_side = \"counterbalance\";\r\n}\r\n\r\n\r\n\r\n\r\n/************************************\r\n * HELPER FUNCTIONS\r\n ************************************/\r\n/**\r\n * Shuffles array in place.\r\n * @param {Array} a items The array containing the items.\r\n * @author http://stackoverflow.com/a/2450976/4175553\r\n */\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n/************************************\r\n * WEBCAM PARAMETERS\r\n ************************************/\r\nvar cam = {};\r\ncam.overlay = '';\r\ncam.width = 400;\r\ncam.height = 300;\r\ncam.topDist = '0px';\r\ncam.leftDist = '0px';\r\ncam.recording = 0;\r\ncam.validating = 0;\r\ncam.calibrating = 0;\r\ncam.initialized = 0;\r\n\r\n/************************************\r\n * CALIBRATION PARAMETERS\r\n ************************************/\r\nvar calibrating = 0;\r\nvar t_calibration_start;\r\nvar calibration_no = 0;\r\nvar calibration = {};\r\ncalibration.points = [];\r\ncalibration.method = \"watch\"; // click or watch\r\ncalibration.calibrations = calibrations // how many calibration dots\r\ncalibration.duration = 20; // how often does one position get sampled\r\ncalibration.instruction = 'Please look at each dot until <br /> it disappears. <br /><br />Please do not move your head,<br />only move your eyes.';\r\nif(\"{{skip_instruct}}\" == \"on\"){\r\n  calibration.instruction_duration = 0;\r\n} else {\r\n  calibration.instruction_duration = 10000;\r\n}\r\n\r\n/************************************\r\n * VALIDATION PARAMETERS\r\n ************************************/\r\nvar validating = 0;\r\nvar validation_no = 0;\r\nvar validation_current = {\"x\": 0, \"y\": 0};\r\nvar validation_attempt = 1;\r\nvar validation = {};\r\nvalidation.validations = 5;\r\nvalidation.duration = 20;\r\nvalidation.points = [];\r\nvalidation.timeout = 20000; // if no validation happens within X ms, validation will be ended and re-calibrated\r\nvalidation.attempts = 5; // how often can validation be failed PER validation\r\nvalidation.distance = 200; // offset distance in pixel to be a valid validation sample\r\n\r\n\r\n/************************************\r\n* FREEVIEW PARAMETERS\r\n*************************************/\r\nvar freeview_no = 0;\r\n\r\n\r\n/************************************\r\n * DESIGN\r\n ************************************/\r\nvar design = {};\r\nvar block_no = 0;\r\nvar trial_no = 0;\r\n\r\neyetrack_designs = {\r\n  freeview:   {'type': 'freeview', 'trials': trials, 'iti': 500, 'instruction': '{{text}}', 'instruction_duration': 10000},\r\n  simple: {'type': 'simple', 'trials': 24, 'iti': 500, 'instruction': 'Please look at the cross.<br />When the dot appears, please look at it.<br /><br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 5000},\r\n  pursuit: {'type': 'pursuit', 'trials': 24, 'iti': 500, 'instruction': 'A black dot will appear. Please <br />look at it. When it turns <span style=\"color: #dd494b;\">red</span>,<br /> Please follow its movement with your eyes.<br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 7000},\r\n\r\n}\r\n\r\nif(\"{{skip_instruct}}\" == \"on\"){\r\n  eyetrack_designs.freeview.instruction_duration = 0;\r\n}\r\n\r\n\r\ndesign.blocks = [\r\n  eyetrack_designs[[\"{{design_type}}\"]]\r\n];\r\n\r\n//design.blocks = shuffle(design.blocks);\r\ndesign.blocks_randomized = 1; // shall the blocks be shuffled?\r\ndesign.trials_randomized = 1; // same for trials\r\ndesign.calibrate = \"high\";\r\ndesign.recalibrate = 1;\r\n\r\n\r\n\r\n/************************************\r\n * DATA VARIABLES\r\n ************************************/\r\nvar data = [];\r\nvar data_current = {};\r\nvar status = '-';\r\n\r\n/**\r\ndata.design = jQuery.extend(true, {}, design);\r\n **/\r\n\r\n/************************************\r\n * SET UP WEBGAZER\r\n ************************************/\r\nfunction loadWebgazer() {\r\n  $('canvas').remove();\r\n  cam.initialized = 0;\r\n  $.getScript( \"libraries/webgazer/js/webgazer_old.js\" )\r\n    .done(function( script, textStatus ) {\r\n      initializeWebgazer();\r\n      $('#message').html('Please allow for access on your Webcam on the top part of the screen. <br /><br />Remember: We will NOT transmit your video, but only process it locally and transmit numbers to our server.').show();\r\n    })\r\n    .fail(function( jqxhr, settings, exception ) {\r\n      $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\r\n    });\r\n}\r\n\r\n\r\nfunction initializeWebgazer() {\r\n\r\n  //webgazer.clearData()\r\n  webgazer.setRegression('ridge') /* currently must set regression and tracker */\r\n    .setTracker('clmtrackr')\r\n    .setGazeListener(function(d, clock) {\r\n      //console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */\r\n      //console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */\r\n      if (d !== null) {\r\n\r\n        if (cam.calibrating == 1) {\r\n            var $cd = $('#calibration_dot');\r\n            var cx = parseInt(Math.round($cd.offset().left));\r\n            var cy = parseInt(Math.round($cd.offset().top));\r\n            var cp = d;\r\n            var dist = Math.sqrt(((cp.x - cx) * (cp.x - cx)) + ((cp.y - cy) * (cp.y - cy)));\r\n            var c = $('#calibration_cnt').html();\r\n            data_current.raw.push({'time': clock, 'x': cp.x, 'y': cp.y, 'cx': cx, 'cy': cy, 'dist': dist, 'c': c});\r\n        }\r\n\r\n\r\n        if (cam.validating == 1) {\r\n            // see whether dx and dy are within 100px radius of target\r\n            var dist = parseInt(Math.sqrt(((d.x - validation_current.x) * (d.x - validation_current.x)) + ((d.y - validation_current.y) * (d.y - validation_current.y))));\r\n            var c = parseInt($('#calibration_cnt').html());\r\n            if (dist < validation.distance) {\r\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 1});\r\n                if (c < calibration.duration) {\r\n                    $('#calibration_cnt').html(++c);\r\n                } else {\r\n                    cam.validating = 0;\r\n                    clearTimeout(t);\r\n                    $('#calibration_dot').hide();\r\n                    validation_no++;\r\n                    saveData();\r\n                    setTimeout(\"validate();\", 500);\r\n                }\r\n            } else {\r\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 0});\r\n            }\r\n        }\r\n\r\n        if (cam.recording == 1) {\r\n            var tx = -1;\r\n            var ty = -1;\r\n            if (data_current.task == \"simple\" || data_current.task == \"pursuit\") {\r\n                var $sd = $('#stimuli_dot');\r\n                var tx = parseInt(Math.round($sd.offset().left));\r\n                var ty = parseInt(Math.round($sd.offset().top));\r\n            }\r\n            data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'tx': tx, 'ty': ty, 'status': status});\r\n            //console.log(data.trials[trial_no].raw.length + ' ' + d.x + ' ' + d.y);\r\n        }\r\n      }\r\n    })\r\n    .begin()\r\n    .showPredictionPoints(false); /* shows a square every 100 milliseconds where current prediction is */\r\n\r\n  cl = webgazer.getTracker().clm;\r\n\r\n  checkWebgazer();\r\n}\r\n\r\n\r\nfunction checkWebgazer() {\r\n  if (webgazer.isReady()) {\r\n    console.log('webgazer is ready.');\r\n    initializeCam();\r\n  } else {\r\n    setTimeout(checkWebgazer, 100);\r\n  }\r\n}\r\n\r\n/************************************\r\n * SET UP WEBCAM\r\n ************************************/\r\nfunction initializeCam() {\r\n  var video = document.getElementById('webgazerVideoFeed');\r\n  video.style.display = 'block'; // block\r\n  video.style.position = 'relative';\r\n  video.width = cam.width;\r\n  video.height = cam.height;\r\n  video.style.margin = '0px';\r\n  $('#webgazerVideoFeed').css({\r\n    'left': '50%',\r\n    '-webkit-transform': 'scaleX(-1)',\r\n    'transform': 'scaleX(-1) translate(50%, 0)',\r\n    'margin': '20px'\r\n  }).detach().insertAfter('#webcam_insert').get(0).play();\r\n\r\n  webgazer.params.imgWidth = cam.width;\r\n  webgazer.params.imgHeight = cam.height;\r\n\r\n  cam.overlay = document.getElementById('overlay');\r\n  if (cam.overlay === null) {\r\n      cam.overlay = document.createElement('canvas');\r\n      cam.overlay.id = 'overlay';\r\n      document.body.appendChild(cam.overlay);\r\n  }\r\n  cam.overlay.style.position = 'absolute';\r\n  cam.overlay.width = cam.width;\r\n  cam.overlay.height = cam.height;\r\n  cam.overlay.style.top = cam.topDist;\r\n  cam.overlay.style.left = cam.leftDist;\r\n  cam.overlay.style.margin = '0px';\r\n\r\n  cam.initialized = 1;\r\n\r\n  $('#message').html('Webcam access successful.').delay(1000).fadeOut(1000);\r\n  $(\"#instruction_continue\").show();\r\n  parent.parent.requestFullScreen(parent.parent.document.documentElement);\r\n}\r\n\r\n/************************************\r\n * START BLOCKS\r\n ************************************/\r\nfunction prepareBlock() {\r\n  if (cam.initialized == 1) {\r\n    if (block_no < design.blocks.length) {\r\n      trial_no = 0;\r\n\r\n      webgazer.resume();\r\n      if (design.recalibrate == 1 || block_no == 0) {\r\n        $('#instruction_message').html(calibration.instruction).show();\r\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", calibration.instruction_duration);\r\n        setTimeout(\"startCalibration();\", design.blocks[block_no].instruction_duration + 2000);\r\n      } else {\r\n        $('#instruction_message').html(design.blocks[block_no].instruction).show();\r\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\r\n        setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\r\n      }\r\n    } else {\r\n      endExperiment();\r\n    }\r\n  } else {\r\n    setTimeout(\"prepareBlock();\", 500);\r\n  }\r\n}\r\n\r\n\r\n/************************************\r\n * CALIBRATE\r\n ************************************/\r\nfunction startCalibration() {\r\n  if(calibration_skip == \"skip\" ||\r\n     calibration_skip == \"on\"  ||\r\n     calibration_skip == \"yes\" ||\r\n     calibration_skip == \"true\"){\r\n    endValidation()\r\n  } else {\r\n    $('.stimuli').hide();\r\n    $('#calibration_dot').hide();\r\n    if (block_no == 0) {\r\n        $('#calibration_dot').click(function() {\r\n            calibrateHit();\r\n        });\r\n    }\r\n    calibration_no = 0;\r\n    //webgazer.clearData();\r\n    window.localStorage.clear();\r\n    //webgazer.begin();\r\n    t_calibration_start = new Date().getTime();\r\n    calibrate();\r\n  }\r\n}\r\n\r\nvar gaze_phase = \"unknown\";\r\n\r\nfunction calibrate() {\r\n  gaze_phase = \"calibrate\";\r\n  clearTimeout(t);\r\n  if (calibration_no < calibration.calibrations) {\r\n    $('#calibration_cnt').html(calibration.duration);\r\n    $c = $('#calibration_dot');\r\n    //var c = Math.floor(Math.random() * calibration.points.length);\r\n    //var p = calibration.points.splice(c, 1)[0];\r\n    if (calibration.points.length == 0) {\r\n\r\n      /*\r\n      * allocate calibration by pixels rather than percentages\r\n      */\r\n\r\n      var min_width\t   = \"{{min_width}}\".replace(\"px\",\"\");                          // e.g. 1000px in Borcsok et al., (2020)\r\n      var min_height   = \"{{min_height}}\".replace(\"px\",\"\");                         // e.g. 400px  in Borcsok et al., (2020)\r\n      var mid_screen_x = window.innerWidth / 2;\r\n      var mid_screen_y = window.innerHeight / 2;\r\n\r\n      calibration.points = shuffle([\r\n\r\n        {\r\n          position: \"middle\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"top\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"bottom\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"left\",\r\n          x: mid_screen_x - min_width/2 * .9,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"right\",\r\n          x: mid_screen_x + min_width/2 * .9,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"outer-top-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-top-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"inner-top-left\",\r\n          x: mid_screen_x - min_width/2  * .45,\r\n          y: mid_screen_y - min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-top-right\",\r\n          x: mid_screen_x + min_width/2  * .45,\r\n          y: mid_screen_y - min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .45,\r\n          y: mid_screen_y + min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .45,\r\n          y: mid_screen_y + min_height/2 * .45\r\n        }\r\n      ]);\r\n\r\n\r\n\r\n\r\n      /*\r\n      the original code focusing on percentages\r\n\r\n      calibration.points = shuffle([\r\n          {x: \"20%\", y: \"20%\"},\r\n          {x: \"50%\", y: \"20%\"},\r\n          {x: \"80%\", y: \"20%\"},\r\n          {x: \"20%\", y: \"50%\"},\r\n          {x: \"50%\", y: \"50%\"},\r\n          {x: \"80%\", y: \"50%\"},\r\n          {x: \"20%\", y: \"80%\"},\r\n          {x: \"50%\", y: \"80%\"},\r\n          {x: \"80%\", y: \"80%\"},\r\n          {x: \"35%\", y: \"35%\"},\r\n          {x: \"65%\", y: \"35%\"},\r\n          {x: \"35%\", y: \"65%\"},\r\n          {x: \"65%\", y: \"65%\"}\r\n      ]);\r\n      */\r\n    }\r\n    var p = calibration.points.pop();\r\n    $c.css({\r\n        'left' : p.x,\r\n        'top' : p.y\r\n    });\r\n\r\n    data_current = {\r\n        'type': 'calibration',\r\n        'block': block_no,\r\n        'trial': calibration_no,\r\n        'x': p.x,\r\n        'y': p.y,\r\n        'raw': []\r\n    };\r\n\r\n    cam.calibrating = 1;\r\n    $c.show();\r\n    if (calibration.method == 'watch') {\r\n      t = setTimeout(\"autoCalibration();\", 750);\r\n    }\r\n  } else {\r\n    endCalibration();\r\n  }\r\n}\r\n\r\nfunction calibrateHit() {\r\n  var c = $('#calibration_cnt').html();\r\n  /*\r\n  if ($('#webgazerVideoFeed').css('display') == 'block') {\r\n      $('#webgazerVideoFeed').css({\r\n          top: cam.topDist,\r\n          left: cam.leftDist,\r\n          display: 'none',\r\n          transform: '0'\r\n      });\r\n  }*/\r\n  if (c > 1 && cam.calibrating == 1) {\r\n    $('#calibration_cnt').html(--c);\r\n    if (calibration.method == \"watch\") {\r\n      t = setTimeout(\"autoCalibration();\", 100);\r\n      //requestAnimationFrame(autoCalibration);\r\n    }\r\n  } else {\r\n    $('#calibration_cnt').html(9999);\r\n    clearTimeout(t);\r\n    cam.calibrating = 0;\r\n    $('#calibration_dot').hide();\r\n    calibration_no++;\r\n    saveData();\r\n    calibrate();\r\n  }\r\n  return false;\r\n}\r\n\r\nvar t;\r\nfunction autoCalibration() {\r\n  calibrateLog();\r\n  if (cam.calibrating == 1) {\r\n    calibrateHit();\r\n  }\r\n}\r\n\r\nfunction calibrateLog() {\r\n  var $cd = $('#calibration_dot');\r\n  var cx = parseInt(Math.round($cd.offset().left));\r\n  var cy = parseInt(Math.round($cd.offset().top));\r\n  webgazer.watchListener(cx, cy);\r\n}\r\n\r\n\r\nfunction endCalibration() {\r\n  clearTimeout(t);\r\n  $('#calibration_dot').unbind(\"click\");\r\n  startValidation();\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * VALIDATE\r\n ************************************/\r\nfunction startValidation() {\r\n  validation_no = 0;\r\n  validate();\r\n}\r\n\r\nfunction validate() {\r\n  gaze_phase = \"validate\";\r\n  clearTimeout(t);\r\n  if (validation_no < validation.validations) { // if we there are validations left\r\n    $('#calibration_cnt').html(0);\r\n    var $c = $('#calibration_dot');\r\n\r\n    if (validation.points.length == 0) {\r\n\r\n      /*\r\n      * allocate positions by pixels rather than percentages\r\n      */\r\n\r\n      var min_width\t   = \"{{min_width}}\".replace(\"px\",\"\");                          // e.g. 1000px in Borcsok et al., (2020)\r\n      var min_height   = \"{{min_height}}\".replace(\"px\",\"\");                         // e.g. 400px  in Borcsok et al., (2020)\r\n      var mid_screen_x = window.innerWidth / 2;\r\n      var mid_screen_y = window.innerHeight / 2;\r\n\r\n      validation.points = shuffle([\r\n        {\r\n          position: \"top-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"top-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"middle\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n      ]);\r\n\r\n\r\n\r\n      /*\r\n      original validation positions\r\n\r\n      validation.points = shuffle([\r\n          {x: \"20%\", y: \"20%\"},\r\n          {x: \"80%\", y: \"20%\"},\r\n          {x: \"50%\", y: \"50%\"},\r\n          {x: \"20%\", y: \"80%\"},\r\n          {x: \"80%\", y: \"80%\"}\r\n                                    ]);\r\n      */\r\n    }\r\n    var vp = validation.points.pop();\r\n    $c.css({\r\n        'left' : vp.x,\r\n        'top' : vp.y\r\n    });\r\n    $c.show();\r\n    validation_current.x = Math.round($c.offset().left);\r\n    validation_current.y = Math.round($c.offset().top);\r\n\r\n    data_current = {\r\n      'type': 'validation',\r\n      'block': block_no,\r\n      'trial': validation_no,\r\n      'x': validation_current.x,\r\n      'y': validation_current.y,\r\n      'raw': []\r\n    };\r\n    cam.validating = 1;\r\n    t = setTimeout(\"validateFail();\", validation.timeout);\r\n    //t = setTimeout('validation = 0;', 3000);\r\n  } else {\r\n    endValidation();\r\n  }\r\n}\r\n\r\nfunction validateFail() {\r\n  data_current.type = 'validationfail';\r\n  data_current.attempt = validation_attempt;\r\n  saveData();\r\n\r\n\r\n  cam.validating = 0;\r\n  webgazer.pause();\r\n\r\n  $('.stimuli').hide();\r\n  if (validation_attempt >= validation.attempts) {\r\n      $('#message').html('Unforuntately, the calibration failed too many times. Therefore, you can not participate in this study. Please contact <a href=\"mailto:kilian.semmelmann@rub.de\">kilian.semmelmann@rub.de</a> if you have any questions. Thanks for your interest.').show();\r\n  } else {\r\n      validation_attempt++;\r\n      $('#message').html('The calibration failed. <br />Please follow the instructions and try again (try ' + (validation_attempt) + ' of ' + validation.attempts + ').').show().delay(5000).fadeOut(1000);\r\n      $('#instruction').show();\r\n  }\r\n  // TOOD: log validation-fail\r\n}\r\n\r\nfunction endValidation() {\r\n  cam.validating = 0\r\n  validation_attempt = 1;\r\n  webgazer.pause();\r\n  $('#instruction_message').html(design.blocks[block_no].instruction).show();\r\n  setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\r\n  setTimeout(\"prepareTrial();\", design.blocks[block_no].instruction_duration + 2000);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * START EXPERIMENT\r\n ************************************/\r\nvar t_trial_start;\r\nfunction prepareTrial() {\r\n    status = \"prepare\";\r\n    $('.stimuli').hide();\r\n    data_current = {\r\n        'type': 'trial',\r\n        'block': block_no,\r\n        'trial': trial_no,\r\n        'raw': []\r\n    };\r\n    webgazer.resume();\r\n    startTrial();\r\n}\r\n\r\n\r\nfunction startTrial() {\r\n  t_trial_start = new Date().getTime();\r\n  $('#stimuli_fixation').show();\r\n  status = \"fixation_onset\";\r\n  // use start function of block-type name\r\n  var fn = design.blocks[block_no].type+\"Start\";\r\n  window[fn]();\r\n}\r\n\r\n\r\nvar heat;\r\nfunction endTrial() {\r\n  clearTimeout(t);\r\n  cam.recording = 0;\r\n  webgazer.pause();\r\n  status = \"end\";\r\n  $('.stimuli').hide();\r\n  trial_no++;\r\n  saveData();\r\n\r\n  if (trial_no < design.blocks[block_no].trials) {\r\n    setTimeout(\"prepareTrial();\", design.blocks[block_no].iti);\r\n  } else {\r\n    block_no++;\r\n    if (block_no < design.blocks.length) {\r\n      window.localStorage.clear();\r\n      webgazer.clearData();\r\n      //loadWebgazer();\r\n      //prepareBlock();\r\n      navigation('pause');\r\n    } else {\r\n      endExperiment();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction saveData() {\r\n\r\n\r\n  /*\r\n  * did the participant pass validation?\r\n  */\r\n  //data_current\r\n\r\n\r\n  /*\r\n  * change file name depending on whether it's calibration, validation or main trial?\r\n  * add calibration / validation / freeview number\r\n  */\r\n\r\n  var sub_trial_no = -1;\r\n  switch(gaze_phase){\r\n    case \"calibration\":\r\n      sub_trial_no = calibration_no;\r\n      break;\r\n    case \"validate\":\r\n      sub_trial_no = validation_no;\r\n\r\n      /*\r\n      * did the participant pass? (assuming this is validation)\r\n      */\r\n      var valid_rows = 0;\r\n\r\n      data_current.raw.forEach(function(row){\r\n        valid_rows += row.valid;\r\n      });\r\n\r\n      break;\r\n    case \"freeview\":\r\n      sub_trial_no = freeview_no;\r\n      break;\r\n\r\n  }\r\n\r\n\r\n\r\n  data_current.raw = data_current.raw.map(function(row){\r\n    row.x = row.x - window.innerWidth/2;\r\n    row.y = row.y - window.innerHeight/2;\r\n\r\n    if(typeof(image_pair) !== \"undefined\"){\r\n      Object.keys(image_pair).forEach(function(key){\r\n        row[key] = image_pair[key];\r\n      });\r\n    }\r\n    row.screen_width  = screen.width;\r\n    row.screen_height = screen.height;\r\n    row.window_width  = window.innerWidth;\r\n    row.window_height = window.innerHeight;\r\n    row.trial_no      = sub_trial_no;\r\n\r\n    if(valid_rows > 19){\r\n      row.valid_trial = true;\r\n    } else {\r\n      row.valid_trial = false;\r\n    }\r\n\r\n    /*\r\n\r\n    did the participant pass? (assuming this is validation)\r\n\r\n    */\r\n\r\n\r\n    //row.left_image  = image_pair.image_1;\r\n    //row.right_image = image_pair.image_2;\r\n\r\n    return row;\r\n  });\r\n\r\n  data.push(data_current);\r\n  data_current = {};\r\n  sendData();\r\n}\r\n\r\n\r\nfunction sendData() {\r\n\r\n  var sub_trial_no = -1;\r\n  switch(gaze_phase){\r\n    case \"calibration\":\r\n      sub_trial_no = calibration_no;\r\n      break;\r\n    case \"validate\":\r\n      sub_trial_no = validation_no;\r\n      break;\r\n    case \"freeview\":\r\n      sub_trial_no = freeview_no;\r\n      break;\r\n  }\r\n\r\n  switch(parent.parent.Study.get_vars.platform){\r\n    case \"preview\":\r\n      //do nothing\r\n      break;\r\n    case \"localhost\":\r\n      console.dir(\"data\");\r\n      console.dir(data);\r\n      data.forEach(function(trial,trial_no){\r\n        if (trial !== null){\r\n          parent.parent.Collector.electron.fs.write_data(\r\n            parent.parent.Study.get_vars.location,\r\n            parent.parent.$(\"#participant_code\").val() + \"-\" +\r\n              gaze_phase                               + \"-\" +\r\n              trial_no                                 + \"-\" +\r\n              sub_trial_no                             + \".csv\",\r\n            Papa.unparse(data[trial_no].raw)\r\n          );\r\n\r\n                                      /*\r\n\r\n                                      error above\r\n\r\n                                      */\r\n\r\n\r\n\r\n           parent.parent.online_save(parent.parent.Study.get_vars.location,\r\n                    parent.parent.$(\"#participant_code\").val() +\r\n                      gaze_phase +\r\n                      \"-\" +\r\n                      trial_no +\r\n                      \"-\" +\r\n                      sub_trial_no,\r\n                      \"-trial-\" +\r\n                      parent.parent.exp_json.trial_no +\r\n                      \"-\" +\r\n                      trial_no,\r\n                    parent.parent.$(\"#completion_code\").val(),\r\n                    parent.parent.$(\"#prehashed_code\").val(),\r\n                    Papa.unparse(data[trial_no].raw),          //the data\r\n          save_script.split(\"|\"),\r\n          function(){\r\n            parent.parent.online_data_obj.saves_ended ++;\r\n          });\r\n          data[trial_no] = null;\r\n        }\r\n      });\r\n      break;\r\n    default:\r\n      data.forEach(function(trial,trial_no){\r\n          if (trial !== null){\r\n                     parent.parent.online_save(parent.parent.Study.get_vars.location,\r\n                      parent.parent.$(\"#participant_code\").val() +\r\n                        \"-\" + gaze_phase +\r\n                        \"-trial-\" +\r\n                        parent.parent.exp_json.trial_no +\r\n                        \"-\" +\r\n                        trial_no +\r\n                        \"-\" +\r\n                        sub_trial_no,\r\n                      parent.parent.$(\"#completion_code\").val(),\r\n                      parent.parent.$(\"#prehashed_code\").val(),\r\n                      Papa.unparse(data[trial_no].raw),          //the data\r\n            save_script.split(\"|\"),\r\n            function(){\r\n              parent.parent.online_data_obj.saves_ended ++;\r\n            });\r\n            data[trial_no] = null;\r\n          }\r\n        });\r\n\r\n        break;\r\n  }\r\n}\r\n\r\n\r\nfunction endExperiment() {\r\n  Trial.submit();\r\n}\r\n\r\n\r\n/************************************\r\n * SIMPLE DOT VIEWING PARADIGM\r\n * If you want to introduce your own paradigms, follow the same structure and extend the design array above.\r\n ************************************/\r\nvar tSimple = {};\r\ntSimple.positions = [];\r\nfunction simpleStart() {\r\n    // if we don't have dot-positions any more, refill the array\r\n    if (tSimple.positions.length == 0) {\r\n        tSimple.positions = shuffle([\r\n            {x: \"20%\", y: \"20%\"},\r\n            {x: \"50%\", y: \"20%\"},\r\n            {x: \"80%\", y: \"20%\"},\r\n            {x: \"20%\", y: \"50%\"},\r\n            {x: \"80%\", y: \"50%\"},\r\n            {x: \"20%\", y: \"80%\"},\r\n            {x: \"50%\", y: \"80%\"},\r\n            {x: \"80%\", y: \"80%\"}\r\n        ]);\r\n    }\r\n    var pos = tSimple.positions.pop();\r\n    $('#stimuli_dot').css({\r\n        'top': pos.y,\r\n        'left': pos.x\r\n    });\r\n    data_current.task = 'simple';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'dot_' + pos.x + '_' + pos.y;\r\n\r\n    cam.recording = 1;\r\n    setTimeout('$(\"#stimuli_fixation\").hide(); status = \"fixation_offset\";', 1500);\r\n    setTimeout('simpleShowdot();', 2000);\r\n}\r\n\r\nfunction simpleShowdot() {\r\n    status = \"stimulus_onset\";\r\n    $(\"#stimuli_dot\").show();\r\n    setTimeout('status = \"stimulus_offset\"; endTrial();',  2000);\r\n}\r\n\r\n\r\n/************************************\r\n * POSNER VIEWING PARADIGM\r\n ************************************/\r\nfunction posnerStart() {\r\n    var p = Math.random() >= 0.5 ? '&gt;&gt;&gt;' : '&lt;&lt;&lt;';\r\n    $('#stimuli_prime').html(p);\r\n\r\n    var t = Math.random() >= 0.5 ? 'X' : 'N';\r\n    $('#stimuli_target').html(t);\r\n\r\n    var cond = Math.random() >= 0.7 ? 'incongruent' : 'congruent';\r\n\r\n    var tpos = 'left';\r\n    if ((cond == 'incongruent' && p == '&lt;&lt;&lt;') || ((cond == 'congruent' && p == '&gt;&gt;&gt;'))) {\r\n        tpos = 'right';\r\n    }\r\n\r\n    var pos = {};\r\n    if (tpos == 'left') {\r\n        pos.x = '20%';\r\n        pos.y = '30%';\r\n    } else {\r\n        pos.x = '80%';\r\n        pos.y = '30%';\r\n    }\r\n\r\n\r\n    $('#stimuli_target').css({\r\n        'top': pos.x,\r\n        'left': pos.y\r\n    });\r\n\r\n\r\n    data_current.task = 'posner';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'posner_' + pos.x + '_' + pos.y + '_' + tpos;\r\n\r\n    cam.recording = 1;\r\n    setTimeout(\"$('#stimuli_fixation').hide();\", 1000);\r\n    setTimeout('posnerShowprime();', 1500);\r\n}\r\n\r\nfunction posnerShowprime() {\r\n    $('#stimuli_prime').show();\r\n    setTimeout(\"posnerShowTarget();\", 300);\r\n}\r\n\r\nfunction posnerShowTarget() {\r\n    $('#stimuli_prime').hide();\r\n    $('#stimuli_target').show();\r\n    setTimeout(\"endTrial();\", 1500);\r\n}\r\n\r\n\r\n/************************************\r\n * SMOOTH PURSUIT PARADIGM\r\n ************************************/\r\nvar tPursuit = {};\r\nfunction pursuitStart() {\r\n    $('#stimuli_fixation').hide();\r\n    var pos_possible = shuffle([\r\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\r\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\r\n        {x: \"80%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"20%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"80%\"}\r\n    ]);\r\n    var pos = pos_possible[0];\r\n    $s = $('#stimuli_dot');\r\n    $s.css({\r\n        'top': pos.y,\r\n        'left': pos.x\r\n    });\r\n\r\n    $s.css({\r\n        'background-color': '#000'\r\n    });\r\n\r\n\r\n    data_current.task = 'pursuit';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'pursuit_' + pos.x + '_' + pos.y + '_' + pos.tx + '_' + pos.ty;\r\n\r\n    cam.recording = 1;\r\n    $s.show();\r\n    setTimeout(function() {\r\n        status = \"pursuit_start\";\r\n        $('#stimuli_dot').css({\r\n            'background-color': '#dd494b'\r\n        }).animate({ \"left\": pos.tx, \"top\": pos.ty },\r\n            2000,\r\n            'linear',\r\n        function() {\r\n            status = \"pursuit_end\";\r\n            setTimeout(\"endTrial();\", 500);\r\n        });\r\n    }, 1500);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * FREE VIEWING PARADIGM\r\n ************************************/\r\nvar tFreeview = {};\r\n\r\n\r\ntFreeview.stimuli = [];\r\n\r\n\r\n\r\nfunction process_freeview_image_file(){\r\n  console.dir(\"tFreeview\");\r\n  console.dir(tFreeview);\r\n  if(trial_order == \"random\"){\r\n    tFreeview.stimuli = shuffle(tFreeview.stimuli);\r\n  }\r\n\r\n\r\n  if(left_side == \"random\"){\r\n    for(var i = 0; i < tFreeview.stimuli.length; i++){\r\n      [left_image,right_image] = shuffle([tFreeview.stimuli[i].image_1,\r\n                                          tFreeview.stimuli[i].image_2]);\r\n      tFreeview.stimuli[i].image_1 = left_image;\r\n      tFreeview.stimuli[i].image_2 = right_image;\r\n    }\r\n  } else if(left_side == \"equal\" | left_side == \"counterbalance\"){\r\n    // select indexes to swap left and right for half the indexes\r\n    // all indexes:\r\n    var indexes = Array.from({length:tFreeview.stimuli.length},(v,k)=>k);\r\n        indexes = shuffle(indexes);\r\n\r\n    //assign the first half left to right\r\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){          //this will only loop through half of the randomised indexes\r\n      var this_index = indexes[i];\r\n      var right_image = tFreeview.stimuli[this_index].image_1;\r\n      var left_image = tFreeview.stimuli[this_index].image_2;\r\n      tFreeview.stimuli[this_index].image_1 = left_image;\r\n      tFreeview.stimuli[this_index].image_2 = right_image;\r\n    }\r\n  } else if(left_side == \"image_1\"){\r\n    // do nothing\r\n  } else if(left_side == \"image_2\"){\r\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){\r\n      var right_image = tFreeview.stimuli[i].image_1;\r\n      var left_image = tFreeview.stimuli[i].image_2;\r\n      tFreeview.stimuli[i].image_1 = left_image;\r\n      tFreeview.stimuli[i].image_2 = right_image;\r\n    }\r\n  } else {\r\n    alert(\"there's a problem in the 'left_side' column - fix this before testing.\");\r\n  }\r\n};\r\n\r\n//check if the freeview file matches one of the stimuli files\r\nif(typeof(parent.parent.exp_json.all_stims[freeview_image_file]) !== \"undefined\"){\r\n  var freeview_contents = parent.parent.exp_json.all_stims[freeview_image_file];\r\n  var freeview_clean    = freeview_contents.map(function(row){\r\n    return row.filter(item => item !== null);\r\n  });\r\n  tFreeview.stimuli = Papa.parse(Papa.unparse(freeview_clean),{\r\n    header:true,\r\n    skipEmptyLines:true\r\n  }).data;\r\n  process_freeview_image_file();\r\n} else {\r\n  if(freeview_image_file.toLowerCase().indexOf(\"https://\") == -1){                //i.e. isn't stored on dropbox or some other remote location\r\n    freeview_image_file = \"../User/\" + freeview_image_file;\r\n  }\r\n  $.get(freeview_image_file,function(result){\r\n    tFreeview.stimuli = Papa.parse(result,{\r\n      header:true,\r\n      skipEmptyLines:true\r\n    }).data;\r\n    process_freeview_image_file();\r\n  });\r\n}\r\n\r\nimages_loaded = 0;\r\n\r\n\r\nfunction freeviewStart() {\r\n  gaze_phase = \"freeview\";\r\n  function freeview_loaded(left_image, right_image){\r\n    freeview_no++;\r\n    data_current.task = 'freeviewing';\r\n    data_current.x = $('#stimuli_img_left').css('left');\r\n    data_current.y = \"0%\";\r\n    data_current.condition = 'view_' + left_image + '_' + right_image;\r\n\r\n    cam.recording = 1;\r\n    setTimeout(function(){\r\n      status = 'fixation_flash';\r\n      $('#stimuli_fixation').css(\"color\",\"red\");\r\n    }, 1000);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"black\");\r\n    }, 1250);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"red\");\r\n    }, 1500);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"black\");\r\n    }, 1750);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').hide();\r\n      status = 'fixation_offset';\r\n\r\n    }, 2000);\r\n    setTimeout(function(){\r\n\r\n      all_fixation_rts.push()\r\n      freeviewShow();\r\n    },2500);\r\n  }\r\n\r\n  document.body.style.cursor = 'none';\r\n\r\n\r\n  image_pair = tFreeview.stimuli.shift();\r\n\r\n  [left_image,right_image] = [image_pair.image_1,image_pair.image_2];\r\n\r\n  /*\r\n  * Some code to make this work on installed version of Collector\r\n  */\r\n  switch(parent.parent.Study.get_vars.platform){\r\n    case \"preview\":\r\n    case \"localhost\":\r\n      left_image = \"../../\" + left_image;\r\n      right_image = \"../../\" + right_image;\r\n      break;\r\n  }\r\n\r\n  var baseline_time = new Date().getTime();\r\n\r\n\r\n  // Make sure the images are loaded before going past fixation\r\n  /////////////////////////////////////////////////////////////\r\n\r\n  $(\"#stimuli_img_left\").off(\"load\");\r\n  $(\"#stimuli_img_right\").off(\"load\");\r\n  $(\"#stimuli_img_left\").attr(\"src\" , left_image);\r\n  $(\"#stimuli_img_right\").attr(\"src\" , right_image);\r\n\r\n  images_loaded = 0;\r\n\r\n  $(\"#stimuli_img_left\").on(\"load\",function(){\r\n    images_loaded = images_loaded + 1;\r\n    if(images_loaded == 2){\r\n      freeview_loaded(left_image, right_image);\r\n    }\r\n  });\r\n\r\n  $(\"#stimuli_img_right\").on(\"load\",function(){\r\n    images_loaded = images_loaded + 1;\r\n    if(images_loaded == 2){\r\n      freeview_loaded(left_image, right_image);\r\n    }\r\n  });\r\n}\r\n\r\nfunction freeviewShow() {\r\n  status = 'stimulus_onset';\r\n  $('#stimuli_img_left').show();\r\n  $('#stimuli_img_right').show();\r\n  setTimeout(\"status = 'stimulus_offset'; endTrial();\", stim_duration);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * GENERATE AND SHOW HEATMAP\r\n ************************************/\r\nfunction heatmap() {\r\n    // preprocess data for heatmap\r\n    var bins = []; // create bins and fill them\r\n    for (var y = 0; y < window.innerHeight; y++) {\r\n        for (var x = 0; x < window.innerWidth; x++) {\r\n            bins.push([x, y, 0]);\r\n        }\r\n    }\r\n    // sort fixations into bins and get max\r\n    var max = 0;\r\n    for (var i = 0; i < data[data.length - 1].raw.length; i++) {\r\n        var d = data[data.length - 1].raw[i];\r\n        var dx = Math.round(d.x);\r\n        var dy = Math.round(d.y);\r\n        var pos = (dy * window.innerWidth) + dx;\r\n        if (pos <= bins.length && pos >= 0) {\r\n            bins[pos][2] += 1;\r\n            if (bins[pos][2] > max) {\r\n                max = bins[pos][2];\r\n            }\r\n        } else {\r\n            console.log('dropped ' + pos);\r\n        }\r\n    }\r\n\r\n    // remove empty bins\r\n    var binsc = [];\r\n    for (var i = 0; i < bins.length; i++) {\r\n        if (bins[i][2] != 0) {\r\n            binsc.push(bins[i]);\r\n        }\r\n    }\r\n\r\n    // create heatmap\r\n    $('body').append(\"<canvas id=\\\"heatmap\\\"></canvas>\");\r\n    $('#heatmap').attr('width', window.innerWidth);\r\n    $('#heatmap').attr('height', window.innerHeight);\r\n    heat = simpleheat('heatmap');\r\n    heat.resize();\r\n    heat.radius(30,50);\r\n    heat.max(max).data(binsc).draw();\r\n\r\n    $('#stimuli_img').show();\r\n}\r\n\r\n\r\n/**\r\n * navigation\r\n */\r\nvar page = 1;\r\nvar oldpage = -1;\r\nvar d_consent = undefined;\r\nfunction navigation(direction) {\r\n  $('#message').hide();\r\n\r\n  $('#instruction_continue_text').html(\"&gt;\");\r\n\r\n\r\n\r\n\tif (page == 2 && direction == 'continue') {\r\n    if (cam.initialized == 1) {\r\n      $('#instruction').fadeOut(1000);\r\n      setTimeout(\"prepareBlock();\", 2000);\r\n    }\r\n  } else if (page == 2 && direction == 'pause') {\r\n    $('#instruction_continue').html(\"continue\").css({'font-size': '1.7em'});\r\n    $('#instruction_2').find(\"h1\").html('short pause (block ' + block_no + ' of ' + design.blocks.length + \")\");\r\n    $('#setup_first').hide();\r\n    $('#setup_after').show();\r\n\r\n    $('#instruction').show(function() {\r\n      if (block_no == design.blocks.length) {\r\n        page++;\r\n      } else {\r\n        $('#instruction_2').fadeIn(300);\r\n        $('#webgazerVideoFeed').show();\r\n      }\r\n    });\r\n  } else if  (direction == 'continue') {\r\n    page++;\r\n  } else if (direction == 'back') {\r\n    page--;\r\n  }\r\n  page = page < 1 ? 1 : page;\r\n  page = page > $('.instruction_page').length ? $('.instruction_page').length : page;\r\n  page <= 1 ? $('#instruction_back').hide() : $('#instruction_back').show();\r\n  page >= $('.instruction_page').length ? $('#instruction_continue').hide() : $('#instruction_continue').show();\r\n  page >= 3 ? $('#instruction_back,#instruction_continue').hide() : \"\";\r\n  block_no > 0 ? $('#instruction_back').hide() : \"\";\r\n\r\n  if (oldpage != page) { // if we stay at the same page, we avoid unnecessary animations\r\n    $('.instruction_page').hide();\r\n    $('#instruction_'+page).fadeIn(300);\r\n  }\r\n  // start up webcam\r\n  if (page == 2 && cam.initialized == 0) {\r\n    $(\"#instruction_continue\").hide();\r\n    loadWebgazer();\r\n  }\r\n  oldpage = page;\r\n}\r\n\r\n\r\nvar cl;\r\nvar t_start = new Date().getTime();\r\n$('document').ready(function() {\r\n  $('#stimulus').hide();\r\n  $('#calibration_dot').hide();\r\n  $('#setup_after').hide();\r\n  $('#instruction_message').hide();\r\n  $('#therest').hide();\r\n\r\n\r\n  $('#start_button').click(function() {\r\n    $(this).hide();\r\n    prepareBlock();\r\n  });\r\n\r\n  $('body').keypress(function(e) {\r\n    //e.preventDefault();\r\n    switch(e.keyCode) {\r\n\r\n    }\r\n  });\r\n\r\n  $('#instruction_continue').click(function() {\r\n    navigation('continue');\r\n  });\r\n\r\n  $('#instruction_back').click(function() {\r\n    navigation('back');\r\n  });\r\n\r\n  $( \"#f_crowdflowerid\" ).tooltip({\r\n    show: {\r\n      effect: \"slideDown\",\r\n      delay: 250\r\n    }\r\n  });\r\n\r\n\r\n  /*\r\n  $('#f_birthday').datepicker({\r\n      dateFormat: 'yy/mm/dd',\r\n      changeYear: true,\r\n      changeMonth: true,\r\n      yearRange: \"-100:+0\"\r\n  });\r\n  */\r\n  var select = $('#f_birthday');\r\n  for (var i=18;i <= 100; i++){\r\n    select.append('<option value=\"'+i+'\">'+i+'</option>')\r\n  }\r\n\r\n  window.localStorage.clear();\r\n\r\n  var ss = window.location.hash.substring(1);\r\n  $('#cf_reference,#asd_reference,#rub_reference,#cf_code').hide();\r\n  if (ss == \"cf\") { // crowdflower-reference\r\n    $('#cf_reference,#cf_code').show();\r\n  } else if (ss == \"rub\") {\r\n    $('#rub_reference').show();\r\n\t} else {\r\n    $('#asd_reference').show();\r\n\t}\r\n\r\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\r\n  var is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  if (is_chrome || is_firefox) {\r\n    page = 0;\r\n    navigation('start');\r\n  } else {\r\n    $('#instruction').hide();\r\n    $('#message').html('Thank you very much for your interest in our study.<br /><br />Unfortunately, your browser is not supported by our website. To participate, you need either the browser \"Google Chrome\" or \"Firefox\".<br /><br />Do download one of these securely and free of charge, please follow one of these links: <a href=\"https://www.google.com/chrome/browser/desktop/\" target=\"_blank\">Google Chrome</a> or <a href=\"https://www.mozilla.org/de/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>').show();\r\n  }\r\n});\r\n\r\n\r\n\r\n/*\r\n\r\n function drawLoop() {\r\n    requestAnimFrame(drawLoop);\r\n    var p = webgazer.getCurrentPrediction();\r\n    if (p !== null) {\r\n        console.log(p);\r\n        $('body').append('<span class=\"p\" style=\"top: '+p.y+'px; left: '+p.x+'px\"></span>');\r\n        measurements++;\r\n    }\r\n    t = (new Date().getTime() - start)/1000;\r\n    cam.overlay.getContext('2d').clearRect(0,0,cam.width,cam.height);\r\n    if (cl.getCurrentPosition()) {\r\n        //console.log(cl.getCurrentPosition()[0]);\r\n        //cl.draw(overlay);\r\n    }\r\n}\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.onbeforeunload = function() {\r\n  //webgazer.end(); //Uncomment if you want to save the data even if you reload the page.\r\n}\r\n</script>\r\n",
      "jumbled_sentence": "<!--\r\n  Jumbled sentence questions\r\n  \r\n-->\r\n<style>\r\n.question_box{\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  line-height: 200px;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n#sentence_html{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n</style>\r\n<table id = \"questionTable\">\r\n  <tr>\r\n    <td><div class=\"question_box\" id=\"box_0\"></div></td>\r\n  </tr>\r\n</table>\r\n\r\n<div id=\"sentence_html\" class=\"form-inline\">\r\n\r\n\r\n<script>\r\n// var select = document.getElementById(\"selectAnswer\");\r\n// var options1 = [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"];\r\n// for(var i = 0; i < options1.length; i++) {\r\n    // var opt = options1[i];\r\n    // var dropDown = document.createElement(\"option\");\r\n    // dropDown.textContent = opt;\r\n    // dropDown.value = opt;\r\n    // select.appendChild(dropDown);\r\n// }\r\n/*\r\nvar allQuestions = [\r\n  {\r\n    question: \"The \" + \"<select id = 'selectAnswer'</select>\" + \" are at the junction between \" + \"<select id = 'selectAnswer'</select>\" + \" and \" + \"<select id = 'selectAnswer'</select>\" + \", they signal forces imposed on, or generated by, the \" + \"<select id = 'selectAnswer'</select>\" + \".\",\r\n    answers: [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"]\r\n  }\r\n];\r\n*/\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[\"{{jumbled}}\"]) !== \"undefined\"){\r\n  var raw_questions = Trial.get_stim(\"{{jumbled}}\");\r\n  console.log(\"raw_questions\");\r\n  console.log(raw_questions);\r\n  var long_questions = Papa.parse(raw_questions,{\r\n    header: true\r\n  }).data;\r\n  \r\n  console.dir(\"long_questions\");\r\n  console.log(long_questions);\r\n  \r\n  /*\r\n  * group the items together to make each sentence - based on https://stackoverflow.com/a/35092559/4490801\r\n  */ \r\n  var sentence_numbers = [...new Set(long_questions.map(item => item.sentence))];\r\n  \r\n  console.dir(\"howdy\");\r\n  \r\n  allQuestions = [];\r\n  sentence_numbers.forEach(function(sentence_number){\r\n    var this_sentence = long_questions.filter(row => row.sentence == sentence_number);\r\n    allQuestions.push(this_sentence);\r\n  });\r\n  \r\n  \r\n} else {\r\n  var allQuestions = [\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ],\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ]\r\n  ];\r\n \r\n}\r\n\r\n\r\n\r\nvar this_question = allQuestions[0];  \r\nvar question = this_question.map(function(sentence_part, index){\r\n  console.dir(sentence_part);\r\n  if(sentence_part.type == \"text\"){\r\n    return sentence_part[\"content\"];\r\n  } else {\r\n    sentence_part.content = sentence_part.content.split(\",\");\r\n    return \"<select class='form-control' style='width:auto'> <option>\" + sentence_part.content.join(\"</option><option>\") + \"</option> </select><br>\";\r\n  }\r\n});\r\n\r\n$(\"#sentence_html\").html(question.join(\"\"));\r\n\r\n\r\n/*\r\n\r\n\r\nvar question = allQuestions.map(function(card, index){\r\n  if(card.type == \"text\"){\r\n    return card[\"sentence\"][content];\r\n    return \"allQuestions[sentence][content]\";\r\n  } else {\r\n    return \"<select> <option>\" + card.content + \"</option> </select><br>\";\r\n  }\r\n\r\n});\r\n$(\".question_box\").html(question);\r\n*/\r\n\r\n\r\n// var currentQuestion = 0;\r\n// var question = allQuestions.map(function(card, index){\r\n//   return \"<button onClick='loadCard(this.id)' class='btn btn-primary card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.answers + \"</button><br>\";\r\n// });\r\n// $(\"#selectAnswer\").html(answers);\r\n// var this_question = allQuestions[currentQuestion][\"answers\"];\r\n// $(\".question_box\").html(this_question);\r\n\r\n</script>\r\n"
    },
    "graphic": {
      "trialtype": "",
      "trialtypes": {},
      "hovered_element": "",
      "relevant_styles": [
        "background-color",
        "border-color",
        "border-radius",
        "border-style",
        "border-width",
        "color",
        "font-size",
        "height",
        "left",
        "top",
        "width",
        "z-index"
      ],
      "files": {}
    },
    "default": {
      "webgazer": "<!--\r\n    This is based on code from OSF repository https://osf.io/jmz79/ that accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017.\r\n\r\n    Updates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a freeviewing task that works on Collector\r\n-->\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <link href=\"libraries/webgazer/css/jquery-ui.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <link href=\"libraries/webgazer/css/jquery.mobile-1.4.5.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <link href=\"libraries/webgazer/css/tolcam.css\" type=\"text/css\" rel=\"stylesheet\">\r\n    <script src=\"libraries/webgazer/js/jquery-1.12.3.min.js\"></script>\r\n    <script src=\"libraries/webgazer/js/jquery-ui.js\"></script>\r\n    <script src=\"libraries/webgazer/js/jquery.mobile-1.4.2.min.js\"></script>\r\n    <script src=\"libraries/webgazer/js/simpleheat.js\"></script>\r\n</head>\r\n<style>\r\n.stimuli_img{\r\n  width: {{image_width}};\r\n  object-fit: fill;\r\n  vertical-align: middle;\r\n  height: {{image_height}};\r\n  position: absolute;\r\n  transform: translate(-50%, 0);\r\n  left: 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n}\r\n#stimuli_fixation{\r\n\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -moz-transform: translateX(-50%) translateY(-50%);\r\n  -webkit-transform: translateX(-50%) translateY(-50%);\r\n  transform: translateX(-50%) translateY(-50%);\r\n  font-size:100px;\r\n  text-align:center;\r\n  height:150px;\r\n}\r\n#stimuli_img_left{\r\n  margin-left: {{left_position}};\r\n}\r\n#stimuli_img_right{\r\n  /* left:  75%; */\r\n  margin-left: {{right_position}};\r\n}\r\n</style>\r\n<body>\r\n  <div id=\"instruction\">\r\n    <div id=\"instruction_1\" class=\"instruction_page\">\r\n      This experiment is based on code from the OSF repository <a href=\"https://osf.io/jmz79/\" target=\"_blank\">https://osf.io/jmz79/</a> which accompanies the publication \"Online webcam-based eye tracking in cognitive science: a first look\" by Semmelmann & Weigelt, published in Behavior Research Methods in 2017. Please find the abstract and information about the code, analyses, and data below. This work is intended for scientific use only.\r\nWritten by Kilian Semmelmann, tolcam@ksemmelm.de, 2017. <br><br>\r\n\r\nUpdates by Anthony Haffey (a.haffey@reading.ac.uk) 2020 to make this a task that works on Collector.\r\n    </div>\r\n\r\n    <div id=\"instruction_2\" class=\"instruction_page\">\r\n      <h1>Webcam Setup</h1>\r\n      <br />\r\n      <div id=\"setup_after\">\r\n          You can take a short break and move your head. Before continuing, please follow the instructions noted below.<br />\r\n      </div>\r\n      <br />\r\n      Please turn off your mobile phone and close all other programs and websites. Then carefully read and follow these instructions:<br />\r\n      <img src=\"libraries/webgazer/imgs/instructions_donttilt.png\" style = \"width: 100%; margin-top: 20px; margin-bottom: 20px;\"/> <br>\r\n      If possible, please adjust your position until your face matches the picture below as much as possible:<br />\r\n      <br />\r\n      <table>\r\n        <tr>\r\n          <td>\r\n            <img style=\"height:300px;width:400px; -webkit-transform: scaleX(-1); transform:scaleX(-1);\" src=\"libraries/webgazer/imgs/ideal_pose.png\"/>\r\n          </td>\r\n          <td>\r\n            <span id=\"webcam_insert\"></span>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <br />\r\n      <div id=\"setup_first\">\r\n          This study consists of multiple five-minute parts with pauses inbetween. After you clicked \"start\", please avoid moving your head. If you move too much, the calibration can fail and you might not be able to finish the study.\r\n      </div>\r\n      <br />\r\n    </div>\r\n\r\n    <div id=\"instruction_3\" class=\"instruction_page\">\r\n      <div id=\"beforetherest\">\r\n        <h1>Proceed</h1>\r\n        <br />\r\n        Click \"Proceed\" to move onto the next trial\r\n        <button onclick=\"Phase.submit()\" class=\"btn\">Proceed</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"instruction_back\" class=\"instruction_navigation\">\r\n      <div id=\"instruction_back_text\">\r\n        &lt;\r\n      </div>\r\n    </div>\r\n    <div id=\"instruction_continue\" class=\"instruction_navigation\">\r\n      <div id=\"instruction_continue_text\">\r\n        &gt;\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"calibration_dot\" class=\"stimuli\">\r\n    <div id=\"calibration_cnt\">0</div>\r\n  </div>\r\n  <div id=\"stimulus\" class=\"stimuli\"><img src=\"libraries/webgazer/imgs/talking.jpg\" /></div>\r\n  <div id=\"stimuli_dot\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_bar\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_fixation\" class=\"stimuli\">+</div>\r\n  <div id=\"stimuli_prime\" class=\"stimuli\"></div>\r\n  <div id=\"stimuli_target\" class=\"stimuli\">X</div>\r\n  <img id=\"stimuli_img_left\" class=\"stimuli stimuli_img\"/>\r\n  <img id=\"stimuli_img_right\" class=\"stimuli stimuli_img\"/>\r\n  <div id=\"instruction_message\"></div>\r\n\r\n  <div id=\"message\">\r\n    no message\r\n  </div>\r\n\r\n  <!-- data quality info -->\r\n  <input type=\"hidden\" name=\"window_inner_height\" id=\"window_inner_height\"/>\r\n  <input type=\"hidden\" name=\"window_inner_width\"  id=\"window_inner_width\"/>\r\n  <input type=\"hidden\" name=\"fixation_rts\"        id=\"fixation_rts\"/>\r\n\r\n</body>\r\n</html>\r\n<script>\r\n\r\n\r\n\r\n//////////////////////\r\n// Borcsok variables\r\n//////////////////////\r\n\r\nvar all_fixation_rts = [];\r\n\r\nvar image_pair;\r\nPhase.set_timer(function(){\r\n  function refuse_height(){\r\n    bootbox.confirm(\"Your window height needs to be at least {{min_height}} before starting. Please make your window as big as possible before proceeding.\", function(result){\r\n      if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\r\n        refuse_height();\r\n      } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n    });\r\n  };\r\n  function refuse_width(){\r\n    bootbox.confirm(\"Your window width needs to be at least {{min_width}} before starting. Please make your window as big as possible before proceeding.\", function(result){\r\n      if(window.innerWidth < parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\r\n        refuse_width();\r\n      } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n    });\r\n  }\r\n  if(window.innerHeight < parseFloat(\"{{min_height}}\".replace(\"px\",\"\"))){\r\n    refuse_height();\r\n  } else {\r\n        $(\"#window_inner_height\").val(window.innerHeight);\r\n        $(\"#window_inner_width\").val(window.innerWidth);\r\n      }\r\n  if(window.innerWidth <  parseFloat(\"{{min_width}}\".replace(\"px\",\"\"))){\r\n    refuse_width();\r\n  } else {\r\n    $(\"#window_inner_height\").val(window.innerHeight);\r\n    $(\"#window_inner_width\").val(window.innerWidth);\r\n  }\r\n},0);\r\n\r\n\r\n//////////////////////\r\n// default settings //\r\n//////////////////////\r\n\r\nvar calibrations = \"{{calibrations}}\";\r\nvar freeview_image_file = \"{{freeview_image_file}}\".toLowerCase();\r\nvar design_type = \"{{design_type}}\";\r\nvar calibration_skip = \"{{calibration_skip}}\";\r\nvar image_height = \"{{image_height}}\";\r\nvar image_width = \"{{image_width}}\";\r\nvar left_side = \"{{left_side}}\";\r\nvar save_script = \"{{save_script}}\";\r\nvar stim_duration = \"{{stim_duration}}\";\r\nvar trials = \"{{trials}}\";\r\nvar trial_order = \"{{trial_order}}\";\r\n\r\n\r\nif(calibrations.indexOf(\"calibrations\") !== -1){\r\n  calibrations = 13;\r\n}\r\nif(calibration_skip.indexOf(\"calibration_skip\") !== -1){\r\n  calibration_skip = \"no\";\r\n}\r\nif(stim_duration.indexOf(\"stim_duration\") !== -1){\r\n  stim_duration = 2000;\r\n}\r\nif(left_side.indexOf(\"left_side\") !== -1){\r\n  left_side = \"counterbalance\";\r\n}\r\n\r\n\r\n\r\n\r\n/************************************\r\n * HELPER FUNCTIONS\r\n ************************************/\r\n/**\r\n * Shuffles array in place.\r\n * @param {Array} a items The array containing the items.\r\n * @author http://stackoverflow.com/a/2450976/4175553\r\n */\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\n/************************************\r\n * WEBCAM PARAMETERS\r\n ************************************/\r\nvar cam = {};\r\ncam.overlay = '';\r\ncam.width = 400;\r\ncam.height = 300;\r\ncam.topDist = '0px';\r\ncam.leftDist = '0px';\r\ncam.recording = 0;\r\ncam.validating = 0;\r\ncam.calibrating = 0;\r\ncam.initialized = 0;\r\n\r\n/************************************\r\n * CALIBRATION PARAMETERS\r\n ************************************/\r\nvar calibrating = 0;\r\nvar t_calibration_start;\r\nvar calibration_no = 0;\r\nvar calibration = {};\r\ncalibration.points = [];\r\ncalibration.method = \"watch\"; // click or watch\r\ncalibration.calibrations = calibrations // how many calibration dots\r\ncalibration.duration = 20; // how often does one position get sampled\r\ncalibration.instruction = 'Please look at each dot until <br /> it disappears. <br /><br />Please do not move your head,<br />only move your eyes.';\r\nif(\"{{skip_instruct}}\" == \"on\"){\r\n  calibration.instruction_duration = 0;\r\n} else {\r\n  calibration.instruction_duration = 10000;\r\n}\r\n\r\n/************************************\r\n * VALIDATION PARAMETERS\r\n ************************************/\r\nvar validating = 0;\r\nvar validation_no = 0;\r\nvar validation_current = {\"x\": 0, \"y\": 0};\r\nvar validation_attempt = 1;\r\nvar validation = {};\r\nvalidation.validations = 5;\r\nvalidation.duration = 20;\r\nvalidation.points = [];\r\nvalidation.timeout = 20000; // if no validation happens within X ms, validation will be ended and re-calibrated\r\nvalidation.attempts = 5; // how often can validation be failed PER validation\r\nvalidation.distance = 200; // offset distance in pixel to be a valid validation sample\r\n\r\n\r\n/************************************\r\n* FREEVIEW PARAMETERS\r\n*************************************/\r\nvar freeview_no = 0;\r\n\r\n\r\n/************************************\r\n * DESIGN\r\n ************************************/\r\nvar design = {};\r\nvar block_no = 0;\r\nvar trial_no = 0;\r\n\r\neyetrack_designs = {\r\n  freeview:   {'type': 'freeview', 'trials': trials, 'iti': 500, 'instruction': '{{text}}', 'instruction_duration': 10000},\r\n  simple: {'type': 'simple', 'trials': 24, 'iti': 500, 'instruction': 'Please look at the cross.<br />When the dot appears, please look at it.<br /><br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 5000},\r\n  pursuit: {'type': 'pursuit', 'trials': 24, 'iti': 500, 'instruction': 'A black dot will appear. Please <br />look at it. When it turns <span style=\"color: #dd494b;\">red</span>,<br /> Please follow its movement with your eyes.<br /><br />Do not move your head, <br />only use your eyes.', 'instruction_duration': 7000},\r\n\r\n}\r\n\r\nif(\"{{skip_instruct}}\" == \"on\"){\r\n  eyetrack_designs.freeview.instruction_duration = 0;\r\n}\r\n\r\n\r\ndesign.blocks = [\r\n  eyetrack_designs[[\"{{design_type}}\"]]\r\n];\r\n\r\n//design.blocks = shuffle(design.blocks);\r\ndesign.blocks_randomized = 1; // shall the blocks be shuffled?\r\ndesign.trials_randomized = 1; // same for trials\r\ndesign.calibrate = \"high\";\r\ndesign.recalibrate = 1;\r\n\r\n\r\n\r\n/************************************\r\n * DATA VARIABLES\r\n ************************************/\r\nvar data = [];\r\nvar data_current = {};\r\nvar status = '-';\r\n\r\n/**\r\ndata.design = jQuery.extend(true, {}, design);\r\n **/\r\n\r\n/************************************\r\n * SET UP WEBGAZER\r\n ************************************/\r\nfunction loadWebgazer() {\r\n  $('canvas').remove();\r\n  cam.initialized = 0;\r\n  $.getScript( \"libraries/webgazer/js/webgazer_old.js\" )\r\n    .done(function( script, textStatus ) {\r\n      initializeWebgazer();\r\n      $('#message').html('Please allow for access on your Webcam on the top part of the screen. <br /><br />Remember: We will NOT transmit your video, but only process it locally and transmit numbers to our server.').show();\r\n    })\r\n    .fail(function( jqxhr, settings, exception ) {\r\n      $( \"div.log\" ).text( \"Triggered ajaxError handler.\" );\r\n    });\r\n}\r\n\r\n\r\nfunction initializeWebgazer() {\r\n\r\n  //webgazer.clearData()\r\n  webgazer.setRegression('ridge') /* currently must set regression and tracker */\r\n    .setTracker('clmtrackr')\r\n    .setGazeListener(function(d, clock) {\r\n      //console.log(data); /* data is an object containing an x and y key which are the x and y prediction coordinates (no bounds limiting) */\r\n      //console.log(clock); /* elapsed time in milliseconds since webgazer.begin() was called */\r\n      if (d !== null) {\r\n\r\n        if (cam.calibrating == 1) {\r\n            var $cd = $('#calibration_dot');\r\n            var cx = parseInt(Math.round($cd.offset().left));\r\n            var cy = parseInt(Math.round($cd.offset().top));\r\n            var cp = d;\r\n            var dist = Math.sqrt(((cp.x - cx) * (cp.x - cx)) + ((cp.y - cy) * (cp.y - cy)));\r\n            var c = $('#calibration_cnt').html();\r\n            data_current.raw.push({'time': clock, 'x': cp.x, 'y': cp.y, 'cx': cx, 'cy': cy, 'dist': dist, 'c': c});\r\n        }\r\n\r\n\r\n        if (cam.validating == 1) {\r\n            // see whether dx and dy are within 100px radius of target\r\n            var dist = parseInt(Math.sqrt(((d.x - validation_current.x) * (d.x - validation_current.x)) + ((d.y - validation_current.y) * (d.y - validation_current.y))));\r\n            var c = parseInt($('#calibration_cnt').html());\r\n            if (dist < validation.distance) {\r\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 1});\r\n                if (c < calibration.duration) {\r\n                    $('#calibration_cnt').html(++c);\r\n                } else {\r\n                    cam.validating = 0;\r\n                    clearTimeout(t);\r\n                    $('#calibration_dot').hide();\r\n                    validation_no++;\r\n                    saveData();\r\n                    setTimeout(\"validate();\", 500);\r\n                }\r\n            } else {\r\n                data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'vx': validation_current.x, 'vy': validation_current.y, 'dist': dist, 'c': c, 'valid': 0});\r\n            }\r\n        }\r\n\r\n        if (cam.recording == 1) {\r\n            var tx = -1;\r\n            var ty = -1;\r\n            if (data_current.task == \"simple\" || data_current.task == \"pursuit\") {\r\n                var $sd = $('#stimuli_dot');\r\n                var tx = parseInt(Math.round($sd.offset().left));\r\n                var ty = parseInt(Math.round($sd.offset().top));\r\n            }\r\n            data_current.raw.push({'time': clock, 'x': d.x, 'y': d.y, 'tx': tx, 'ty': ty, 'status': status});\r\n            //console.log(data.trials[trial_no].raw.length + ' ' + d.x + ' ' + d.y);\r\n        }\r\n      }\r\n    })\r\n    .begin()\r\n    .showPredictionPoints(false); /* shows a square every 100 milliseconds where current prediction is */\r\n\r\n  cl = webgazer.getTracker().clm;\r\n\r\n  checkWebgazer();\r\n}\r\n\r\n\r\nfunction checkWebgazer() {\r\n  if (webgazer.isReady()) {\r\n    console.log('webgazer is ready.');\r\n    initializeCam();\r\n  } else {\r\n    setTimeout(checkWebgazer, 100);\r\n  }\r\n}\r\n\r\n/************************************\r\n * SET UP WEBCAM\r\n ************************************/\r\nfunction initializeCam() {\r\n  var video = document.getElementById('webgazerVideoFeed');\r\n  video.style.display = 'block'; // block\r\n  video.style.position = 'relative';\r\n  video.width = cam.width;\r\n  video.height = cam.height;\r\n  video.style.margin = '0px';\r\n  $('#webgazerVideoFeed').css({\r\n    'left': '50%',\r\n    '-webkit-transform': 'scaleX(-1)',\r\n    'transform': 'scaleX(-1) translate(50%, 0)',\r\n    'margin': '20px'\r\n  }).detach().insertAfter('#webcam_insert').get(0).play();\r\n\r\n  webgazer.params.imgWidth = cam.width;\r\n  webgazer.params.imgHeight = cam.height;\r\n\r\n  cam.overlay = document.getElementById('overlay');\r\n  if (cam.overlay === null) {\r\n      cam.overlay = document.createElement('canvas');\r\n      cam.overlay.id = 'overlay';\r\n      document.body.appendChild(cam.overlay);\r\n  }\r\n  cam.overlay.style.position = 'absolute';\r\n  cam.overlay.width = cam.width;\r\n  cam.overlay.height = cam.height;\r\n  cam.overlay.style.top = cam.topDist;\r\n  cam.overlay.style.left = cam.leftDist;\r\n  cam.overlay.style.margin = '0px';\r\n\r\n  cam.initialized = 1;\r\n\r\n  $('#message').html('Webcam access successful.').delay(1000).fadeOut(1000);\r\n  $(\"#instruction_continue\").show();\r\n  parent.parent.requestFullScreen(parent.parent.document.documentElement);\r\n}\r\n\r\n/************************************\r\n * START BLOCKS\r\n ************************************/\r\nfunction prepareBlock() {\r\n  if (cam.initialized == 1) {\r\n    if (block_no < design.blocks.length) {\r\n      trial_no = 0;\r\n\r\n      webgazer.resume();\r\n      if (design.recalibrate == 1 || block_no == 0) {\r\n        $('#instruction_message').html(calibration.instruction).show();\r\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", calibration.instruction_duration);\r\n        setTimeout(\"startCalibration();\", design.blocks[block_no].instruction_duration + 2000);\r\n      } else {\r\n        $('#instruction_message').html(design.blocks[block_no].instruction).show();\r\n        setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\r\n        setTimeout(\"preparePhase();\", design.blocks[block_no].instruction_duration + 2000);\r\n      }\r\n    } else {\r\n      endExperiment();\r\n    }\r\n  } else {\r\n    setTimeout(\"prepareBlock();\", 500);\r\n  }\r\n}\r\n\r\n\r\n/************************************\r\n * CALIBRATE\r\n ************************************/\r\nfunction startCalibration() {\r\n  if(calibration_skip == \"skip\" ||\r\n     calibration_skip == \"on\"  ||\r\n     calibration_skip == \"yes\" ||\r\n     calibration_skip == \"true\"){\r\n    endValidation()\r\n  } else {\r\n    $('.stimuli').hide();\r\n    $('#calibration_dot').hide();\r\n    if (block_no == 0) {\r\n        $('#calibration_dot').click(function() {\r\n            calibrateHit();\r\n        });\r\n    }\r\n    calibration_no = 0;\r\n    //webgazer.clearData();\r\n    window.localStorage.clear();\r\n    //webgazer.begin();\r\n    t_calibration_start = new Date().getTime();\r\n    calibrate();\r\n  }\r\n}\r\n\r\nvar gaze_phase = \"unknown\";\r\n\r\nfunction calibrate() {\r\n  gaze_phase = \"calibrate\";\r\n  clearTimeout(t);\r\n  if (calibration_no < calibration.calibrations) {\r\n    $('#calibration_cnt').html(calibration.duration);\r\n    $c = $('#calibration_dot');\r\n    //var c = Math.floor(Math.random() * calibration.points.length);\r\n    //var p = calibration.points.splice(c, 1)[0];\r\n    if (calibration.points.length == 0) {\r\n\r\n      /*\r\n      * allocate calibration by pixels rather than percentages\r\n      */\r\n\r\n      var min_width\t   = \"{{min_width}}\".replace(\"px\",\"\");                          // e.g. 1000px in Borcsok et al., (2020)\r\n      var min_height   = \"{{min_height}}\".replace(\"px\",\"\");                         // e.g. 400px  in Borcsok et al., (2020)\r\n      var mid_screen_x = window.innerWidth / 2;\r\n      var mid_screen_y = window.innerHeight / 2;\r\n\r\n      calibration.points = shuffle([\r\n\r\n        {\r\n          position: \"middle\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"top\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"bottom\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"left\",\r\n          x: mid_screen_x - min_width/2 * .9,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"right\",\r\n          x: mid_screen_x + min_width/2 * .9,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"outer-top-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-top-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"outer-bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"inner-top-left\",\r\n          x: mid_screen_x - min_width/2  * .45,\r\n          y: mid_screen_y - min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-top-right\",\r\n          x: mid_screen_x + min_width/2  * .45,\r\n          y: mid_screen_y - min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .45,\r\n          y: mid_screen_y + min_height/2 * .45\r\n        },\r\n        {\r\n          position: \"inner-bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .45,\r\n          y: mid_screen_y + min_height/2 * .45\r\n        }\r\n      ]);\r\n\r\n\r\n\r\n\r\n      /*\r\n      the original code focusing on percentages\r\n\r\n      calibration.points = shuffle([\r\n          {x: \"20%\", y: \"20%\"},\r\n          {x: \"50%\", y: \"20%\"},\r\n          {x: \"80%\", y: \"20%\"},\r\n          {x: \"20%\", y: \"50%\"},\r\n          {x: \"50%\", y: \"50%\"},\r\n          {x: \"80%\", y: \"50%\"},\r\n          {x: \"20%\", y: \"80%\"},\r\n          {x: \"50%\", y: \"80%\"},\r\n          {x: \"80%\", y: \"80%\"},\r\n          {x: \"35%\", y: \"35%\"},\r\n          {x: \"65%\", y: \"35%\"},\r\n          {x: \"35%\", y: \"65%\"},\r\n          {x: \"65%\", y: \"65%\"}\r\n      ]);\r\n      */\r\n    }\r\n    var p = calibration.points.pop();\r\n    $c.css({\r\n        'left' : p.x,\r\n        'top' : p.y\r\n    });\r\n\r\n    data_current = {\r\n        'type': 'calibration',\r\n        'block': block_no,\r\n        'trial': calibration_no,\r\n        'x': p.x,\r\n        'y': p.y,\r\n        'raw': []\r\n    };\r\n\r\n    cam.calibrating = 1;\r\n    $c.show();\r\n    if (calibration.method == 'watch') {\r\n      t = setTimeout(\"autoCalibration();\", 750);\r\n    }\r\n  } else {\r\n    endCalibration();\r\n  }\r\n}\r\n\r\nfunction calibrateHit() {\r\n  var c = $('#calibration_cnt').html();\r\n  /*\r\n  if ($('#webgazerVideoFeed').css('display') == 'block') {\r\n      $('#webgazerVideoFeed').css({\r\n          top: cam.topDist,\r\n          left: cam.leftDist,\r\n          display: 'none',\r\n          transform: '0'\r\n      });\r\n  }*/\r\n  if (c > 1 && cam.calibrating == 1) {\r\n    $('#calibration_cnt').html(--c);\r\n    if (calibration.method == \"watch\") {\r\n      t = setTimeout(\"autoCalibration();\", 100);\r\n      //requestAnimationFrame(autoCalibration);\r\n    }\r\n  } else {\r\n    $('#calibration_cnt').html(9999);\r\n    clearTimeout(t);\r\n    cam.calibrating = 0;\r\n    $('#calibration_dot').hide();\r\n    calibration_no++;\r\n    saveData();\r\n    calibrate();\r\n  }\r\n  return false;\r\n}\r\n\r\nvar t;\r\nfunction autoCalibration() {\r\n  calibrateLog();\r\n  if (cam.calibrating == 1) {\r\n    calibrateHit();\r\n  }\r\n}\r\n\r\nfunction calibrateLog() {\r\n  var $cd = $('#calibration_dot');\r\n  var cx = parseInt(Math.round($cd.offset().left));\r\n  var cy = parseInt(Math.round($cd.offset().top));\r\n  webgazer.watchListener(cx, cy);\r\n}\r\n\r\n\r\nfunction endCalibration() {\r\n  clearTimeout(t);\r\n  $('#calibration_dot').unbind(\"click\");\r\n  startValidation();\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * VALIDATE\r\n ************************************/\r\nfunction startValidation() {\r\n  validation_no = 0;\r\n  validate();\r\n}\r\n\r\nfunction validate() {\r\n  gaze_phase = \"validate\";\r\n  clearTimeout(t);\r\n  if (validation_no < validation.validations) { // if we there are validations left\r\n    $('#calibration_cnt').html(0);\r\n    var $c = $('#calibration_dot');\r\n\r\n    if (validation.points.length == 0) {\r\n\r\n      /*\r\n      * allocate positions by pixels rather than percentages\r\n      */\r\n\r\n      var min_width\t   = \"{{min_width}}\".replace(\"px\",\"\");                          // e.g. 1000px in Borcsok et al., (2020)\r\n      var min_height   = \"{{min_height}}\".replace(\"px\",\"\");                         // e.g. 400px  in Borcsok et al., (2020)\r\n      var mid_screen_x = window.innerWidth / 2;\r\n      var mid_screen_y = window.innerHeight / 2;\r\n\r\n      validation.points = shuffle([\r\n        {\r\n          position: \"top-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"top-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y - min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"middle\",\r\n          x: mid_screen_x,\r\n          y: mid_screen_y\r\n        },\r\n        {\r\n          position: \"bottom-left\",\r\n          x: mid_screen_x - min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n        {\r\n          position: \"bottom-right\",\r\n          x: mid_screen_x + min_width/2  * .9,\r\n          y: mid_screen_y + min_height/2 * .9\r\n        },\r\n      ]);\r\n\r\n\r\n\r\n      /*\r\n      original validation positions\r\n\r\n      validation.points = shuffle([\r\n          {x: \"20%\", y: \"20%\"},\r\n          {x: \"80%\", y: \"20%\"},\r\n          {x: \"50%\", y: \"50%\"},\r\n          {x: \"20%\", y: \"80%\"},\r\n          {x: \"80%\", y: \"80%\"}\r\n                                    ]);\r\n      */\r\n    }\r\n    var vp = validation.points.pop();\r\n    $c.css({\r\n        'left' : vp.x,\r\n        'top' : vp.y\r\n    });\r\n    $c.show();\r\n    validation_current.x = Math.round($c.offset().left);\r\n    validation_current.y = Math.round($c.offset().top);\r\n\r\n    data_current = {\r\n      'type': 'validation',\r\n      'block': block_no,\r\n      'trial': validation_no,\r\n      'x': validation_current.x,\r\n      'y': validation_current.y,\r\n      'raw': []\r\n    };\r\n    cam.validating = 1;\r\n    t = setTimeout(\"validateFail();\", validation.timeout);\r\n    //t = setTimeout('validation = 0;', 3000);\r\n  } else {\r\n    endValidation();\r\n  }\r\n}\r\n\r\nfunction validateFail() {\r\n  data_current.type = 'validationfail';\r\n  data_current.attempt = validation_attempt;\r\n  saveData();\r\n\r\n\r\n  cam.validating = 0;\r\n  webgazer.pause();\r\n\r\n  $('.stimuli').hide();\r\n  if (validation_attempt >= validation.attempts) {\r\n      $('#message').html('Unforuntately, the calibration failed too many times. Therefore, you can not participate in this study. Please contact <a href=\"mailto:kilian.semmelmann@rub.de\">kilian.semmelmann@rub.de</a> if you have any questions. Thanks for your interest.').show();\r\n  } else {\r\n      validation_attempt++;\r\n      $('#message').html('The calibration failed. <br />Please follow the instructions and try again (try ' + (validation_attempt) + ' of ' + validation.attempts + ').').show().delay(5000).fadeOut(1000);\r\n      $('#instruction').show();\r\n  }\r\n  // TOOD: log validation-fail\r\n}\r\n\r\nfunction endValidation() {\r\n  cam.validating = 0\r\n  validation_attempt = 1;\r\n  webgazer.pause();\r\n  $('#instruction_message').html(design.blocks[block_no].instruction).show();\r\n  setTimeout(\"$('#instruction_message').fadeOut(1000);\", design.blocks[block_no].instruction_duration);\r\n  setTimeout(\"preparePhase();\", design.blocks[block_no].instruction_duration + 2000);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * START EXPERIMENT\r\n ************************************/\r\nvar t_trial_start;\r\nfunction preparePhase() {\r\n    status = \"prepare\";\r\n    $('.stimuli').hide();\r\n    data_current = {\r\n        'type': 'trial',\r\n        'block': block_no,\r\n        'trial': trial_no,\r\n        'raw': []\r\n    };\r\n    webgazer.resume();\r\n    startPhase();\r\n}\r\n\r\n\r\nfunction startPhase() {\r\n  t_trial_start = new Date().getTime();\r\n  $('#stimuli_fixation').show();\r\n  status = \"fixation_onset\";\r\n  // use start function of block-type name\r\n  var fn = design.blocks[block_no].type+\"Start\";\r\n  window[fn]();\r\n}\r\n\r\n\r\nvar heat;\r\nfunction endPhase() {\r\n  clearTimeout(t);\r\n  cam.recording = 0;\r\n  webgazer.pause();\r\n  status = \"end\";\r\n  $('.stimuli').hide();\r\n  trial_no++;\r\n  saveData();\r\n\r\n  if (trial_no < design.blocks[block_no].trials) {\r\n    setTimeout(\"preparePhase();\", design.blocks[block_no].iti);\r\n  } else {\r\n    block_no++;\r\n    if (block_no < design.blocks.length) {\r\n      window.localStorage.clear();\r\n      webgazer.clearData();\r\n      //loadWebgazer();\r\n      //prepareBlock();\r\n      navigation('pause');\r\n    } else {\r\n      endExperiment();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction saveData() {\r\n\r\n\r\n  /*\r\n  * did the participant pass validation?\r\n  */\r\n  //data_current\r\n\r\n\r\n  /*\r\n  * change file name depending on whether it's calibration, validation or main trial?\r\n  * add calibration / validation / freeview number\r\n  */\r\n\r\n  var sub_trial_no = -1;\r\n  switch(gaze_phase){\r\n    case \"calibration\":\r\n      sub_trial_no = calibration_no;\r\n      break;\r\n    case \"validate\":\r\n      sub_trial_no = validation_no;\r\n\r\n      /*\r\n      * did the participant pass? (assuming this is validation)\r\n      */\r\n      var valid_rows = 0;\r\n\r\n      data_current.raw.forEach(function(row){\r\n        valid_rows += row.valid;\r\n      });\r\n\r\n      break;\r\n    case \"freeview\":\r\n      sub_trial_no = freeview_no;\r\n      break;\r\n\r\n  }\r\n\r\n\r\n\r\n  data_current.raw = data_current.raw.map(function(row){\r\n    row.x = row.x - window.innerWidth/2;\r\n    row.y = row.y - window.innerHeight/2;\r\n\r\n    if(typeof(image_pair) !== \"undefined\"){\r\n      Object.keys(image_pair).forEach(function(key){\r\n        row[key] = image_pair[key];\r\n      });\r\n    }\r\n    row.screen_width  = screen.width;\r\n    row.screen_height = screen.height;\r\n    row.window_width  = window.innerWidth;\r\n    row.window_height = window.innerHeight;\r\n    row.trial_no      = sub_trial_no;\r\n\r\n    if(valid_rows > 19){\r\n      row.valid_trial = true;\r\n    } else {\r\n      row.valid_trial = false;\r\n    }\r\n\r\n    /*\r\n\r\n    did the participant pass? (assuming this is validation)\r\n\r\n    */\r\n\r\n\r\n    //row.left_image  = image_pair.image_1;\r\n    //row.right_image = image_pair.image_2;\r\n\r\n    return row;\r\n  });\r\n\r\n  data.push(data_current);\r\n  data_current = {};\r\n  sendData();\r\n}\r\n\r\n\r\nfunction sendData() {\r\n\r\n  var sub_trial_no = -1;\r\n  switch(gaze_phase){\r\n    case \"calibration\":\r\n      sub_trial_no = calibration_no;\r\n      break;\r\n    case \"validate\":\r\n      sub_trial_no = validation_no;\r\n      break;\r\n    case \"freeview\":\r\n      sub_trial_no = freeview_no;\r\n      break;\r\n  }\r\n\r\n  switch(parent.parent.Study.get_vars.platform){\r\n    case \"preview\":\r\n      //do nothing\r\n      break;\r\n    case \"localhost\":\r\n      console.dir(\"data\");\r\n      console.dir(data);\r\n      data.forEach(function(trial,trial_no){\r\n        if (trial !== null){\r\n          parent.parent.Collector.electron.fs.write_data(\r\n            parent.parent.Study.get_vars.location,\r\n            parent.parent.$(\"#participant_code\").val() + \"-\" +\r\n              gaze_phase                               + \"-\" +\r\n              trial_no                                 + \"-\" +\r\n              sub_trial_no                             + \".csv\",\r\n            Papa.unparse(data[trial_no].raw)\r\n          );\r\n\r\n                                      /*\r\n\r\n                                      error above\r\n\r\n                                      */\r\n\r\n\r\n\r\n           parent.parent.online_save(parent.parent.Study.get_vars.location,\r\n                    parent.parent.$(\"#participant_code\").val() +\r\n                      gaze_phase +\r\n                      \"-\" +\r\n                      trial_no +\r\n                      \"-\" +\r\n                      sub_trial_no,\r\n                      \"-trial-\" +\r\n                      parent.parent.project_json.trial_no +\r\n                      \"-\" +\r\n                      trial_no,\r\n                    parent.parent.$(\"#completion_code\").val(),\r\n                    parent.parent.$(\"#prehashed_code\").val(),\r\n                    Papa.unparse(data[trial_no].raw),          //the data\r\n          save_script.split(\"|\"),\r\n          function(){\r\n            parent.parent.online_data_obj.saves_ended ++;\r\n          });\r\n          data[trial_no] = null;\r\n        }\r\n      });\r\n      break;\r\n    default:\r\n      data.forEach(function(trial,trial_no){\r\n          if (trial !== null){\r\n                     parent.parent.online_save(parent.parent.Study.get_vars.location,\r\n                      parent.parent.$(\"#participant_code\").val() +\r\n                        \"-\" + gaze_phase +\r\n                        \"-trial-\" +\r\n                        parent.parent.project_json.trial_no +\r\n                        \"-\" +\r\n                        trial_no +\r\n                        \"-\" +\r\n                        sub_trial_no,\r\n                      parent.parent.$(\"#completion_code\").val(),\r\n                      parent.parent.$(\"#prehashed_code\").val(),\r\n                      Papa.unparse(data[trial_no].raw),          //the data\r\n            save_script.split(\"|\"),\r\n            function(){\r\n              parent.parent.online_data_obj.saves_ended ++;\r\n            });\r\n            data[trial_no] = null;\r\n          }\r\n        });\r\n\r\n        break;\r\n  }\r\n}\r\n\r\n\r\nfunction endExperiment() {\r\n  Phase.submit();\r\n}\r\n\r\n\r\n/************************************\r\n * SIMPLE DOT VIEWING PARADIGM\r\n * If you want to introduce your own paradigms, follow the same structure and extend the design array above.\r\n ************************************/\r\nvar tSimple = {};\r\ntSimple.positions = [];\r\nfunction simpleStart() {\r\n    // if we don't have dot-positions any more, refill the array\r\n    if (tSimple.positions.length == 0) {\r\n        tSimple.positions = shuffle([\r\n            {x: \"20%\", y: \"20%\"},\r\n            {x: \"50%\", y: \"20%\"},\r\n            {x: \"80%\", y: \"20%\"},\r\n            {x: \"20%\", y: \"50%\"},\r\n            {x: \"80%\", y: \"50%\"},\r\n            {x: \"20%\", y: \"80%\"},\r\n            {x: \"50%\", y: \"80%\"},\r\n            {x: \"80%\", y: \"80%\"}\r\n        ]);\r\n    }\r\n    var pos = tSimple.positions.pop();\r\n    $('#stimuli_dot').css({\r\n        'top': pos.y,\r\n        'left': pos.x\r\n    });\r\n    data_current.task = 'simple';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'dot_' + pos.x + '_' + pos.y;\r\n\r\n    cam.recording = 1;\r\n    setTimeout('$(\"#stimuli_fixation\").hide(); status = \"fixation_offset\";', 1500);\r\n    setTimeout('simpleShowdot();', 2000);\r\n}\r\n\r\nfunction simpleShowdot() {\r\n    status = \"stimulus_onset\";\r\n    $(\"#stimuli_dot\").show();\r\n    setTimeout('status = \"stimulus_offset\"; endPhase();',  2000);\r\n}\r\n\r\n\r\n/************************************\r\n * POSNER VIEWING PARADIGM\r\n ************************************/\r\nfunction posnerStart() {\r\n    var p = Math.random() >= 0.5 ? '&gt;&gt;&gt;' : '&lt;&lt;&lt;';\r\n    $('#stimuli_prime').html(p);\r\n\r\n    var t = Math.random() >= 0.5 ? 'X' : 'N';\r\n    $('#stimuli_target').html(t);\r\n\r\n    var cond = Math.random() >= 0.7 ? 'incongruent' : 'congruent';\r\n\r\n    var tpos = 'left';\r\n    if ((cond == 'incongruent' && p == '&lt;&lt;&lt;') || ((cond == 'congruent' && p == '&gt;&gt;&gt;'))) {\r\n        tpos = 'right';\r\n    }\r\n\r\n    var pos = {};\r\n    if (tpos == 'left') {\r\n        pos.x = '20%';\r\n        pos.y = '30%';\r\n    } else {\r\n        pos.x = '80%';\r\n        pos.y = '30%';\r\n    }\r\n\r\n\r\n    $('#stimuli_target').css({\r\n        'top': pos.x,\r\n        'left': pos.y\r\n    });\r\n\r\n\r\n    data_current.task = 'posner';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'posner_' + pos.x + '_' + pos.y + '_' + tpos;\r\n\r\n    cam.recording = 1;\r\n    setTimeout(\"$('#stimuli_fixation').hide();\", 1000);\r\n    setTimeout('posnerShowprime();', 1500);\r\n}\r\n\r\nfunction posnerShowprime() {\r\n    $('#stimuli_prime').show();\r\n    setTimeout(\"posnerShowTarget();\", 300);\r\n}\r\n\r\nfunction posnerShowTarget() {\r\n    $('#stimuli_prime').hide();\r\n    $('#stimuli_target').show();\r\n    setTimeout(\"endPhase();\", 1500);\r\n}\r\n\r\n\r\n/************************************\r\n * SMOOTH PURSUIT PARADIGM\r\n ************************************/\r\nvar tPursuit = {};\r\nfunction pursuitStart() {\r\n    $('#stimuli_fixation').hide();\r\n    var pos_possible = shuffle([\r\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\r\n        {x: \"20%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"20%\", tx: \"20%\", ty: \"80%\"},\r\n        {x: \"80%\", y: \"20%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"20%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"20%\", y: \"80%\", tx: \"80%\", ty: \"80%\"},\r\n\r\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"80%\", tx: \"80%\", ty: \"20%\"},\r\n        {x: \"80%\", y: \"80%\", tx: \"20%\", ty: \"80%\"}\r\n    ]);\r\n    var pos = pos_possible[0];\r\n    $s = $('#stimuli_dot');\r\n    $s.css({\r\n        'top': pos.y,\r\n        'left': pos.x\r\n    });\r\n\r\n    $s.css({\r\n        'background-color': '#000'\r\n    });\r\n\r\n\r\n    data_current.task = 'pursuit';\r\n    data_current.x = pos.x;\r\n    data_current.y = pos.y;\r\n    data_current.condition = 'pursuit_' + pos.x + '_' + pos.y + '_' + pos.tx + '_' + pos.ty;\r\n\r\n    cam.recording = 1;\r\n    $s.show();\r\n    setTimeout(function() {\r\n        status = \"pursuit_start\";\r\n        $('#stimuli_dot').css({\r\n            'background-color': '#dd494b'\r\n        }).animate({ \"left\": pos.tx, \"top\": pos.ty },\r\n            2000,\r\n            'linear',\r\n        function() {\r\n            status = \"pursuit_end\";\r\n            setTimeout(\"endPhase();\", 500);\r\n        });\r\n    }, 1500);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * FREE VIEWING PARADIGM\r\n ************************************/\r\nvar tFreeview = {};\r\n\r\n\r\ntFreeview.stimuli = [];\r\n\r\n\r\n\r\nfunction process_freeview_image_file(){\r\n  console.dir(\"tFreeview\");\r\n  console.dir(tFreeview);\r\n  if(trial_order == \"random\"){\r\n    tFreeview.stimuli = shuffle(tFreeview.stimuli);\r\n  }\r\n\r\n\r\n  if(left_side == \"random\"){\r\n    for(var i = 0; i < tFreeview.stimuli.length; i++){\r\n      [left_image,right_image] = shuffle([tFreeview.stimuli[i].image_1,\r\n                                          tFreeview.stimuli[i].image_2]);\r\n      tFreeview.stimuli[i].image_1 = left_image;\r\n      tFreeview.stimuli[i].image_2 = right_image;\r\n    }\r\n  } else if(left_side == \"equal\" | left_side == \"counterbalance\"){\r\n    // select indexes to swap left and right for half the indexes\r\n    // all indexes:\r\n    var indexes = Array.from({length:tFreeview.stimuli.length},(v,k)=>k);\r\n        indexes = shuffle(indexes);\r\n\r\n    //assign the first half left to right\r\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){          //this will only loop through half of the randomised indexes\r\n      var this_index = indexes[i];\r\n      var right_image = tFreeview.stimuli[this_index].image_1;\r\n      var left_image = tFreeview.stimuli[this_index].image_2;\r\n      tFreeview.stimuli[this_index].image_1 = left_image;\r\n      tFreeview.stimuli[this_index].image_2 = right_image;\r\n    }\r\n  } else if(left_side == \"image_1\"){\r\n    // do nothing\r\n  } else if(left_side == \"image_2\"){\r\n    for(var i = 0; i < Math.floor(tFreeview.stimuli.length / 2); i++){\r\n      var right_image = tFreeview.stimuli[i].image_1;\r\n      var left_image = tFreeview.stimuli[i].image_2;\r\n      tFreeview.stimuli[i].image_1 = left_image;\r\n      tFreeview.stimuli[i].image_2 = right_image;\r\n    }\r\n  } else {\r\n    alert(\"there's a problem in the 'left_side' column - fix this before testing.\");\r\n  }\r\n};\r\n\r\n//check if the freeview file matches one of the stimuli files\r\nif(typeof(parent.parent.project_json.all_stims[freeview_image_file]) !== \"undefined\"){\r\n  var freeview_contents = parent.parent.project_json.all_stims[freeview_image_file];\r\n  var freeview_clean    = freeview_contents.map(function(row){\r\n    return row.filter(item => item !== null);\r\n  });\r\n  tFreeview.stimuli = Papa.parse(Papa.unparse(freeview_clean),{\r\n    header:true,\r\n    skipEmptyLines:true\r\n  }).data;\r\n  process_freeview_image_file();\r\n} else {\r\n  if(freeview_image_file.toLowerCase().indexOf(\"https://\") == -1){\r\n    freeview_image_file = \"../User/\" + freeview_image_file;\r\n  }\r\n  $.get(freeview_image_file,function(result){\r\n    tFreeview.stimuli = Papa.parse(result,{\r\n      header:true,\r\n      skipEmptyLines:true\r\n    }).data;\r\n    process_freeview_image_file();\r\n  });\r\n}\r\n\r\nimages_loaded = 0;\r\n\r\n\r\nfunction freeviewStart() {\r\n  gaze_phase = \"freeview\";\r\n  function freeview_loaded(left_image, right_image){\r\n    freeview_no++;\r\n    data_current.task = 'freeviewing';\r\n    data_current.x = $('#stimuli_img_left').css('left');\r\n    data_current.y = \"0%\";\r\n    data_current.condition = 'view_' + left_image + '_' + right_image;\r\n\r\n    cam.recording = 1;\r\n    setTimeout(function(){\r\n      status = 'fixation_flash';\r\n      $('#stimuli_fixation').css(\"color\",\"red\");\r\n    }, 1000);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"black\");\r\n    }, 1250);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"red\");\r\n    }, 1500);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').css(\"color\",\"black\");\r\n    }, 1750);\r\n    setTimeout(function(){\r\n      $('#stimuli_fixation').hide();\r\n      status = 'fixation_offset';\r\n\r\n    }, 2000);\r\n    setTimeout(function(){\r\n\r\n      all_fixation_rts.push()\r\n      freeviewShow();\r\n    },2500);\r\n  }\r\n\r\n  document.body.style.cursor = 'none';\r\n\r\n\r\n  image_pair = tFreeview.stimuli.shift();\r\n\r\n  [left_image,right_image] = [image_pair.image_1,image_pair.image_2];\r\n\r\n  /*\r\n  * Some code to make this work on installed version of Collector\r\n  */\r\n  switch(parent.parent.Study.get_vars.platform){\r\n    case \"preview\":\r\n    case \"localhost\":\r\n      left_image = \"../../\" + left_image;\r\n      right_image = \"../../\" + right_image;\r\n      break;\r\n  }\r\n\r\n  var baseline_time = new Date().getTime();\r\n\r\n\r\n  // Make sure the images are loaded before going past fixation\r\n  /////////////////////////////////////////////////////////////\r\n\r\n  $(\"#stimuli_img_left\").off(\"load\");\r\n  $(\"#stimuli_img_right\").off(\"load\");\r\n  $(\"#stimuli_img_left\").attr(\"src\" , left_image);\r\n  $(\"#stimuli_img_right\").attr(\"src\" , right_image);\r\n\r\n  images_loaded = 0;\r\n\r\n  $(\"#stimuli_img_left\").on(\"load\",function(){\r\n    images_loaded = images_loaded + 1;\r\n    if(images_loaded == 2){\r\n      freeview_loaded(left_image, right_image);\r\n    }\r\n  });\r\n\r\n  $(\"#stimuli_img_right\").on(\"load\",function(){\r\n    images_loaded = images_loaded + 1;\r\n    if(images_loaded == 2){\r\n      freeview_loaded(left_image, right_image);\r\n    }\r\n  });\r\n}\r\n\r\nfunction freeviewShow() {\r\n  status = 'stimulus_onset';\r\n  $('#stimuli_img_left').show();\r\n  $('#stimuli_img_right').show();\r\n  setTimeout(\"status = 'stimulus_offset'; endPhase();\", stim_duration);\r\n}\r\n\r\n\r\n\r\n/************************************\r\n * GENERATE AND SHOW HEATMAP\r\n ************************************/\r\nfunction heatmap() {\r\n    // preprocess data for heatmap\r\n    var bins = []; // create bins and fill them\r\n    for (var y = 0; y < window.innerHeight; y++) {\r\n        for (var x = 0; x < window.innerWidth; x++) {\r\n            bins.push([x, y, 0]);\r\n        }\r\n    }\r\n    // sort fixations into bins and get max\r\n    var max = 0;\r\n    for (var i = 0; i < data[data.length - 1].raw.length; i++) {\r\n        var d = data[data.length - 1].raw[i];\r\n        var dx = Math.round(d.x);\r\n        var dy = Math.round(d.y);\r\n        var pos = (dy * window.innerWidth) + dx;\r\n        if (pos <= bins.length && pos >= 0) {\r\n            bins[pos][2] += 1;\r\n            if (bins[pos][2] > max) {\r\n                max = bins[pos][2];\r\n            }\r\n        } else {\r\n            console.log('dropped ' + pos);\r\n        }\r\n    }\r\n\r\n    // remove empty bins\r\n    var binsc = [];\r\n    for (var i = 0; i < bins.length; i++) {\r\n        if (bins[i][2] != 0) {\r\n            binsc.push(bins[i]);\r\n        }\r\n    }\r\n\r\n    // create heatmap\r\n    $('body').append(\"<canvas id=\\\"heatmap\\\"></canvas>\");\r\n    $('#heatmap').attr('width', window.innerWidth);\r\n    $('#heatmap').attr('height', window.innerHeight);\r\n    heat = simpleheat('heatmap');\r\n    heat.resize();\r\n    heat.radius(30,50);\r\n    heat.max(max).data(binsc).draw();\r\n\r\n    $('#stimuli_img').show();\r\n}\r\n\r\n\r\n/**\r\n * navigation\r\n */\r\nvar page = 1;\r\nvar oldpage = -1;\r\nvar d_consent = undefined;\r\nfunction navigation(direction) {\r\n  $('#message').hide();\r\n\r\n  $('#instruction_continue_text').html(\"&gt;\");\r\n\r\n\r\n\r\n\tif (page == 2 && direction == 'continue') {\r\n    if (cam.initialized == 1) {\r\n      $('#instruction').fadeOut(1000);\r\n      setTimeout(\"prepareBlock();\", 2000);\r\n    }\r\n  } else if (page == 2 && direction == 'pause') {\r\n    $('#instruction_continue').html(\"continue\").css({'font-size': '1.7em'});\r\n    $('#instruction_2').find(\"h1\").html('short pause (block ' + block_no + ' of ' + design.blocks.length + \")\");\r\n    $('#setup_first').hide();\r\n    $('#setup_after').show();\r\n\r\n    $('#instruction').show(function() {\r\n      if (block_no == design.blocks.length) {\r\n        page++;\r\n      } else {\r\n        $('#instruction_2').fadeIn(300);\r\n        $('#webgazerVideoFeed').show();\r\n      }\r\n    });\r\n  } else if  (direction == 'continue') {\r\n    page++;\r\n  } else if (direction == 'back') {\r\n    page--;\r\n  }\r\n  page = page < 1 ? 1 : page;\r\n  page = page > $('.instruction_page').length ? $('.instruction_page').length : page;\r\n  page <= 1 ? $('#instruction_back').hide() : $('#instruction_back').show();\r\n  page >= $('.instruction_page').length ? $('#instruction_continue').hide() : $('#instruction_continue').show();\r\n  page >= 3 ? $('#instruction_back,#instruction_continue').hide() : \"\";\r\n  block_no > 0 ? $('#instruction_back').hide() : \"\";\r\n\r\n  if (oldpage != page) { // if we stay at the same page, we avoid unnecessary animations\r\n    $('.instruction_page').hide();\r\n    $('#instruction_'+page).fadeIn(300);\r\n  }\r\n  // start up webcam\r\n  if (page == 2 && cam.initialized == 0) {\r\n    $(\"#instruction_continue\").hide();\r\n    loadWebgazer();\r\n  }\r\n  oldpage = page;\r\n}\r\n\r\n\r\nvar cl;\r\nvar t_start = new Date().getTime();\r\n$('document').ready(function() {\r\n  $('#stimulus').hide();\r\n  $('#calibration_dot').hide();\r\n  $('#setup_after').hide();\r\n  $('#instruction_message').hide();\r\n  $('#therest').hide();\r\n\r\n\r\n  $('#start_button').click(function() {\r\n    $(this).hide();\r\n    prepareBlock();\r\n  });\r\n\r\n  $('body').keypress(function(e) {\r\n    //e.preventDefault();\r\n    switch(e.keyCode) {\r\n\r\n    }\r\n  });\r\n\r\n  $('#instruction_continue').click(function() {\r\n    navigation('continue');\r\n  });\r\n\r\n  $('#instruction_back').click(function() {\r\n    navigation('back');\r\n  });\r\n\r\n  $( \"#f_crowdflowerid\" ).tooltip({\r\n    show: {\r\n      effect: \"slideDown\",\r\n      delay: 250\r\n    }\r\n  });\r\n\r\n\r\n  /*\r\n  $('#f_birthday').datepicker({\r\n      dateFormat: 'yy/mm/dd',\r\n      changeYear: true,\r\n      changeMonth: true,\r\n      yearRange: \"-100:+0\"\r\n  });\r\n  */\r\n  var select = $('#f_birthday');\r\n  for (var i=18;i <= 100; i++){\r\n    select.append('<option value=\"'+i+'\">'+i+'</option>')\r\n  }\r\n\r\n  window.localStorage.clear();\r\n\r\n  var ss = window.location.hash.substring(1);\r\n  $('#cf_reference,#asd_reference,#rub_reference,#cf_code').hide();\r\n  if (ss == \"cf\") { // crowdflower-reference\r\n    $('#cf_reference,#cf_code').show();\r\n  } else if (ss == \"rub\") {\r\n    $('#rub_reference').show();\r\n\t} else {\r\n    $('#asd_reference').show();\r\n\t}\r\n\r\n  var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\r\n  var is_firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  if (is_chrome || is_firefox) {\r\n    page = 0;\r\n    navigation('start');\r\n  } else {\r\n    $('#instruction').hide();\r\n    $('#message').html('Thank you very much for your interest in our study.<br /><br />Unfortunately, your browser is not supported by our website. To participate, you need either the browser \"Google Chrome\" or \"Firefox\".<br /><br />Do download one of these securely and free of charge, please follow one of these links: <a href=\"https://www.google.com/chrome/browser/desktop/\" target=\"_blank\">Google Chrome</a> or <a href=\"https://www.mozilla.org/de/firefox/new/\" target=\"_blank\">Mozilla Firefox</a>').show();\r\n  }\r\n});\r\n\r\n\r\n\r\n/*\r\n\r\n function drawLoop() {\r\n    requestAnimFrame(drawLoop);\r\n    var p = webgazer.getCurrentPrediction();\r\n    if (p !== null) {\r\n        console.log(p);\r\n        $('body').append('<span class=\"p\" style=\"top: '+p.y+'px; left: '+p.x+'px\"></span>');\r\n        measurements++;\r\n    }\r\n    t = (new Date().getTime() - start)/1000;\r\n    cam.overlay.getContext('2d').clearRect(0,0,cam.width,cam.height);\r\n    if (cl.getCurrentPosition()) {\r\n        //console.log(cl.getCurrentPosition()[0]);\r\n        //cl.draw(overlay);\r\n    }\r\n}\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.onbeforeunload = function() {\r\n  //webgazer.end(); //Uncomment if you want to save the data even if you reload the page.\r\n}\r\n</script>\r\n",
      "text": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-21) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n{{text}}",
      "survey": "<!--\r\n  Author: Dr. Anthony Haffey\r\n\r\n  Collector: Cat/Kitten/Cat release\r\n  A program for running experiments on the web\r\n  Copyright 2012-2018 Mikey Garcia & Nate Kornell\r\n\r\n  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.\r\n\r\n  This program is distributed in the hope that it will be useful,\r\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n  GNU General Public License for more details.\r\n\r\n  You should have received a copy of the GNU General Public License\r\n  along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\n  Kitten/Cat release (2019-2021) author: Dr. Anthony Haffey\r\n\r\n  (team@someopen.solutions)\r\n-->\r\n<style>\r\nbody{\r\n  background-color:#5F9EA0;\r\n  width:100%;\r\n  height:100%;\r\n}\r\ntd{\r\n  padding:10px;\r\n  vertical-align: top;\r\n}\r\n\r\n/*\r\n*\telements by id\r\n*/\r\n\r\n#content{\r\n  width:95%;\r\n}\r\n#proceed_button{\r\n  display:none;\r\n  float:right;\r\n}\r\n#survey_outline{\r\n\tposition: \t\t\t\t\tfixed;\r\n  top: \t\t\t\t\t\t\t\t50%;\r\n  left: \t\t\t\t\t\t\t50%;\r\n\theight: \t\t\t\t\t\t90%;\r\n\toverflow: \t\t\t\t\tauto;\r\n\t-webkit-transform: \ttranslate(-50%, -50%);\r\n  transform: \t\t\t\t\ttranslate(-50%, -50%);\r\n  background-color: \twhite;\r\n\tmin-width:        \t900px;\r\n\tmax-width:        \t9000px;\r\n\tborder-radius:    \t20px;\r\n  border-color:     \t#069;\r\n  border-style:     \tsolid;\r\n  border-width:     \t5px;\r\n\tpadding:            10px;\r\n}\r\n#survey_tabs{\r\n  padding:            20px;\r\n}\r\n#this_survey_id{\r\n  padding:            20px;\r\n  display:            none;\r\n}\r\n\r\n/*\r\n*\telements by class\r\n*/\r\n.feedback_span_multiple{\r\n  display: none;\r\n  margin:  10px;\r\n}\r\n.feedback_span_single{\r\n  display: none;\r\n  padding: 10px;\r\n}\r\n.likert_table td{\r\n  padding:    1px;\r\n  text-align: center;\r\n}\r\n.likert_table td:hover{\r\n  color: blue;\r\n}\r\n.score_total{\r\n  display: none;\r\n}\r\n.show_tab{\r\n  margin: 5px;\r\n}\r\n.survey_btn{\r\n\twhite-space: normal;\r\n\tword-wrap: \t initial;\r\n}\r\n.table_break{\r\n\twidth:    100%;\r\n\theight:   300px;\r\n\toverflow: auto;\r\n}\r\n\r\n\r\n/*\r\n* by Bora Alp Arat at https://stackoverflow.com/questions/21684101/css-vertical-scrollbar-padding-left-right-in-ul-possible\r\n*/\r\n::-webkit-scrollbar {\r\n  width: 14px;\r\n  height: 18px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  height: 6px;\r\n  border: 4px solid rgba(0, 0, 0, 0);\r\n  background-clip: padding-box;\r\n\t-webkit-border-radius: 7px;\r\n  background-color: rgba(0, 102, 153, 0.5);\r\n  -webkit-box-shadow: inset -1px -1px 0px rgba(0, 0, 0, 0.05), inset 1px 1px 0px rgba(0, 0, 0, 0.05);\r\n}\r\n::-webkit-scrollbar-button {\r\n  width: 0;\r\n  height: 0;\r\n  display: none;\r\n}\r\n::-webkit-scrollbar-corner {\r\n  background-color: transparent;\r\n}\r\n</style>\r\n<div id=\"everything\">\r\n\t<div id=\"survey_outline\"></div>\r\n</div>\r\n<span id=\"scales_span\"></span>\r\n<script>\r\n/*\r\n* Retrieving settings\r\n*/\r\n\r\nif(typeof(settings) !== \"undefined\"){\r\n  settings = [settings];\r\n} else {\r\n  settings = {};\r\n}\r\n\r\n/*\r\n* vertical vs. horizontal tabs\r\n*/\r\n\r\nif(typeof(settings.tab_hor_vert) == \"undefined\" || settings.tab_hor_vert.toLowerCase() == \"horizontal\"){\r\n  settings.tab_hor_vert = \"horizontal\";\r\n  var please_wait = $(\"<div>\");\r\n  var this_survey = $(\"<div>\");\r\n  var survey_tabs = $(\"<div>\");\r\n  var proceed_btn = $(\"<input>\");\r\n  please_wait.attr(\"id\", \"please_wait_div\")\r\n             .html(\"Loading... Please wait\");\r\n  this_survey.addClass(\"needs-validation\")\r\n             .attr(\"id\", \"this_survey_id\")\r\n             .attr(\"novalidate\", true);\r\n  survey_tabs.attr(\"id\", \"survey_tabs\")\r\n             .addClass(\"border-top\")\r\n             .addClass(\"border-primary\")\r\n             .css(\"text-align\", \"right\")\r\n  proceed_btn.addClass(\"btn\")\r\n             .addClass(\"btn-primary\")\r\n             .attr(\"id\", \"proceed_button\")\r\n             .attr(\"type\", \"submit\")\r\n             .attr(\"value\", \"Proceed\")\r\n  $(\"#survey_outline\").append(please_wait)\r\n                      .append(this_survey)\r\n                      .append(survey_tabs)\r\n                      .append(proceed_btn);\r\n\r\n} else if (settings.tab_hor_vert.toLowerCase() == \"vertical\"){\r\n  $(\"#survey_outline\").html(\r\n    '<table>' +\r\n      '<tr>' +\r\n        '<td valign=\"top\" class=\"border-right border-primary\">'+\r\n          '<div id=\"survey_tabs\"></div>' +\r\n        '</td>' +\r\n        '<td>'+\r\n          '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n          '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>' +\r\n          '<input type=\"button\" value=\"Proceed\" class=\"btn btn-primary\" id=\"proceed_button\">'+\r\n        '</td>'+\r\n      '</tr>'+\r\n    '</table>'\r\n  );\r\n} else if(settings.tab_hor_vert.toLowerCase() == \"none\"){\r\n  $(\"#survey_outline\").html(\r\n    '<div id=\"survey_tabs\" style=\"display:none\"></div>' +\r\n    '<div id=\"please_wait_div\">Please wait while survey is downloading</div>'+\r\n    '<div id=\"this_survey_id\" class=\"needs-validation\" novalidate></div>'\r\n  );\r\n} else {\r\n  bootbox.alert(\"If you are the researcher, please check the 'settings for this survey. The input for 'tab_hor_vert' appears to be invalid. Please change it to 'horizontal' or 'vertical' or 'none' or remove 'tab_hot_vert' altogether from the settings, which will make the tabs invisible\");\r\n}\r\n\r\n/*\r\n* Defining objects\r\n*/\r\n\r\npage_break_management = {\r\n  breaks_remaining : 0,\r\n  breaks_index     : 0\r\n}\r\n\r\nproceed_object = {\r\n  type:[],\r\n  name:[],\r\n  break_no:[]\r\n};\r\n\r\nscoring_object={\r\n  scales:[],\r\n  scale_scores:[],\r\n  update_scales:function(this_survey){\r\n    headers = Object.keys(this_survey[0]);\r\n    this.scales = headers.filter(elm => elm.includes(\"score:\"));\r\n    var scales_html = '';\r\n    this.scales.forEach(function(element){\r\n      element = element.replace(\": \",\":\");\r\n      scales_html += \"<input name='\"+element.replace(/ |:/g,\"_\")+\"' class='score_total \"+element.replace(/ |:/g,\"_\")+\"' disabled>\";\r\n    });\r\n    $(\"#scales_span\").html(scales_html);\r\n  }\r\n}\r\n\r\nsurvey_obj = {};\r\n\r\n/*\r\n* Element actions\r\n*/\r\n\r\n/*\r\n$(function() {\r\n  $( \".datepicker\" ).datepicker({\r\n    dateFormat : 'mm/dd/yy',\r\n    changeMonth : true,\r\n    changeYear : true,\r\n    yearRange: '-100y:c+nn',\r\n    maxDate: '-1d'\r\n  });\r\n});\r\n*/\r\n\r\n\r\n$('#ExperimentContainer').css('transform','scale(1,1)');\r\n\r\n$(\"#proceed_button\").on(\"click\",function(){\r\n  var proceed = true;\r\n  var tabs    = document.getElementsByClassName('show_tab active');\r\n  if(tabs.length > 0){\r\n    var current_tab       = document.getElementsByClassName(\r\n      'show_tab active')[0]\r\n        .id\r\n        .replace(\"_button\", \"\")\r\n        .replace(\"tab_\",    \"\");\r\n    var response_elements = $('#table_'+current_tab).find('.response_element');\r\n\r\n  } else {\r\n    response_elements = $(\".table_break:visible\").find(\".response_element\");\r\n  }\r\n\r\n  for(var i = 0; i < response_elements.length; i++){\r\n    [row_no,item_name] = retrieve_row_no_item_name(response_elements[i]);\r\n    var this_optional = survey_obj.data[row_no].optional.toLowerCase();\r\n\r\n    if(this_optional.indexOf(\"no\") !== -1){\r\n      this_optional = this_optional.split(\"-\");       // find out whether there's a minimal number of responses\r\n      if(this_optional.length == 1){                  // default is that length needs to be at least 1\r\n        var min_resp_length = 1;\r\n      } else if(this_optional.length == 2) {\r\n        var min_resp_length = this_optional[1];\r\n      } else {\r\n        bootbox.alert(\"Error - you appear to have too many '-' characters in the 'optional' column\");\r\n        return false;\r\n      }\r\n    } else {\r\n      min_resp_length = 0;\r\n    }\r\n\r\n    var quest_resp = isJSON($(\"#\"+response_elements[i].id).val());\r\n    if (quest_resp.length < min_resp_length){\r\n      proceed = false;\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-success\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-danger\");\r\n    } else {\r\n\t\t\t$(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-dark\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).removeClass(\"text-danger\");\r\n      $(\"#\"+response_elements[i].id.replace(\"response\",\"question\")).addClass(\"text-success\");\r\n    }\r\n  }\r\n\r\n  if(current_tab == survey_obj.tabs && proceed){\r\n    if(typeof(sql_surveys) == \"undefined\"){\r\n      //$(\".table_break\");\r\n      var next_table_no = parseFloat($(\".table_break:visible\")[0].id.replace(\"table\",\"\")) + 1;\r\n\r\n      if($(\".table_break#table\"+next_table_no).length == 0){\r\n        if(typeof(Phase) !== \"undefined\"){\r\n          Phase.submit();\r\n        } else {\r\n          bootbox.alert(\"You've finished! Click on the preview button to restart.\")\r\n        }\r\n      } else {\r\n        $(\".table_break\").hide();\r\n        $(\".table_break#table\" + next_table_no).show();\r\n      }\r\n    } else {\r\n      $(\"#survey_outline\").html(\"<h1> You have finished the preview of this survey.</h1>\");\r\n    }\r\n  } else if(current_tab < survey_obj.tabs && proceed) {\r\n    current_tab ++;\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"btn-secondary\");\r\n    $(\"#tab_\"+current_tab+\"_button\").removeClass(\"disabled\");\r\n    $(\"#tab_\"+current_tab+\"_button\").addClass(\"btn-outline-dark\");\r\n    $(\"#tab_\"+current_tab+\"_button\").click();\r\n  } else if(proceed == false){\r\n    bootbox.alert(\"You're missing some responses. Please fill in all the answers for the questions in red above.\");\r\n  } else if(current_tab > survey_obj.tabs){\r\n    bootbox.alert(\"Error - please contact Scientific Open Solutions about this problem, error 'Survey_001'.\");\r\n  }\r\n});\r\n\r\n//by qwerty at https://stackoverflow.com/questions/2116558/fastest-method-to-replace-all-instances-of-a-character-in-a-string\r\nString.prototype.replaceAll = function(str1, str2, ignore){\r\n  return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n}\r\n\r\n\r\n/*\r\nFunctions\r\n*/\r\n\r\nfunction clean_item(this_item){\r\n  if(this_item.indexOf(\"'\") !== -1 |\r\n     this_item.indexOf('\"') !== -1){\r\n    bootbox.alert(\"Please avoid apostraphes or quote marks in the responses the participant can give. These cause problems with smooth running of surveys. This occurs when you wrote:<br><br>\" + this_item);\r\n  }\r\n  return(this_item);\r\n}\r\n\r\nfunction generate_feedback_string(feedback_array, this_index, feedback_color, row){\r\n  if(feedback_array){                 //i.e. if it's not null\r\n    if(feedback_array.length > 1){\r\n      return \"<div class='feedback_span_multiple \"+row[\"item_name\"].toLowerCase()+\"_feedback' style='color:\"+feedback_color[this_index]+\"'>\"+feedback_array[this_index]+\"</div>\";\r\n    } else {\r\n      return \"<div class='feedback_span_single \" +\r\n      row[\"item_name\"].toLowerCase() + \"_feedback' style='color:\" +\r\n      feedback_color[this_index] +\r\n      \"'>\" +\r\n      feedback_array[this_index] +\r\n      \"</div>\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nfunction get_feedback(row){\r\n  if(typeof(row[\"feedback\"]) !== \"undefined\" && row[\"feedback\"] !== \"\"){\r\n    feedback_array = row[\"feedback\"].split(\"|\");\r\n    if(typeof(row[\"feedback_color\"]) == \"undefined\"){\r\n      bootbox.alert(\"The color for the feedback options has not been set. If you created this questionnaire, please add a column 'feedback_color' to your survey and separate the colors by a pipe (|) character.\");\r\n    }\r\n    feedback_color = row[\"feedback_color\"].split(\"|\");\r\n  } else {\r\n    feedback_array = null;\r\n    feedback_color = '';\r\n  }\r\n  return [feedback_array,feedback_color];\r\n}\r\n\r\nfunction isJSON(str) {\r\n  try {\r\n    return JSON.parse(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n\r\nfunction likert_update(this_element){\r\n\r\n  [row_no,item_name] = retrieve_row_no_item_name(this_element);\r\n\r\n  $(\".row_\"+row_no).removeClass(\"active\");\r\n  $(\".row_\"+row_no).removeClass(\"btn-primary\");\r\n  $(\".row_\"+row_no).addClass(\"btn-outline-primary\");\r\n  $(this_element).removeClass(\"btn-outline-primary\");\r\n  $(this_element).addClass(\"btn-primary\");\r\n  $(\"#survey_\"+item_name+\"_response\").val(this_element.value);\r\n  response_check(this_element);\r\n}\r\n\r\nfunction load_survey(survey){\r\n  /*\r\n  * are we in preview?\r\n  */\r\n  if(typeof(parent.collector_survey_preview) !== \"undefined\"){\r\n    survey_content = survey;\r\n  } else if(typeof(parent.master) !== \"undefined\" && parent.master.surveys.preview){\r\n    survey_content = survey;\r\n    survey_obj.mods = parent.master.mods;\r\n  } else {\r\n    survey = survey.toLowerCase().replace(\".csv\",\"\") + \".csv\";\r\n\r\n    if(typeof(parent.parent.project_json.surveys) !== \"undefined\" &&\r\n       typeof(parent.parent.project_json.surveys[survey]) !== \"undefined\"){\r\n      survey_content = parent.parent.project_json.surveys[survey];\r\n      survey_obj.mods = parent.parent.project_json.mods;\r\n\r\n    } else if(\r\n      typeof(parent.parent.project_json.surveys) !== \"undefined\" &&\r\n      typeof(parent.parent.project_json.surveys[\r\n        survey.replace(\".csv\",\"\")\r\n      ])\r\n    ){\r\n\t\t\tsurvey_content = parent.parent.project_json.surveys[survey.replace(\".csv\",\"\")];\r\n      survey_obj.mods = parent.parent.project_json.mods;\r\n\t\t}\telse {\r\n      bootbox.alert(\"Survey \" + survey  + \" doesn't appear to exist\");\r\n    }\r\n  }\r\n  process_returned_questionnaire(survey_content);\r\n}\r\n\r\nfunction process_question(row, row_no){\r\n  row.values = row.values == \"\" ? row.answers : row.values;\r\n  if(row_check(\"page_break\", row)){\r\n    page_break_management.breaks_remaining++;\r\n    question_td = \"</tr></table><table id='table\" +\r\n      page_break_management.breaks_remaining +\r\n      \"' style='display:none' class='table_break'></tr>\";\r\n  } else {\r\n    if(\r\n      typeof(row[\"values\"]) !== \"undefined\" & typeof(row[\"values\"]) !== \"function\"\r\n    ){ //to address microsoft edge issue.\r\n      value_array = row[\"values\"].split(\"|\");\r\n    } else {\r\n      value_array='';\r\n    }\r\n\r\n    if(row[\"item_name\"].indexOf(\" \") !== -1){\r\n      bootbox.alert(\"Please note that the 'item name' '\" +\r\n        row['item_name'] +\r\n        \"' is invalid because it has at least one space. Please use underscores instead of spaces. If you're not the creator of this task, please contact the person who created it.\"\r\n      );\r\n    }\r\n\r\n    /*\r\n    * class for scoring\r\n    */\r\n\r\n    var this_class = \"\";\r\n    for(var i=0;i<scoring_object.scales.length;i++){\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\r\n          \"score: \",\"\"\r\n        ).replace(/ |-/,\"\") + \" \";\r\n      }\r\n      if(row[scoring_object.scales[i].toLowerCase()]==\"r1\"){\r\n        this_class += scoring_object.scales[i].toLowerCase().replace(\"score: \",\"\").replace(\" \",\"_\")+\"-r1 \";\r\n      }\r\n    }\r\n\r\n    /*\r\n    * adding to row to help with \"write\" function\r\n    */\r\n    var row_x = JSON.parse(\r\n      JSON.stringify(row)\r\n    );\r\n    row_x[\"row_no\"] = row_no;\r\n    row_x[\"this_class\"] = this_class;\r\n\r\n    [feedback_array,feedback_color] = get_feedback(row);\r\n\r\n\r\n    question_td = '<input type=\"hidden\" class=\"response_element row_' + row_no + '\" id=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" name=\"survey_' +\r\n      row[\"item_name\"].toLowerCase() +\r\n      '_response\" value=\"\">';\r\n\r\n    /*\r\n    * Survey settings\r\n    */\r\n    [row_ques_perc,row_resp_perc] = row_perc(row[\"question_width\"]);\r\n\r\n    if(typeof(settings.feedback_before_response) == \"undefined\"){\r\n      settings.feedback_before_response = true;\r\n    }\r\n\r\n    if(typeof(settings.lock_after_feedback) == \"undefined\"){\r\n      settings.lock_after_feedback = false;\r\n    }\r\n\r\n    if(typeof(row[\"type\"]) == \"undefined\"){\r\n      return false;\r\n    }\r\n\r\n    if(\r\n      typeof(survey_obj.mods) !== \"undefined\" &&\r\n\t\t\ttypeof(survey_obj.mods[row.type]) !== \"undefined\"\r\n    ){\r\n      var mod_html = survey_obj.mods[row.type].contents;\r\n\r\n      Object.keys(row).forEach(function(attribute){\r\n        mod_html = mod_html.replaceAll(\"{{\"+attribute+\"}}\",row[attribute]);\r\n      });\r\n      question_td += mod_html;\r\n    } else {\r\n      switch(row[\"type\"].toLowerCase()){\r\n        case \"page_start\":\r\n          var tabs_html = $(\"#survey_tabs\").html();\r\n          if(settings.tab_hor_vert == \"horizontal\"){\r\n            span_div = \"span\";\r\n          } else if(settings.tab_hor_vert == \"vertical\"){\r\n            span_div = \"div\";\r\n          }\r\n          if(typeof(survey_obj.tabs) == \"undefined\"){\r\n            survey_obj.tabs = 0;\r\n          } else {\r\n            survey_obj.tabs++;\r\n          }\r\n          if(survey_obj.tabs == 0){ //i.e. is the first tab\r\n            active_button = \"btn-outline-primary active\";\r\n          } else {\r\n            active_button = \"btn-secondary disabled\";\r\n          }\r\n          if(settings.tab_hor_vert == \"vertical\"){\r\n            var vert_btn_block = \"btn-block\";\r\n          } else {\r\n            var vert_btn_block = \"\";\r\n          }\r\n\r\n          tabs_html +=  '<'+span_div+' class=\"btn-group-toggle\" data-toggle=\"buttons\">'+\r\n            '<label id=\"tab_' + survey_obj.tabs + '_button\" class=\"btn show_tab '+active_button+' '+vert_btn_block+'\">'+\r\n              '<input type=\"checkbox\" checked autocomplete=\"off\">'+ row['text'] +\r\n            '</label>'+\r\n          '</'+span_div+'>';\r\n\r\n          $(\"#survey_tabs\").html(tabs_html);\r\n\r\n          page_break_indexes = [];\r\n          survey_obj.data.forEach(function(row,this_index){\r\n            if(typeof(row.type) !== \"undefined\" && row.type.toLowerCase() == \"page_start\"){\r\n              page_break_indexes.push(this_index);\r\n            }\r\n          });\r\n\r\n          if(survey_obj.tabs > 0){\r\n            question_td += \"</td><td></td></tr></table></div><div class='survey_page' id='tab_\" + survey_obj.tabs + \"' style='display:none'><table id='table_\" + survey_obj.tabs + \"' class='table_break'><tr>\";\r\n          } else {\r\n            question_td += \"</td><td></td></tr></table><div class='survey_page' id='tab_\"+survey_obj.tabs+\"' ><table id='table_\"+survey_obj.tabs+\"' class='table_break'><tr>\";\r\n          }\r\n          break;\r\n        case \"checkbox\":\r\n        case \"checkbox_vertical\":\r\n          question_td += write(\"checkbox_vertical\",row_x);\r\n          break;\r\n        case \"checkbox_horizontal\":\r\n          question_td += write(\"checkbox_horizontal\",row_x);\r\n          break;\r\n        case \"checkbox_single\":\r\n          question_td += write(\"checkbox_single\", row_x);\r\n          break;\r\n        case \"date\":\r\n          question_td += write(\"date\",row_x);\r\n        break;\r\n        case \"dropdown\":\r\n\t\t\t\tcase \"select\":\r\n          question_td += write(\"dropdown\",row_x);\r\n        break;\r\n        case \"email\":\r\n          question_td += write(\"email\", row_x);\r\n        break;\r\n        case \"google_slide\":\r\n        case \"jumbled\":\r\n        case \"instruct\":\r\n          // these are defined elsewhere to take the whole row\r\n          break;\r\n        case \"likert\":\r\n          question_td += write(\"likert\", row_x);\r\n        break;\r\n        case \"number\":\r\n          question_td += write(\"number\", row_x);\r\n          break;\r\n        case \"para\":\r\n          question_td += write(\"para\", row_x);\r\n          break;\r\n        case \"radio\":\r\n        case \"radio_vertical\":\r\n          question_td += write(\"radio_vertical\", row_x);\r\n          break;\r\n        case \"radio_horizontal\":\r\n          question_td += write(\"radio_horizontal\", row_x);\r\n        break;\r\n\r\n        case \"report_score\":\r\n            question_td += \"<input disabled class='form-control score_\" + row[\"item_name\"] + \" \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' type='text' name='survey_\"+row['item_name'].toLowerCase()+\"'>\";\r\n        break;\r\n\r\n        case \"text\":\r\n          question_td += write(\"text\", row_x);\r\n        break;\r\n      }\r\n    }\r\n    if(feedback_array){\r\n        question_td += \"<button class='btn btn-outline-info feedback_btn \"+row[\"item_name\"]+\"_item row_\"+row_no+\"' data-toggle='tooltip' id='reveal_\"+row[\"item_name\"].toLowerCase()+\"_feedback' onclick='reveal_answers(this)'>Show</button>\";\r\n    }\r\n  }\r\n  if(typeof(row[\"type\"])== \"undefined\"){\r\n      return '';\r\n  } else {\r\n    if(row[\"type\"].toLowerCase() == \"instruct\"){\r\n      row_html  = write(\"instruct\",row);\r\n    } else if(row[\"type\"].toLowerCase() == \"jumbled\"){\r\n      //row_html  = question_td + write(\"jumbled\",row); <-- this is better, but being paused for placement work Anthony is doing\r\n      row_html  = write(\"jumbled\",row);\r\n\t\t} else if(row[\"type\"].toLowerCase() == \"likert\"){\r\n\r\n\t\t\tif(typeof(row[\"side_by_side\"]) !== \"undefined\" &&\r\n\t\t\t\t row[\"side_by_side\"].toLowerCase() == \"yes\"){\r\n\r\n\t\t\t\tvar row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar row_html = \"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2'>\" +\r\n\t\t\t\t\t\t\trow[\"text\"] +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\" +\r\n\t\t\t\t\t\"<tr>\" +\r\n\t\t\t\t\t\t\"<td colspan='2' align='center'>\" +\r\n\t\t\t\t\t\t\tquestion_td +\r\n\t\t\t\t\t\t\"</td>\" +\r\n\t\t\t\t\t\"</tr>\";\r\n\t\t\t}\r\n\r\n\r\n    } else if(row[\"type\"].toLowerCase()==\"google_slide\") {\r\n      var row_html=\"<td colspan='2'>\"+row[\"text\"]+\"</label></td>\";\r\n    } else if(typeof(row[\"no_text\"]) !== \"undefined\" && row[\"no_text\"] == \"on\"){\r\n      var row_html=\"<td colspan='2'>\"+question_td+\"</td>\";\r\n    } else {\r\n      if(row['text'].toLowerCase() == \"page_start\" | row['type'].toLowerCase() == \"page_start\"){\r\n        row_html = question_td;\r\n      } else {\r\n        var row_html=\"<td class='text-primary' id='survey_\"+row[\"item_name\"].toLowerCase().replace(\" \",\"_\")+\"_question' style='width:\"+row_ques_perc+\"; text-align:right'>\"+row[\"text\"]+\"</td><td>\"+question_td+\"</label></td>\";\r\n      }\r\n    }\r\n    if(typeof(row[\"optional\"]) !== \"undefined\"){\r\n      if(row[\"optional\"].toLowerCase() == \"no\"){\r\n        proceed_object.name.push(row[\"item_name\"]);\r\n        proceed_object.type.push(row[\"type\"]);\r\n        proceed_object.break_no.push(page_break_management.breaks_remaining);\r\n      }\r\n    }\r\n    if(typeof(row[\"shuffle_question\"]) == \"undefined\" || row[\"shuffle_question\"].toLowerCase() == \"off\"){\r\n      this_shuffle='none';\r\n    } else {\r\n      this_shuffle=row[\"shuffle_question\"];\r\n    }\r\n    return [row_html,this_shuffle];\r\n  }\r\n}\r\n\r\nfunction process_score(row_no, values_col, this_response, item, values_reverse ){\r\n  item_values = survey_obj.data[row_no][values_col].split(\"|\");\r\n  if(typeof(values_reverse) !== \"undefined\" && values_reverse == \"r\"){\r\n    item_values.reverse();\r\n  }\r\n  item_answers      = survey_obj.data[row_no][\"answers\"].split(\"|\");\r\n  var this_value    = item_values[item_answers.indexOf(this_response)];\r\n  $(\"#survey_\" + item + \"_score\").val(this_value);\r\n  if(typeof(this_value) !== \"undefined\"){\r\n    return parseFloat(this_value);\r\n  }\r\n}\r\n\r\nfunction process_returned_questionnaire(data){\r\n  survey_obj.data = data;\r\n  survey_obj.data = Papa.parse(\r\n    Papa.unparse(survey_obj.data),{\r\n      header:true,\r\n      beforeFirstChunk: function(chunk) {\r\n        var rows = chunk.split( /\\r\\n|\\r|\\n/ );\r\n        var headings = rows[0].toLowerCase();\r\n        rows[0] = headings;\r\n        return rows.join(\"\\r\\n\");\r\n      },\r\n    }\r\n  ).data;\r\n  survey_obj.scales = {};\r\n  var col_headers = Object.keys(survey_obj.data[0]);\r\n  col_headers.forEach(function(header){\r\n    if(header.indexOf(\"score:\")==0){\r\n      var original_header = header;\r\n      header = header.replace(\"score: \",\"\");\r\n      header = header.replace(\"score:\",\"\");\r\n      survey_obj.scales[header] = {};\r\n      survey_obj.scales[header].questions = {};\r\n\r\n      for(var i = 1; i < survey_obj.data.length; i++){\r\n        row = survey_obj.data[i];\r\n        if(row[original_header] !== \"\" && typeof(row[original_header]) !== \"undefined\"){\r\n          survey_obj.scales[header].questions[i] = row[original_header];\r\n        }\r\n      }\r\n    }\r\n  });\r\n  write_survey(survey_obj.data,\"this_survey_id\");\r\n  $(\"#please_wait_div\").hide();\r\n  $(\"#proceed_button\").show();\r\n  $('html, body').animate({\r\n    scrollTop: $(\"#survey_outline\").offset().top\r\n  }, 1000);\r\n}\r\n\r\nfunction row_perc(this_rat){\r\n\tif(typeof(this_rat) == \"undefined\"){\r\n    row_resp_perc = \"50%\";\r\n    row_ques_perc = \"50%\";\r\n  } else {\r\n    row_resp_perc = parseFloat(100-this_rat.replace(\"%\",\"\"))+\"%\";\r\n    row_ques_perc = parseFloat(this_rat.replace(\"%\",\"\"))+\"%\";\r\n  }\r\n  return [row_ques_perc,row_resp_perc];\r\n}\r\n\r\nfunction response_check(submitted_element){\r\n  switch(submitted_element.type){\r\n    case \"checkbox\":\r\n\r\n      console.log(submitted_element);\r\n      console.log(submitted_element.name);\r\n\r\n\r\n\r\n      var checked_responses = $(\"[name='\"+submitted_element.name+\"']:checked\");\r\n      if(checked_responses.length){ //i.e. more than 0\r\n        var values = [];\r\n        for(var i = 0; i < checked_responses.length; i++){\r\n          values.push(checked_responses[i].value);\r\n        }\r\n        $(\"#\"+submitted_element.name+\"_response\").val(JSON.stringify(values));\r\n      } else {\r\n        $(\"#\"+submitted_element.name+\"_response\").val(\"\");\r\n      }\r\n      console.log($(\"#\"+submitted_element.name+\"_response\").val());\r\n      console.log($(\"#\"+submitted_element.name+\"_response\"));\r\n\r\n      break;\r\n\r\n      case \"button\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.innerHTML\r\n        );\r\n      break;\r\n\r\n      case \"number\":\r\n      case \"radio\":\r\n      case \"select-one\":\r\n      case \"text\":\r\n      case \"textarea\":\r\n        $(\"#\" + submitted_element.name + \"_response\").val(\r\n          submitted_element.value\r\n        );\r\n      break;\r\n    }\r\n    update_score();\r\n}\r\n\r\nfunction retrieve_row_no_item_name(this_element){\r\n  var these_classes = this_element.className.split(\" \");\r\n  var row_no;\r\n  var item_name;\r\n  these_classes.forEach(function(this_class){\r\n    if (this_class.indexOf('row_') > -1) {\r\n      row_no = this_class.replace(\"row_\",\"\");\r\n    }\r\n    if (this_class.indexOf('_item') > -1) {\r\n      item_name = this_class.replace(\"_item\",\"\").toLowerCase();\r\n    }\r\n  });\r\n  return [row_no,item_name];\r\n}\r\n\r\nfunction reveal_answers(this_element){\r\n  var this_response = $(\"#\"+this_element.id.replace(\"reveal_\",\"survey_\").replace(\"_feedback\",\"_response\")).val();\r\n  response_present = this_response == \"\" ? false : true;\r\n\r\n  if(settings.feedback_before_response == false && response_present == false){\r\n    bootbox.alert(\"Please respond before trying reveal the feedback.\")\r\n  } else {\r\n    if($(\"#\"+this_element.id).hasClass(\"btn-outline-info\")){\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).show(500);\r\n      if(settings.lock_after_feedback){\r\n        var item_class = this_element.id.replace(\"_feedback\",\"_item\").replace(\"reveal_\",\"\");\r\n        $(\".\"+item_class).prop(\"disabled\",true);\r\n        document.getElementsByClassName(item_class).title = \"The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback\";\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).html(\"Locked\");\r\n        document.getElementById(this_element.id).title = 'The person creating this content has set it so that your answers are locked in once you have chosen to see the feedback';\r\n        $(\"#\"+this_element.id).addClass(\"disabled\");\r\n      } else {\r\n        $(\"#\"+this_element.id).html(\"Hide\");\r\n        $(\"#\"+this_element.id).removeClass(\"btn-outline-info\");\r\n        $(\"#\"+this_element.id).addClass(\"btn-info\");\r\n      }\r\n    } else {\r\n      $(\"#\"+this_element.id).html(\"Show\");\r\n      $(\".\"+this_element.id.replace(\"reveal_\",\"\")).hide(500);\r\n      $(\"#\"+this_element.id).addClass(\"btn-outline-info\");\r\n      $(\"#\"+this_element.id).removeClass(\"btn-info\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction row_check(type, row){\r\n  if(type = \"page_break\"){\r\n    return (\r\n      typeof(row[\"text\"]) !== \"undefined\" &&\r\n\t\t  typeof(row[\"type\"]) !== \"undefined\" &&\r\n\t\t  row['text'].toLowerCase() == \"page_break\" |\r\n      row['type'].toLowerCase() == \"page_break\"\r\n    )\r\n\r\n  } else if(type=\"\"){\r\n\r\n  }\r\n}\r\n\r\n// http://stackoverflow.com/questions/962802#962890\r\nfunction shuffle(array) {\r\n  var tmp, current, top = array.length;\r\n  if(top) while(--top) {\r\n    current = Math.floor(Math.random() * (top + 1));\r\n    tmp = array[current];\r\n    array[current] = array[top];\r\n    array[top] = tmp;\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction shuffle_answers(row){\r\n  if(\r\n    typeof(row[\"shuffle_answers\"]) !== \"undefined\" &&\r\n    row[\"shuffle_answers\"].toLowerCase() == \"yes\"\r\n  ){\r\n    var answers = row[\"answers\"].split(\"|\");\r\n    order = shuffle([...Array(answers.length).keys()]);\r\n\r\n    var ordered_answers = order.map(function(position){\r\n      return answers[position];\r\n    });\r\n    row[\"answers\"] = ordered_answers.join(\"|\");\r\n\r\n    if(row[\"values\"].indexOf(\"|\") !== -1){\r\n      var values = row[\"values\"].split(\"|\");\r\n      var ordered_values = order.map(function(position){\r\n        return values[position];\r\n      });\r\n      row[\"values\"] = ordered_values.join(\"|\");\r\n    }\r\n  }\r\n  return row;\r\n}\r\n\r\nfunction update_score(){\r\n  var scales = Object.keys(survey_obj.scales);\r\n  scales.forEach(function(scale){\r\n    this_scale = survey_obj.scales[scale];\r\n    var questions = Object.keys(this_scale.questions);\r\n    var this_score = 0;\r\n    complete_score = true;\r\n\r\n    questions.forEach(function(row_no){\r\n      var item = survey_obj.data[row_no].item_name.toLowerCase();\r\n      var this_response = $(\"#survey_\"+item+\"_response\").val(); //response\r\n      var normal_reverse = this_scale.questions[row_no];\r\n\r\n      if(normal_reverse.indexOf(\"-\") == -1){\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,\"values\",this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,\"values\",this_response,item);\r\n        }\r\n      } else {\r\n        values_reverse = normal_reverse.split(\"-\");\r\n        values_col     = values_reverse[0].toLowerCase();\r\n        normal_reverse = values_reverse[1];\r\n        var multiplier = parseFloat(normal_reverse.replace(\"r\",\"\"));\r\n\r\n        if(normal_reverse.indexOf(\"r\") == 0){ //reverse the values\r\n          this_value = process_score(row_no,values_col,this_response,item,\"r\");\r\n        } else {\r\n          this_value = process_score(row_no,values_col,this_response,item);\r\n        }\r\n      }\r\n      if(typeof(this_value) !== \"undefined\"){\r\n        this_score += multiplier * this_value;\r\n      } else {\r\n        complete_score = false;\r\n      }\r\n    });\r\n    if(complete_score){\r\n      $(\".score_\"+scale).addClass(\"bg-success\");\r\n      $(\".score_\"+scale).removeClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'All relevant questions have been answered';\r\n    } else {\r\n      $(\".score_\"+scale).removeClass(\"text-success\");\r\n      $(\".score_\"+scale).addClass(\"bg-danger\");\r\n      $(\".score_\"+scale).addClass(\"text-light\");\r\n      document.getElementsByClassName(\"score_\"+scale).title = 'At least one relevant questions has NOT been answered';\r\n    }\r\n    $(\".score_\"+scale).val(this_score);\r\n  });\r\n}\r\n\r\nfunction write(type, row){\r\n  var this_html = \"\";\r\n  [feedback_array, feedback_color] = get_feedback(row);\r\n  row = shuffle_answers(row);\r\n  row[\"item_name\"] = row[\"item_name\"].toLowerCase();\r\n\r\n  if(type == \"checkbox_horizontal\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-checkbox\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"checkbox\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-checkbox\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_single\"){\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.attr(\"data-toggle\", \"buttons\");\r\n        this_div.addClass(\"btn-group-toggle\");\r\n    var this_label = $(\"<label>\");\r\n        this_label.addClass(\"btn\");\r\n        this_label.addClass(\"btn-outline-primary\");\r\n        this_label.html(row[\"answers\"]);\r\n    var this_checkbox = $(\"<input>\");\r\n        this_checkbox[0].id = row[\"item_name\"];\r\n        this_checkbox[0].name = \"survey_\" +\r\n          row[\"item_name\"].toLowerCase();\r\n        this_checkbox[0].type = \"checkbox\";\r\n        this_checkbox.attr(\"checked\",true);\r\n        this_checkbox\r\n          .addClass(\"response\")\r\n          .addClass(\r\n            row[\"item_name\"] +\r\n            '_item row_' +\r\n            row[\"row_no\"]\r\n          );\r\n    this_div.append(this_label);\r\n    this_label.append(this_checkbox)\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"checkbox_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i = 0; i < options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color, row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\");\r\n      var this_checkbox = $(\"<input>\");\r\n          this_checkbox[0].id= row[\"item_name\"]+ i;\r\n          this_checkbox[0].value = options[i];\r\n          this_checkbox[0].type = \"checkbox\";\r\n          this_checkbox[0].name = 'survey_'+\r\n            row[\"item_name\"].toLowerCase();\r\n          this_checkbox\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-checkbox\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"item_name\"] + \"_item_row\");\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerHTML = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_checkbox)\r\n              .append(this_label);\r\n\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"date\"){\r\n    var input = $(\"<input>\");\r\n        input.addClass(\"response\")\r\n             .addClass(\"custom-control\")\r\n             .addClass(\"datepicker\")\r\n             .addClass(\"date\")\r\n             .addClass(row[\"item_name\"] + \"_item\")\r\n             .addClass(\"row_\" + row[\"row_no\"])\r\n             .attr(\"name\", \"survey_\" + row['item_name'])\r\n             .attr(\"type\", \"text\");\r\n\r\n  } else if(type == \"dropdown\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_dropdown = $(\"<select>\");\r\n        this_dropdown.addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(\"txt-primary\")\r\n          .addClass(row[\"item_name\"] + \"_item\")\r\n          .addClass(\"row_\" + row[\"row_no\"])\r\n          .addClass(\"collector_button\")\r\n          .attr(\"name\", \"survey_\" + row[\"item_name\"])\r\n          .css(\"margin\", \"0px\")\r\n          .css(\"width\", \"auto\");\r\n\r\n    /* this will be necessary to tidy up jumbled sentences\r\n    if(typeof(row[\"item_name_old\"]) !== \"undefined\"){\r\n      this_dropdown.addClass(row[\"item_name_old\"] + \"_item\");\r\n    }\r\n    */\r\n\r\n    this_dropdown.append(\"<option selected disabled hidden>-- no option selected --</option>\");\r\n    options.forEach(function(this_option){\r\n      this_dropdown.append(\r\n        \"<option>\" + this_option + \"</option>\"\r\n      );\r\n    });\r\n    var this_html = this_dropdown[0].outerHTML;\r\n\r\n  } else if(type == \"email\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(\"response\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .attr(\"type\", \"email\")\r\n          .attr(\"name\", 'survey_' + row['item_name']);\r\n\r\n  } else if(type == \"instruct\"){\r\n    this_html += \"<td colspan='2'>\" + row[\"text\"] + \"</td>\";\r\n  } else if(type == \"jumbled\"){\r\n    var this_td = $(\"<td>\");\r\n        this_td.attr(\"colspan\",2) ;\r\n\r\n    var this_div = $(\"<div>\");\r\n        this_div.addClass(\"form-inline\")\r\n                .addClass(\"bg-secondary\")\r\n                .addClass(\"text-white\")\r\n                .css(\"width\", \"100%\")\r\n                .css(\"padding\", \"20px\")\r\n                .css(\"margin\", \"20px\")\r\n                .css(\"border-radius\", \"5px\");\r\n\r\n    var question = row[\"text\"].split(\"|\");\r\n    questions_html = question.map(function(text,index){\r\n      if(index == question.length - 1){\r\n        return text;\r\n      } else {\r\n        var row_x = row;\r\n        row_x[\"item_name_old\"] = row_x[\"item_name\"];\r\n        row_x[\"item_name\"]     = row_x[\"item_name\"] + \"_\" + index;\r\n        var row_html = text + write(\"dropdown\", row_x)\r\n          .replace(\"margin: 0px\",\"margin: 5px\");\r\n        row_x[\"item_name\"] = row_x[\"item_name_old\"];\r\n        return row_html;\r\n      }\r\n    }).join(\"\");\r\n\r\n    this_td.append(this_div);\r\n    this_div.append(questions_html);\r\n\r\n    this_html = this_td[0].outerHTML;\r\n\r\n  } else if(type == \"likert\"){\r\n    // set styles\r\n    if(typeof(row[\"btn_width\"]) == \"undefined\"){\r\n      row[\"btn_width\"] = \"auto\"\r\n    }\r\n    if(typeof(row[\"side_width\"]) == \"undefined\"){\r\n      var side_width = \"auto\";\r\n    }\r\n\r\n    // create and build these elements\r\n    var this_div = $(\"<div>\");\r\n    if(typeof(row[\"side_text\"]) !== \"undefined\" &&\r\n      row[\"side_text\"] !== \"\"\r\n    ){\r\n      side_text = row[\"side_text\"].split(\"|\");\r\n      side_text = side_text.map(function(this_side){\r\n        var this_span = $(\"<span>\");\r\n            this_span.css(\"width\", side_width)\r\n                     .css(\"padding\", \"20px\")\r\n                     .addClass(\"text-primary\")\r\n                     .html(\"<b>\" + this_side + \"</b>\");\r\n        return this_span[0].outerHTML;\r\n      });\r\n    } else {\r\n      side_text = [\"\",\"\"];\r\n    }\r\n\r\n    this_div\r\n      .addClass(\"btn-group\")\r\n      .addClass(\"btn-group-toggle\")\r\n      .append(side_text[0])\r\n      .attr(\"data-togle\",\"buttons\");\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length;i++){\r\n      var this_button = $(\"<button>\");\r\n          this_button\r\n            .attr(\"autocomplete\", \"off\")\r\n            .attr(\"id\", 'likert_' + row[\"row_no\"] + '_' + i)\r\n            .attr(\"onclick\",'likert_update(this)')\r\n            .attr(\"value\", values[i])\r\n            .addClass(\"btn\")\r\n            .addClass(\"btn-outline-primary\")\r\n            .addClass(\"survey_btn\")\r\n            .addClass(\r\n              row[\"item_name\"] + '_item row_' + row[\"row_no\"]\r\n            )\r\n            .css(\"width\", row[\"btn_width\"])\r\n            .html(clean_item(options[i]));\r\n      this_div.append(this_button);\r\n    }\r\n    this_div.append(side_text[1]);\r\n    this_html += this_div[0].outerHTML;\r\n\r\n  } else if(type == \"number\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type = \"number\";\r\n        this_input[0].name = 'survey_' + row['item_name'];\r\n        this_input\r\n          .addClass(\"response\")\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"]);\r\n    this_html += this_input[0].outerHTML;\r\n\r\n  } else if(type == \"para\"){\r\n    var this_textarea = $(\"<textarea>\");\r\n        this_textarea[0].name = \"survey_\" + row['item_name'];\r\n        this_textarea\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\");\r\n        this_textarea.css(\"width\", \"100%\")\r\n                     .css(\"height\", \"200px\");\r\n    this_html += this_textarea[0].outerHTML;\r\n\r\n  } else if(type == \"radio_horizontal\"){\r\n\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var this_table = $(\"<table>\");\r\n        this_row = this_table[0].insertRow()\r\n    for(var i=0; i<options.length;i++){\r\n      var this_cell = this_row.insertCell();\r\n      var this_div = $(\"<div>\");\r\n          this_div.addClass(\"custom-control\");\r\n          this_div.addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type = \"radio\";\r\n          this_input[0].id = row[\"item_name\"] + i;\r\n          this_input[0].name = 'survey_' + row[\"item_name\"];\r\n          this_input.addClass(\"custom-control-input\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(row[\"custom-control\"])\r\n            .addClass(row[\"custom-radio\"])\r\n            .addClass(row[\"item_name\"] +'_item')\r\n            .addClass('row_' + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"] + i;\r\n          this_label[0].innerText = options[i];\r\n          this_label.addClass(\"custom-control-label\");\r\n      this_div.append(this_input)\r\n              .append(this_label);\r\n      this_cell.innerHTML = this_div[0].outerHTML;\r\n    }\r\n    this_html += this_table[0].outerHTML;\r\n\r\n  } else if(type == \"radio_vertical\"){\r\n    var options = row[\"answers\"].split(\"|\");\r\n    var values  = row[\"values\"].split(\"|\");\r\n    for(var i=0; i<options.length; i++){\r\n      feedback_string = generate_feedback_string(\r\n        feedback_array, i, feedback_color,row\r\n      );\r\n      var this_div = $(\"<div>\");\r\n          this_div\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\");\r\n      var this_input = $(\"<input>\");\r\n          this_input[0].type  = \"radio\";\r\n          this_input[0].id    = row[\"item_name\"] + i;\r\n          this_input[0].value = options[i];\r\n          this_input[0].name  = 'survey_' + row[\"item_name\"];\r\n          this_input\r\n            .addClass(\"custom-control-input\")\r\n            .addClass(row[\"this_class\"])\r\n            .addClass(\"custom-control\")\r\n            .addClass(\"custom-radio\")\r\n            .addClass(\"response\")\r\n            .addClass(row[\"item_name\"] + \"_item_row_\" + row[\"row_no\"]);\r\n      var this_label = $(\"<label>\");\r\n          this_label[0].htmlFor = row[\"item_name\"]+i;\r\n          this_label.addClass(\"custom-control-label\");\r\n          this_label.html(options[i]);\r\n      this_div\r\n        .append(this_input)\r\n        .append(this_label)\r\n        .append(feedback_string);\r\n      this_html += this_div[0].outerHTML;\r\n    }\r\n\r\n  } else if(type == \"text\"){\r\n    var this_input = $(\"<input>\");\r\n        this_input[0].type=\"text\";\r\n        this_input[0].name=\"survey_\" + row['item_name'];\r\n        this_input\r\n          .addClass(\"form-control\")\r\n          .addClass(row[\"item_name\"] + \"_item row_\" + row[\"row_no\"])\r\n          .addClass(\"response\")\r\n    this_html += this_input[0].outerHTML;\r\n  }\r\n\r\n  switch(type){\r\n    case \"checkbox_vertical\":\r\n    case \"radio_vertical\":\r\n      // do nothing\r\n      break;\r\n    default:\r\n      this_html += generate_feedback_string(\r\n        feedback_array,\r\n        0,\r\n        feedback_color,\r\n        row\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (this_html);\r\n}\r\n\r\nfunction write_survey(this_survey, this_id){\r\n  scoring_object.update_scales(this_survey);\r\n  survey_html = \"<table class='table_break' id='table0'>\";\r\n  this_survey_object={\r\n    content:[],\r\n    shuffle_question:[],\r\n    content_new_order:[],\r\n    shuffled_content:[],\r\n    shuffled_arrays:{},\r\n  }\r\n\r\n  survey_html += \"<tr>\";\r\n  for(i = 0; i < this_survey.length; i++){\r\n    row = this_survey[i];\r\n    row_html = process_question(row,i);\r\n\t\tthis_survey_object.content.push(row_html[0]);\r\n    this_survey_object.shuffle_question.push(row_html[1]);\r\n\t}\r\n\r\n\tunique_shuffles = this_survey_object.shuffle_question.filter((v,i,a)=>a.indexOf(v)==i); //by Camilo Martin on https://stackoverflow.com/questions/1960473/unique-values-in-an-array\r\n\r\n\tfor(var i=0;i<unique_shuffles.length;i++){\r\n    if(typeof(unique_shuffles[i]) !== \"undefined\" &&\r\n      unique_shuffles[i] !== \"none\" &&\r\n      unique_shuffles[i] !== \"\"){\r\n        shuffled_content = this_survey_object.shuffle_question.map(function(element,index){\r\n    \t   if(typeof(element)!== \"undefined\" && element.toLowerCase() !== \"none\" && element.toLowerCase() == unique_shuffles[i]){\r\n  \t       return this_survey_object.content[index];\r\n    \t   }\r\n    \t}).filter(elm => typeof(elm) !== \"undefined\");\r\n    \tnew_order = shuffle(shuffled_content);\r\n    \tthis_survey_object.shuffled_arrays[unique_shuffles[i]]=new_order; // add new array with dynamic name\r\n    }\r\n\t}\r\n\r\n\tfor(var i=0;i<this_survey_object.content.length;i++){\r\n    var this_index = Object.keys(this_survey_object.shuffled_arrays).indexOf(this_survey_object.shuffle_question[i]);\r\n    if(this_index !== -1){\r\n      //take first item off relevant list and delete item\r\n      var this_item = this_survey_object.shuffled_arrays[Object.keys(this_survey_object.shuffled_arrays)[this_index]].shift();\r\n      this_survey_object.content_new_order[i]=this_item;\r\n    } else {\r\n      this_survey_object.content_new_order[i]=this_survey_object.content[i];\r\n    }\r\n\t}\r\n\r\n\tqs_in_order = this_survey_object.content_new_order.join(\"</tr><tr>\");\r\n\tqs_in_order += \"</tr>\";\r\n\r\n\tsurvey_html += qs_in_order;\r\n\tsurvey_html += \"</table>\";\r\n\r\n\t$(\"#\" + this_id).html(survey_html);\r\n\r\n  $(\".response\").on(\"change\", function(){\r\n    response_check(this);\r\n  })\r\n\r\n  $(\"#\" + this_id).show(1000); //scroll to top\r\n\r\n\t$(\".show_tab\").on(\"click\",function(){\r\n    if(this.className.indexOf(\"disabled\") == -1){\r\n      $(\".show_tab\").removeClass(\"active\");\r\n      $(\".survey_page\").hide();\r\n      $(\"#\"+this.id.replace(\"_button\",\"\")).show();\r\n    } else {\r\n      bootbox.alert(\"You have not yet unlocked this tab - maybe try clicking on <b>Proceed</b>?\");\r\n    }\r\n\t});\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n  $(\".custom-checkbox\").prop(\"indeterminate\",true);\r\n}\r\n\r\n/*\r\n* Load survey\r\n*/\r\ncurrent_survey = \"{{survey}}\";\r\nif(typeof(Phase) !== \"undefined\"){\r\n  Phase.set_timer(function(){\r\n    load_survey(current_survey);\r\n  },100);\r\n} else {\r\n  load_survey(current_survey);\r\n}\r\n</script>\r\n",
      "instruct_keyboard": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten/Cat release (2019-21) author: Dr. Anthony Haffey (team@someopen.solutions)\r\n*/\r\n-->\r\n<style>\r\n#instruct_text{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n#trial_contents{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:600;\r\n}\r\n* {\r\ncursor: none;\r\n}\r\n</style>\r\n<div id=\"trial_contents\">\r\n  <div id=\"instruct_text\">{{text}}</div>\r\n</div>\r\n\r\n<script>\r\n$(window).bind('keydown', function(event) {\r\n  Phase.submit();\r\n});\r\n</script>",
      "instruct": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Phase.submit()\">Proceed</button>\n  </div>\n</div>"
    },
    "file": "selectbook",
    "user": {
      "beep": "",
      "flashcard": "<!--\r\n  Flashcard trialtype\r\n  Authors:\r\n    Harry Sullivan\r\n    Dr. Anthony Haffey\r\n    University of Reading\r\n    \r\n---development---\r\n[\r\n  {\"text\":\"your practice text\"; }\r\n]\r\n---development---\r\n\r\n\r\n-->\r\n\r\n\r\n<style>\r\n.card_btn{\r\n  width:100%;\r\n  margin:1px;\r\n}\r\n\r\n.flashcard_box{\r\n  border: 2px solid teal;\r\n  width: 600px;\r\n  height: 400px;\r\n  text-align: center;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n\r\n#everything{\r\n  margin:auto;\r\n  width:800px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: right;\r\n}\r\n#flashcard_image{\r\n  display:none;\r\n  width: 200px;\r\n  height:200px\r\n}\r\n#flashcard_text{\r\n  margin:5px;\r\n  padding:10px;\r\n}\r\n</style>\r\n\r\n<body>\r\n<div id=\"everything\">\r\n  <h5>Perception and Neuroscience Flashcards</h5>\r\n  <p class=\"text-right\">Select a flashcard from the panel on the left and use the buttons below to flip the card or hide it.</p>\r\n  <p class=\"text-right\">You will be alerted once 30 minutes have elapsed.</p>\r\n  <table id=\"card_table\">\r\n    <tr>\r\n      <td id=\"card_list\"></td>\r\n      <td>\r\n          <div class=\"flashcard_box\" id=\"box_0\">\r\n            <div id=\"flashcard_text\"></div>\r\n            <img id=\"flashcard_image\"/>\r\n          </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td> </td>\r\n      <td>\r\n        <button type=\"button\" onclick=\"frontFlip()\" class=\"btn btn-primary\">Front</button>\r\n        <button type=\"button\" onclick=\"backFlip()\" class=\"btn btn-primary\">Back</button>\r\n      </div>\r\n    </td>\r\n  </table>\r\n</div>\r\n</body>\r\n\r\n<script>\r\n\r\nvar flashcards_sheet = \"{{flashcards_sheet}}\".toLowerCase();\r\n\r\nif(typeof(parent.parent.project_json.all_stims[flashcards_sheet]) !== \"undefined\"){\r\n  var cards_array = parent.parent.Collector.PapaParsed(\r\n    parent.parent.project_json.all_stims[flashcards_sheet]\r\n  );\r\n  \r\n  if(parent.parent.Project.is_exe){\r\n    var home_dir = parent.parent.Collector\r\n      .electron\r\n      .fs\r\n      .home_dir();\r\n    cards_array = cards_array.map(function(row){\r\n      row.image = row.image.replace(\"../User\", home_dir + \"/User\")\r\n      return row;\r\n    });\r\n  }\r\n  \r\n} else {\r\n  \r\n  cards_array = [\r\n    {\r\n      answer: \"Derived from the greek ‘synth’ (meaning together) and ethesia (sensation).<br>The joining of two senses, one sensory or cognitive pathway connects to another which results in involuntary experiences in another sensory or cognitive pathway↵60-100 different forms of synaesthesia have been identified (Simner, 2013)\",\r\n      cue: \"synaesthesia\",\r\n      \"font-size\": \"20px\"\r\n    },\r\n    {\r\n      answer: \"Ink colour is the same as the word written.<br>This test identifies if synaesthesia is automatic/pre-attentive. <br> Meier & Rothen (2009): This study was able to train non-synaesthetic individuals to behave like synaesthetes\",\r\n      cue: \"Modified stroop task\",\r\n      \"font-size\": \"20px\"\r\n    }\r\n  ]\r\n}\r\n\r\nvar current_card = 0; // this acts as a placeholder for the current flashcard\r\nvar no_of_cards = cards_array.length;\r\nvar cues = cards_array.map(function(card, index){\r\n  return \"<button onClick='loadCard(this.id)' class='btn btn-primary btn-sm card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.cue + \"</button><br>\";\r\n});\r\n\r\n$(\"#card_list\").html(cues);\r\nfunction loadCard(clicked_id) {\r\n  current_card = clicked_id;\r\n  frontFlip();\r\n}\r\n\r\nfunction backFlip() {\r\n  $(\".flashcard_box\").css(\r\n    \"font-size\",\r\n    cards_array[current_card][\"font-size\"]\r\n  );\r\n  var this_card = cards_array[current_card][\"answer\"];\r\n  \r\n  if(cards_array[current_card].competition == \"yes\"){\r\n    $(\"#flashcard_text\").css(\"background-color\",\"red\");\r\n    $(\"#flashcard_text\").css(\"color\",\"white\");\r\n  } else {\r\n    $(\"#flashcard_text\").css(\"background-color\",\"white\");\r\n    $(\"#flashcard_text\").css(\"color\",\"black\");\r\n  }\r\n  \r\n  if(cards_array[current_card].image_back == \"yes\"){\r\n    $(\"#flashcard_image\").attr(\"src\", cards_array[current_card].image);\r\n    $(\"#flashcard_image\").show();\r\n  } else {\r\n    $(\"#flashcard_image\").hide();\r\n  }\r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\nfunction hideMe(){\r\n  $(\"#flashcard_text\").html(\"\")\r\n}\r\nfunction frontFlip(){\r\n  var this_card = cards_array[current_card][\"cue\"];\r\n  $(\".flashcard_box\").css(\"font-size\",\"25px\");\r\n  \r\n  if(cards_array[current_card].competition == \"yes\"){\r\n    $(\"#flashcard_text\").css(\"background-color\",\"red\");\r\n    $(\"#flashcard_text\").css(\"color\",\"white\");\r\n  } else {\r\n    $(\"#flashcard_text\").css(\"background-color\",\"white\");\r\n    $(\"#flashcard_text\").css(\"color\",\"black\");\r\n  }\r\n  \r\n  if(cards_array[current_card].image_front == \"yes\"){\r\n    $(\"#flashcard_image\").attr(\"src\", cards_array[current_card].image);\r\n    $(\"#flashcard_image\").show();\r\n  } else {\r\n    $(\"#flashcard_image\").hide();\r\n  }\r\n  \r\n  $(\"#flashcard_text\").html(this_card);\r\n}\r\n</script>\r\n",
      "instruct_practice": "<!--\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\n    A program for running experiments on the web\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\n\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License version 3 as published by\n    the Free Software Foundation.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\n \t\t\n\t\tKitten/Cat release (2019-2021) author: Dr. Anthony Haffey (team@someopen.solutions)\t\t\n*/\n\n---development---\n[\n  {\"text\":\"your practice text\"}\n]\n---development---\n\n-->\n<style>\n#instruct_text{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#proceed_button{\n  position:absolute;\n  right: 20px;\n}\n#trial_contents{\n  position: absolute;\n  top:0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin:auto;\n  width:600;\n  height:600;\n}\n</style>\n<div id=\"trial_contents\">\n  <div id=\"instruct_text\">{{text}}</div>\n  <div>\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\n  </div>\n</div>",
      "jumbled_sentence": "<!--\r\n  Jumbled sentence questions\r\n  \r\n-->\r\n<style>\r\n.question_box{\r\n  width: 400px;\r\n  height: 250px;\r\n  text-align: center;\r\n  line-height: 200px;\r\n  font-size: 25px;\r\n  border-radius: 15px;\r\n}\r\n#sentence_html{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n</style>\r\n<table id = \"questionTable\">\r\n  <tr>\r\n    <td><div class=\"question_box\" id=\"box_0\"></div></td>\r\n  </tr>\r\n</table>\r\n\r\n<div id=\"sentence_html\" class=\"form-inline\">\r\n\r\n\r\n<script>\r\n// var select = document.getElementById(\"selectAnswer\");\r\n// var options1 = [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"];\r\n// for(var i = 0; i < options1.length; i++) {\r\n    // var opt = options1[i];\r\n    // var dropDown = document.createElement(\"option\");\r\n    // dropDown.textContent = opt;\r\n    // dropDown.value = opt;\r\n    // select.appendChild(dropDown);\r\n// }\r\n/*\r\nvar allQuestions = [\r\n  {\r\n    question: \"The \" + \"<select id = 'selectAnswer'</select>\" + \" are at the junction between \" + \"<select id = 'selectAnswer'</select>\" + \" and \" + \"<select id = 'selectAnswer'</select>\" + \", they signal forces imposed on, or generated by, the \" + \"<select id = 'selectAnswer'</select>\" + \".\",\r\n    answers: [\"Golgi tendon organs\", \"muscles\", \"tendons\", \"muscles\"]\r\n  }\r\n];\r\n*/\r\n\r\nif(typeof(parent.parent.exp_json.all_stims[\"{{jumbled}}\"]) !== \"undefined\"){\r\n  var raw_questions = Trial.get_stim(\"{{jumbled}}\");\r\n  console.log(\"raw_questions\");\r\n  console.log(raw_questions);\r\n  var long_questions = Papa.parse(raw_questions,{\r\n    header: true\r\n  }).data;\r\n  \r\n  console.dir(\"long_questions\");\r\n  console.log(long_questions);\r\n  \r\n  /*\r\n  * group the items together to make each sentence - based on https://stackoverflow.com/a/35092559/4490801\r\n  */ \r\n  var sentence_numbers = [...new Set(long_questions.map(item => item.sentence))];\r\n  \r\n  console.dir(\"howdy\");\r\n  \r\n  allQuestions = [];\r\n  sentence_numbers.forEach(function(sentence_number){\r\n    var this_sentence = long_questions.filter(row => row.sentence == sentence_number);\r\n    allQuestions.push(this_sentence);\r\n  });\r\n  \r\n  \r\n} else {\r\n  var allQuestions = [\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ],\r\n    [\r\n      {\r\n        type: \"text\",\r\n        content: \"The \"\r\n      },{\r\n        type: \"dropdown\",\r\n        content: \"--Please Select--,Golgi tendon organs,muscles,tendons,muscles\"\r\n      },  \r\n    ]\r\n  ];\r\n \r\n}\r\n\r\n\r\n\r\nvar this_question = allQuestions[0];  \r\nvar question = this_question.map(function(sentence_part, index){\r\n  console.dir(sentence_part);\r\n  if(sentence_part.type == \"text\"){\r\n    return sentence_part[\"content\"];\r\n  } else {\r\n    sentence_part.content = sentence_part.content.split(\",\");\r\n    return \"<select class='form-control' style='width:auto'> <option>\" + sentence_part.content.join(\"</option><option>\") + \"</option> </select><br>\";\r\n  }\r\n});\r\n\r\n$(\"#sentence_html\").html(question.join(\"\"));\r\n\r\n\r\n/*\r\n\r\n\r\nvar question = allQuestions.map(function(card, index){\r\n  if(card.type == \"text\"){\r\n    return card[\"sentence\"][content];\r\n    return \"allQuestions[sentence][content]\";\r\n  } else {\r\n    return \"<select> <option>\" + card.content + \"</option> </select><br>\";\r\n  }\r\n\r\n});\r\n$(\".question_box\").html(question);\r\n*/\r\n\r\n\r\n// var currentQuestion = 0;\r\n// var question = allQuestions.map(function(card, index){\r\n//   return \"<button onClick='loadCard(this.id)' class='btn btn-primary card_btn' data-bs-toggle='button' autocomplete='off' id=\" + index + \">\" + card.answers + \"</button><br>\";\r\n// });\r\n// $(\"#selectAnswer\").html(answers);\r\n// var this_question = allQuestions[currentQuestion][\"answers\"];\r\n// $(\".question_box\").html(this_question);\r\n\r\n</script>\r\n",
      "randomised_feedback": "<div id=\"feedback_div\"></div>\n\n\n<script>\n\n\nPhase.set_timer(function(){\n  var survey_response = parent.parent.project_json.responses.filter(function(row){\n    return row.survey == \"group_b_session_1.csv\";\n  })[0];\n  \n  var these_responses = Object.keys(survey_response).filter(key => key.indexOf(\"survey_b\") !== -1);\n  console.log(these_responses);\n  \n  var _responses = these_responses.filter(key => key.indexOf(\"_response\") !== -1);\n  \n  _responses.forEach(function(_response){\n    console.log(_response);\n    console.log(these_responses.indexOf(_response))\n    //delete(these_responses[these_responses.indexOf(_response)]);\n  });\n  \n  var response_object = {};\n  these_responses.forEach(function(response){\n    var split_response = response.split(\"_\");\n    if(split_response.length == 2){\n      response_object[split_response[1]] = survey_response[response];\n    } else {\n      if(typeof(response_object[split_response[1]]) == \"undefined\"){\n        response_object[split_response[1]] = [];\n      }\n      response_object[split_response[1]].push(survey_response[response]);\n    }\n  });\n  responses_array = [];\n  Object.keys(response_object).forEach(function(key){\n    responses_array.push(response_object[key]);\n  });\n\n  var questions = Papa.parse(Phase.get_stim(\"feedback_1.csv\"), {\n    header:true\n  }).data;\n  \n  $(\"#feedback_div\").html(\"\");\n  questions.forEach(function(question){\n    var row_responses = responses_array.shift();\n    \n    var this_row = $(\"<div>\");\n    if(question.type == \"jumbled\"){\n      var response_text = question.text.split(\"|\");\n      var response_string = \"\";\n      response_text.forEach(function(part){\n        \n        response_string += part;\n        if(row_responses.length > 0){\n          var row_response = row_responses.shift();\n          console.log(row_response);\n          response_string += \"<b class='text-info'>\" + row_response + \"</b> \";\n        }\n        \n        \n      });\n      this_row.append(response_string);\n      \n      $(\"#feedback_div\").append(this_row);\n    }\n  });\n  \n},100);\n\n\n\n\n\n\n//parent.parent.project_json.all_stims[\"feedback_questions\"];\n</script>",
      "feedback": "<div id=\"feedback_div\"></div>\n\n\n<script>\n\n\nPhase.set_timer(function(){\n  var survey_response = parent.parent.project_json.responses.filter(function(row){\n    return row.survey == \"group_b_session_1.csv\";\n  })[0];\n  \n  var these_responses = Object.keys(survey_response).filter(key => key.indexOf(\"survey_b\") !== -1);\n  console.log(these_responses);\n  \n  var _responses = these_responses.filter(key => key.indexOf(\"_response\") !== -1);\n  \n  _responses.forEach(function(_response){\n    console.log(_response);\n    console.log(these_responses.indexOf(_response))\n    //delete(these_responses[these_responses.indexOf(_response)]);\n  });\n  \n  var response_object = {};\n  these_responses.forEach(function(response){\n    var split_response = response.split(\"_\");\n    if(split_response.length == 2){\n      response_object[split_response[1]] = survey_response[response];\n    } else {\n      if(typeof(response_object[split_response[1]]) == \"undefined\"){\n        response_object[split_response[1]] = [];\n      }\n      response_object[split_response[1]].push(survey_response[response]);\n    }\n  });\n  responses_array = [];\n  Object.keys(response_object).forEach(function(key){\n    responses_array.push(response_object[key]);\n  });\n\n  var questions = Papa.parse(Phase.get_stim(\"feedback_1.csv\"), {\n    header:true\n  }).data;\n  \n  $(\"#feedback_div\").html(\"\");\n  questions.forEach(function(question){\n    var row_responses = responses_array.shift();\n    \n    var this_row = $(\"<div>\");\n    if(question.type == \"jumbled\"){\n      var response_text = question.text.split(\"|\");\n      var response_string = \"\";\n      response_text.forEach(function(part){\n        \n        response_string += part;\n        if(row_responses.length > 0){\n          var row_response = row_responses.shift();\n          console.log(row_response);\n          response_string += \"<b class='text-info'>\" + row_response + \"</b> \";\n        }\n        \n        \n      });\n      this_row.append(response_string);\n      \n      $(\"#feedback_div\").append(this_row);\n    }\n  });\n  \n},100);\n\n\n\n\n\n\n//parent.parent.project_json.all_stims[\"feedback_questions\"];\n</script>",
      "selectbook": "Which book are you reading\n\n\nto do\n- nice looking background\n- language direction selection\n- choice of which book\n- choice of which chapter\n- Harry potter example\n  - with magic theme background picture\n- send user to phase with the book and chapter information\n- no buffering\n- no data quality checks at the start\n- allow user to upload a upload a spreadsheet from url?\n- Collector, turn off data quality checks\n- Advertising for support SOS on the right?\n"
    }
  }
}